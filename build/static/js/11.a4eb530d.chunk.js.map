{"version":3,"sources":["../node_modules/_lottie-web@5.5.7@lottie-web/build/player/lottie.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","root","factory","navigator","window","svgNS","locationHref","initialDefaultFrame","subframeEnabled","expressionsPlugin","isSafari","test","userAgent","cachedColors","bm_rounder","Math","round","bm_rnd","bm_pow","pow","bm_sqrt","sqrt","bm_abs","abs","bm_floor","floor","bm_max","max","bm_min","min","blitter","BMMath","ProjectInterface","i","propertyNames","len","length","random","val","absArr","createSizedArray","defaultCurveSegments","degToRads","PI","roundCorner","roundValues","flag","styleDiv","element","style","position","top","left","display","transformOrigin","webkitTransformOrigin","backfaceVisibility","webkitBackfaceVisibility","transformStyle","webkitTransformStyle","mozTransformStyle","BMEnterFrameEvent","n","c","t","d","this","type","currentTime","totalTime","direction","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","totalFrames","BMDestroyEvent","target","createElementID","_count","HSVtoRGB","h","s","v","r","g","b","p","q","RGBtoHSV","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","rgbToHex","hex","colorMap","toString","BaseEvent","prototype","triggerEvent","eventName","args","_cbs","addEventListener","callback","push","removeEventListener","bind","splice","createTypedArray","Uint8ClampedArray","Float32Array","Int16Array","value","arr","Array","apply","createNS","document","createElementNS","createTag","createElement","DynamicPropertyContainer","addDynamicProperty","prop","dynamicProperties","indexOf","container","_isAnimated","iterateDynamicProperties","_mdf","getValue","initDynamicPropertyContainer","getBlendMode","blendModeEnums","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","mode","Matrix","_cos","cos","_sin","sin","_tan","tan","_rnd","reset","props","rotate","angle","mCos","mSin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","skewFromAxis","scale","sz","setTransform","a","e","j","k","l","m","o","translate","tx","ty","tz","transform","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_p","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","equals","matr","clone","cloneFromProps","applyToPoint","x","y","z","applyToX","applyToY","applyToZ","inversePoint","pt","determinant","inversePoints","pts","retPts","applyToTriplePoints","pt1","pt2","pt3","p0","p4","p5","p12","p13","applyToPointArray","applyToPointStringified","toCSS","cssValue","roundMatrixProperty","to2dCSS","pool","math","nodecrypto","global","width","chunks","rngname","startdenom","significance","overflow","mask","ARC4","key","keylen","me","S","count","copy","slice","mixkey","seed","smear","stringseed","charCodeAt","tostring","String","fromCharCode","options","shortseed","flatten","obj","depth","result","typ","entropy","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","autoseed","arc4","prng","int32","quick","double","pass","is_math_call","state","BezierFactory","ob","getBezierEasing","nm","str","replace","beziers","bezEasing","BezierEasing","NEWTON_ITERATIONS","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","A","aA1","aA2","B","C","calcBezier","aT","getSlope","points","_mSampleValues","_precomputed","get","mX1","mY1","mX2","mY2","_precompute","_getTForX","_calcSampleValues","aX","mSampleValues","intervalStart","currentSample","lastSample","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","binarySubdivide","extendPrototype","sources","destination","sourcePrototype","attr","hasOwnProperty","getDescriptor","object","Object","getOwnPropertyDescriptor","createProxyFunction","ProxyFunction","bezFunction","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","getBezierLength","pt4","ptCoord","perc","ptDistance","curveSegments","addedLength","point","lastPoint","lengthData","bezier_length_pool","newElement","percents","lengths","BezierData","segmentLength","PointData","partial","partialLength","buildBezierData","storedData","bezierName","bezierData","getDistancePerc","initPos","lengthPos","lPerc","dir","bezier_segment_points","getSegmentsLength","shapeData","segmentsLength","segments_length_pool","closed","pathV","pathO","pathI","_length","totalLength","getNewSegment","startPerc","endPerc","t0","t1","u0","u1","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","getPointInSegment","percent","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","id","setTimeout","clearTimeout","bez","dataFunctionManager","findCompLayers","comps","layers","__used","JSON","parse","stringify","completeShapes","jLen","ks","convertPathsToAbsoluteValues","it","path","checkVersion","minimum","animVersionString","animVersion","split","checkText","minimumVersion","updateTextLayer","textLayer","documentData","iterateLayers","animationData","assets","checkChars","chars","pathData","paths","data","shapes","__converted","checkColors","iterateShapes","checkShapes","layerData","kLen","hasMask","maskProps","masksProperties","cl","moduleOb","completeData","fontManager","__complete","completeLayers","completed","tt","td","refId","singleShape","dataManager","FontManager","maxWaitingTime","emptyChar","w","size","combinedCharacters","setUpNode","font","family","parentNode","fontFamily","node","innerHTML","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","appendChild","body","offsetWidth","parent","createHelper","def","fontData","tHelper","setAttribute","fFamily","fStyle","fWeight","textContent","fClass","getContext","concat","Font","fonts","typekitLoaded","isLoaded","initTime","now","getCombinedCharacterCodes","addChars","found","ch","addFonts","defs","list","fontArr","_pendingFonts","loadedSelector","shouldLoadFont","loaded","monoCase","sansCase","fPath","fOrigin","origin","querySelectorAll","href","rel","src","sc","helper","cache","checkLoadedFonts","getCharData","_char","console","warn","getFontByName","name","fName","measureText","_char2","fontName","index","doubleSize","getComputedTextLength","singleSize","loadedCount","removeChild","PropertyFactory","initFrame","math_abs","interpolateValue","frameNum","caching","newValue","offsetTime","propType","pv","keyData","nextKeyData","fnc","iterationIndex","lastIndex","keyframes","endValue","nextKeyTime","keyTime","to","ti","ind","__fnct","segmentPerc","distanceInLine","lastFrame","_lastKeyframeIndex","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","sh","quat","qx","qy","qz","qw","heading","atan2","attitude","asin","bank","quaternionToEuler","omega","cosom","sinom","scale0","scale1","az","aw","bx","by","bz","bw","acos","slerp","createQuaternion","constructor","values","c3","s1","s2","s3","getValueAtCurrentTime","comp","renderedFrame","endTime","_caching","renderResult","setVValue","multipliedValue","mult","processEffectsSequence","elem","globalData","frameId","effectsSequence","lock","_isFirstFrame","finalValue","kf","addEffect","effectFunction","ValueProperty","vel","MultiDimensionalProperty","KeyframedValueProperty","st","KeyframedMultidimensionalProperty","arrLen","getProp","TransformPropertyFactory","TransformProperty","pre","appliedTransformations","px","py","pz","rx","ry","rz","or","sk","sa","_isDirty","applyToMatrix","mat","forceRender","precalculateMatrix","autoOriented","v1","v2","frameRate","getValueAtTime","autoOrient","_addDynamicProperty","getTransformProperty","ShapePath","_maxLength","setPathData","setLength","point_pool","doubleArrayLength","setXYAt","pos","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","init","cnt","ShapePropertyFactory","interpolateShape","previousValue","keyPropS","keyPropE","isHold","vertexValue","interpolateShapeCurrentTime","resetShape","localShapeCollection","shape1","shape2","shapesEqual","shape_pool","releaseShapes","addShape","ShapeProperty","shapeCollection_pool","newShapeCollection","KeyframedShapeProperty","EllShapeProperty","cPoint","convertEllToPath","s0","_cw","_v","StarShapeProperty","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","os","rad","roundness","perimSegment","numPts","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","currentAng","ox","oy","RectShapeProperty","convertRectToPath","v0","getShapeProp","getConstructorFunction","getKeyframedConstructorFunction","ShapeModifiers","modifiers","registerModifier","getModifier","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","DashProperty","renderer","dataProps","dashStr","dashArray","dashoffset","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","initModifierProperties","addShapeToModifier","shape","setAsAnimated","processKeys","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segments","segmentOb","shapeSegments","shapeS","shapeE","releasePathsData","release","processShapes","shapePaths","_s","totalShapeLength","edges","newShapesData","addShapes","lastShape","pop","addPaths","newPaths","addSegment","shapePath","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","tr","so","eo","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","inv","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","unshift","resetElements","elements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","cont","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","mProps","op","comparePoints","buildShapeString","pathNodes","_o","_i","shapeString","ImagePreloader","proxyImage","canvas","height","ctx","fillStyle","fillRect","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","createImageData","assetData","assetsPath","original_path","imagePath","u","getAssetsPath","img","crossOrigin","_imageLoaded","loadAssets","cb","images","_createImageData","setPath","setAssetsPath","getImage","destroy","featureSupport","maskType","filtersFactory","createFilter","filId","fil","createAlphaToLuminanceFilter","feColorMatrix","assetLoader","formatResponse","xhr","response","responseText","load","errorCallback","XMLHttpRequest","open","responseType","err","send","onreadystatechange","readyState","status","TextAnimatorProperty","textData","renderType","_hasMaskedPath","_frameId","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","TextAnimatorDataProperty","animatorProps","defaultData","textAnimator_animatables","sw","fc","fh","fs","fb","TextSelectorProp","getTextSelectorProp","LetterProps","TextProperty","keysIndex","canResize","minimumFontSize","currentData","ascent","boxWidth","defaultBoxWidth","justifyOffset","lh","lineWidths","ls","of","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","copyData","searchProperty","completeTextData","searchProperties","maskManager","getMaskProperty","getMeasures","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","animators","matrixHelper","mHelper","renderedLettersCount","letters","tLength","pi","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","letterM","letterP","defaultPropsArray","animatorJustifyOffset","animatorFirstCharOffset","justifyOffsetMult","isNewLine","getMult","anIndexes","totalChars","line","extra","an","animatorOffset","add","rot","atan","update","updated","setCurrentData","searchKeyframes","getKeyframeValue","_finalValue","currentValue","currentIndex","textKeys","buildFinalText","text","charCode","charactersArray","charAt","substr","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","styles","toLowerCase","trackingOffset","currentHeight","boxHeight","lastSpaceIndex","currentChar","uncollapsedSpaces","animatorData","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","undefined","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","_currentTextLength","finalS","finalE","xe","ne","textProperty","easer","tot","newCharsFlag","divisor","pool_factory","initialLength","_create","_release","_clone","pooling","cloned","shapeCollection","BaseRenderer","SVGRenderer","animationItem","config","svgElement","ariaLabel","title","titleElement","titleId","description","descElement","descId","maskElement","layerElement","renderConfig","preserveAspectRatio","imagePreserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","viewBoxSize","className","pendingElements","destroyed","rendererType","CanvasRenderer","clearCanvas","context","dpr","wrapper","devicePixelRatio","currentGlobalAlpha","contextData","CVContextData","transformMat","HybridRenderer","threeDElements","camera","supports3d","MaskElement","viewData","solidPath","rect","expansor","feMorph","properties","currentMasks","layerId","maskRef","filterID","expan","lastPath","lastOperator","filterId","lastRadius","createLayerSolidPath","invRect","drawPath","maskedElement","addRenderableComponent","HierarchyElement","FrameElement","TransformElement","RenderableElement","RenderableDOMElement","ProcessedElement","SVGStyleData","level","lvl","hd","pElem","msElem","SVGShapeData","transformers","caches","lStr","SVGTransformData","SVGStrokeStyleData","styleOb","SVGFillStyleData","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","Error","buildAllItems","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","setAsParent","setHierarchy","addPendingElement","searchExtraCompositions","xt","initExpressions","registerComposition","setupGlobalData","animData","fontsContainer","getAssetData","imageLoader","imagePreloader","fr","compSize","NullElement","SVGShapeElement","SVGTextElement","IImageElement","SVGCompElement","ISolidElement","configAnimation","maskId","updateContainerSize","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","getBaseElement","nextElement","insertBefore","hide","show","CVShapeElement","CVTextElement","CVImageElement","CVCompElement","CVSolidElement","ctxTransform","cProps","cTr","trProps","canvasContext","ctxOpacity","globalAlpha","cO","restore","save","actionFlag","cArrPos","duplicate","saved","savedOp","blendMode","popped","mozTransformOrigin","transformCanvas","isDashed","elementWidth","elementHeight","elementRel","animationRel","offsetHeight","par","fillType","beginPath","closePath","clip","clearRect","newDOMElement","ddd","addTo3dContainer","nextDOMElement","nextLayer","getThreeDContainerByPos","HShapeElement","HTextElement","HCameraElement","HImageElement","HCompElement","HSolidElement","startPos","endPos","perspectiveElem","createThreeDContainer","webkitTransform","threeDContainerData","build3dContainers","lastThreeDContainerData","currentContainer","resizerElem","svg","setup","cWidth","cHeight","perspective","webkitPerspective","floatingContainer","isFirstFrame","finalMat","finalTransform","mProp","getMaskelement","pathString","pathShapeValue","initHierarchy","_isParent","prepareProperties","isVisible","initTransform","_matMdf","_opMdf","ao","renderTransform","globalToLocal","transforms","ptNew","initRenderable","isInRange","hidden","isTransparent","renderableComponents","component","removeRenderableComponent","prepareRenderableFrame","checkLayerLimits","checkTransparency","renderRenderable","sourceRectAtTime","getLayerSize","initElement","initBaseData","initRendererElement","createContainerElements","createRenderableComponents","createContent","baseElement","renderElement","renderInnerContent","innerElem","destroyBaseElement","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","stop","gf","cst","opacityId","opFill","ms","ost","SVGElementsRenderer","_identityMatrix","_matrixHelper","renderContentTransform","styleData","itemData","renderPath","pathStringTransformed","redraw","iterations","lLen","renderFill","styleElem","renderGradientStroke","renderGradient","renderStroke","hasOpacity","attr1","attr2","cValues","oValues","ang","dist","createRenderFunction","ShapeTransformManager","sequences","sequenceList","transform_key_count","CVShapeData","transformsManager","styledShapes","styledShape","addTransformSequence","trNodes","BaseElement","SVGBaseElement","IShapeElement","ITextElement","ICompElement","sourceRect","tm","_placeholder","textSpans","shapesData","stylesList","shapeModifiers","itemsData","processedElements","animatedContents","SVGTintFilter","filter","filterManager","matrixFilter","effectElements","feMergeNode","feMerge","SVGFillFilter","SVGGaussianBlurEffect","feGaussianBlur","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feOffset","feFlood","feComposite","originalNodeAdded","sequence","processSequence","processSequences","getNewKey","checkMasks","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","content","textInterface","TextExpressionInterface","setBlendMode","blendModeValue","bm","sr","effectsManager","EffectsManager","getType","matteElement","transformedElement","_sizeChanged","gg","layerElementParent","masker","maskGroup","maskGrouper","feCTr","feFunc","alphaRect","ln","cp","clipId","cpGroup","renderableEffectsManager","SVGEffects","addShapeToModifiers","isShapeInAnimatedModifiers","isAnimatedWithShape","renderModifiers","lcEnum","ljEnum","searchProcessedElement","addProcessedElement","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","timeRemapped","setElements","elems","getElements","destroyElements","assetPath","pr","setAttributeNS","textContainer","buildTextContents","textArray","textContents","currentTextContent","tSpan","usesGlyphs","cachedSpansLength","tElement","justify","time","textBox","getBBox","bbox","renderedLetter","textSpan","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","filterUniqueShapes","tempShapes","areAnimated","setShapesAsAnimated","createStyleElement","elementData","lc","lj","ml","addToAnimatedContents","createGroupElement","createTransformElement","transformProperty","createShapeElement","ownTransformers","fn","setElementStyles","render","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","animatedContent","colorBlack","colorWhite","opacity","sigma","dimensions","sigmaX","sigmaY","edgeMode","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","lineLength","units","color1","color2","color3","tableR","tableG","tableB","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","call","outputDelta","inputDelta","join","col","_svgMatteSymbols","SVGMatte3Effect","filterElem","ef","filters","CVBaseElement","CVMaskElement","hasMasks","stroke","fill","currentRender","sWidth","fValue","CVEffects","HBaseElement","shapesContainer","currentBBox","textPaths","isMasked","pe","_prevMat","HEffects","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","newLength","currentSavedOp","set","createElements","globalCompositeOperation","hideElement","showElement","widthCrop","heightCrop","imgW","imgH","imgRel","canvasRel","drawImage","parentMatrix","moveTo","lineTo","bezierCurveTo","transformHelper","dashResetter","preTransforms","co","wi","da","do","addTransformToStyleList","removeTransformFromStyleList","closeStyles","shouldRender","ownTransforms","_shouldRender","renderShapeTransform","parentTransform","groupTransform","drawLayer","nodes","currentStyle","coOp","strokeStyle","grd","lineCap","lineJoin","miterLimit","setLineDash","lineDashOffset","isMain","renderGradientFill","renderStyledShape","shapeNodes","groupTransformMat","createLinearGradient","createRadialGradient","addColorStop","hasFill","hasStroke","commands","pathArr","lastFill","lastStroke","lastStrokeW","checkBlendMode","tg","addEffects","backgroundColor","_createBaseContainerElements","_renderShapeFrame","shapeCont","getTransformedPoint","calculateShapeBoundingBox","item","boundingBox","vPoint","oPoint","nextIPoint","nextVPoint","checkBounds","getBoundsOfCurve","bounds","shapeBoundingBox","xMax","right","yMax","bottom","tempBoundingBox","p3","b2ac","t2","calculateF","calculateBoundingBox","currentBoxContains","box","changed","compW","compH","innerElemStyle","strokeWidth","lineHeight","tParent","tCont","textPath","margin","Image","imageElem","mTransf","diffVector","mag","lookDir","lookLengthOnXZ","m_rotationX","m_rotationY","hasMatrixChanged","animationManager","registeredAnimations","playingAnimationsNum","_stopped","_isFrozen","removeElement","ev","animItem","animation","isPaused","subtractPlayingCount","registerAnimation","AnimationItem","setupAnimation","setData","addPlayingCount","activate","resume","nowTime","elapsedTime","advanceTime","first","loadAnimation","params","setParams","setSpeed","setDirection","play","pause","togglePause","searchAnimations","standalone","animElements","getElementsByClassName","getElementsByTagName","div","resize","goToAndStop","isFrame","freeze","unfreeze","getRegisteredAnimations","animations","currentRawFrame","frameMult","playSpeed","playDirection","playCount","autoplay","loop","animationID","timeCompleted","segmentPos","_idle","_completedLoop","animType","rendererSettings","parseInt","autoloadSegments","lastIndexOf","fileName","trigger","wrapperAttributes","attributes","getNamedItem","prerender","loadNextSegment","shift","segmentPath","loadSegments","imagesLoaded","checkLoaded","preloadImages","updaFrameModifier","waitForFontsLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","nextValue","_isComplete","checkSegments","adjustSegment","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getDuration","Expressions","stackCount","registers","pushExpression","popExpression","releaseInstances","registerExpressionProperty","expression","ExpressionManager","$bm_isInstanceOfArray","isNumerable","tOfV","Number","$bm_neg","tOfA","lenA","retArr","easeInBez","easeOutBez","easeInOutBez","sum","tOfB","lenB","sub","mul","mod","$bm_sum","$bm_sub","$bm_mul","$bm_div","$bm_mod","clamp","mm","radiansToDegrees","radians_to_degrees","degreesToRadians","degrees_to_radians","helperLengthArray","arr1","arr2","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","value2","_tMin","rnd","createPath","inTangents","outTangents","inVertexPoint","outVertexPoint","arrPlaceholder","initiateExpression","property","needsVelocity","_needsRandom","elemType","$bm_transform","effect","thisProperty","valueAtTime","defineProperty","frameDuration","displayStartTime","inPoint","outPoint","loopIn","loop_in","loopOut","loop_out","smooth","toWorld","fromWorld","fromComp","toComp","fromCompToSurface","rotation","anchorPoint","thisLayer","thisComp","velocityAtTime","__expression_functions","scoped_bm_rt","xf","eval","expression_function","numKeys","active","wiggle","freq","amp","addedAmps","periods","loopInDuration","duration","loopOutDuration","getVelocityAtTime","velocity","textIndex","textTotal","selectorValue","lookAt","elem1","elem2","fVec","pitch","easeOut","val1","val2","applyEase","easeIn","ease","nearestKey","framesToTime","frames","fps","timeToFrames","seedRandom","seedrandom","randSeed","substring","hasParent","executeExpression","_value","frameExpressionId","expressionHelpers","searchExpressions","getSpeedAtTime","speed","_cachingAtTime","getStaticValueAtTime","setGroupProperty","propertyGroup","durationFlag","cycleDuration","firstKeyFrame","ret","lastKeyFrame","initV","endV","current","repeats","lastValue","nextLastValue","firstValue","nextFirstValue","samples","sampleValue","sampleFrequency","propertyGetProp","propertyIndex","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","ShapeExpressions","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","tangentOnPath","normalOnPath","shapeValue","propertyGetShapeProp","trims","getExpressionValue","calculateExpression","isKeyframed","hasExpressions","iterateElements","view","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","pathInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","interfaceFunction","interfaces","_name","mn","numProperties","cix","contentsInterfaceFactory","transformInterface","_propertyGroup","skewAxis","defineProperties","ExpressionPropertyInterface","transformInterfaceFactory","np","_dashPropertyGroup","dashOb","addPropertyToDashOb","dash","start","outerRadius","outerRoundness","innerRoundness","innerRadius","radius","_interfaceFunction","_sourceText","_thisLayerFunction","stringValue","_prevValue","toWorldMat","sampleImage","anchorPointDescriptor","TransformExpressionInterface","anchor_point","startTime","source","MaskManagerInterface","effects","pixelAspect","numLayers","_thisFunction","xRotation","yRotation","xPosition","yPosition","zPosition","_transformFactory","compositions","_thisProjectFunction","createGroupInterface","createValueInterface","groupInterface","enabled","en","expressionProperty","effectsData","MaskInterface","_mask","_data","_masksInterfaces","defaultUnidimensionalValue","defaultMultidimensionalValue","completeProperty","expressionValue","valueProp","assign","speedAtTime","defaultGetter","UnidimensionalPropertyInterface","arrValue","MultidimensionalPropertyInterface","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","effectItem","GroupEffect","TextExpressionSelectorProp","getValueProxy","total","propertyGetTextProp","eff","lottiejs","setLocationHref","setSubframeRendering","setQuality","isNaN","inBrowser","installPlugin","plugin","getFactory","checkReady","clearInterval","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","__getFactory","version","scripts","myScript","setInterval","exports","__webpack_require__","module"],"mappings":"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","file":"static/js/11.a4eb530d.chunk.js","sourcesContent":["typeof navigator !== \"undefined\" && function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(function () {\n      return factory(root);\n    });\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory(root);\n  } else {\n    root.lottie = factory(root);\n    root.bodymovin = root.lottie;\n  }\n}(window || {}, function (window) {\n  \"use strict\";\n\n  var svgNS = \"http://www.w3.org/2000/svg\";\n  var locationHref = '';\n  var initialDefaultFrame = -999999;\n  var subframeEnabled = true;\n  var expressionsPlugin;\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  var cachedColors = {};\n  var bm_rounder = Math.round;\n  var bm_rnd;\n  var bm_pow = Math.pow;\n  var bm_sqrt = Math.sqrt;\n  var bm_abs = Math.abs;\n  var bm_floor = Math.floor;\n  var bm_max = Math.max;\n  var bm_min = Math.min;\n  var blitter = 10;\n  var BMMath = {};\n\n  (function () {\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\n    var i,\n        len = propertyNames.length;\n\n    for (i = 0; i < len; i += 1) {\n      BMMath[propertyNames[i]] = Math[propertyNames[i]];\n    }\n  })();\n\n  function ProjectInterface() {\n    return {};\n  }\n\n  BMMath.random = Math.random;\n\n  BMMath.abs = function (val) {\n    var tOfVal = typeof val;\n\n    if (tOfVal === 'object' && val.length) {\n      var absArr = createSizedArray(val.length);\n      var i,\n          len = val.length;\n\n      for (i = 0; i < len; i += 1) {\n        absArr[i] = Math.abs(val[i]);\n      }\n\n      return absArr;\n    }\n\n    return Math.abs(val);\n  };\n\n  var defaultCurveSegments = 150;\n  var degToRads = Math.PI / 180;\n  var roundCorner = 0.5519;\n\n  function roundValues(flag) {\n    if (flag) {\n      bm_rnd = Math.round;\n    } else {\n      bm_rnd = function bm_rnd(val) {\n        return val;\n      };\n    }\n  }\n\n  roundValues(false);\n\n  function styleDiv(element) {\n    element.style.position = 'absolute';\n    element.style.top = 0;\n    element.style.left = 0;\n    element.style.display = 'block';\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\n    element.style.backfaceVisibility = element.style.webkitBackfaceVisibility = 'visible';\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\n  }\n\n  function BMEnterFrameEvent(n, c, t, d) {\n    this.type = n;\n    this.currentTime = c;\n    this.totalTime = t;\n    this.direction = d < 0 ? -1 : 1;\n  }\n\n  function BMCompleteEvent(n, d) {\n    this.type = n;\n    this.direction = d < 0 ? -1 : 1;\n  }\n\n  function BMCompleteLoopEvent(n, c, t, d) {\n    this.type = n;\n    this.currentLoop = t;\n    this.totalLoops = c;\n    this.direction = d < 0 ? -1 : 1;\n  }\n\n  function BMSegmentStartEvent(n, f, t) {\n    this.type = n;\n    this.firstFrame = f;\n    this.totalFrames = t;\n  }\n\n  function BMDestroyEvent(n, t) {\n    this.type = n;\n    this.target = t;\n  }\n\n  var createElementID = function () {\n    var _count = 0;\n    return function createID() {\n      return '__lottie_element_' + ++_count;\n    };\n  }();\n\n  function HSVtoRGB(h, s, v) {\n    var r, g, b, i, f, p, q, t;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n\n    return [r, g, b];\n  }\n\n  function RGBtoHSV(r, g, b) {\n    var max = Math.max(r, g, b),\n        min = Math.min(r, g, b),\n        d = max - min,\n        h,\n        s = max === 0 ? 0 : d / max,\n        v = max / 255;\n\n    switch (max) {\n      case min:\n        h = 0;\n        break;\n\n      case r:\n        h = g - b + d * (g < b ? 6 : 0);\n        h /= 6 * d;\n        break;\n\n      case g:\n        h = b - r + d * 2;\n        h /= 6 * d;\n        break;\n\n      case b:\n        h = r - g + d * 4;\n        h /= 6 * d;\n        break;\n    }\n\n    return [h, s, v];\n  }\n\n  function addSaturationToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[1] += offset;\n\n    if (hsv[1] > 1) {\n      hsv[1] = 1;\n    } else if (hsv[1] <= 0) {\n      hsv[1] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addBrightnessToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[2] += offset;\n\n    if (hsv[2] > 1) {\n      hsv[2] = 1;\n    } else if (hsv[2] < 0) {\n      hsv[2] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addHueToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[0] += offset / 360;\n\n    if (hsv[0] > 1) {\n      hsv[0] -= 1;\n    } else if (hsv[0] < 0) {\n      hsv[0] += 1;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  var rgbToHex = function () {\n    var colorMap = [];\n    var i;\n    var hex;\n\n    for (i = 0; i < 256; i += 1) {\n      hex = i.toString(16);\n      colorMap[i] = hex.length == 1 ? '0' + hex : hex;\n    }\n\n    return function (r, g, b) {\n      if (r < 0) {\n        r = 0;\n      }\n\n      if (g < 0) {\n        g = 0;\n      }\n\n      if (b < 0) {\n        b = 0;\n      }\n\n      return '#' + colorMap[r] + colorMap[g] + colorMap[b];\n    };\n  }();\n\n  function BaseEvent() {}\n\n  BaseEvent.prototype = {\n    triggerEvent: function triggerEvent(eventName, args) {\n      if (this._cbs[eventName]) {\n        var len = this._cbs[eventName].length;\n\n        for (var i = 0; i < len; i++) {\n          this._cbs[eventName][i](args);\n        }\n      }\n    },\n    addEventListener: function addEventListener(eventName, callback) {\n      if (!this._cbs[eventName]) {\n        this._cbs[eventName] = [];\n      }\n\n      this._cbs[eventName].push(callback);\n\n      return function () {\n        this.removeEventListener(eventName, callback);\n      }.bind(this);\n    },\n    removeEventListener: function removeEventListener(eventName, callback) {\n      if (!callback) {\n        this._cbs[eventName] = null;\n      } else if (this._cbs[eventName]) {\n        var i = 0,\n            len = this._cbs[eventName].length;\n\n        while (i < len) {\n          if (this._cbs[eventName][i] === callback) {\n            this._cbs[eventName].splice(i, 1);\n\n            i -= 1;\n            len -= 1;\n          }\n\n          i += 1;\n        }\n\n        if (!this._cbs[eventName].length) {\n          this._cbs[eventName] = null;\n        }\n      }\n    }\n  };\n\n  var createTypedArray = function () {\n    function createRegularArray(type, len) {\n      var i = 0,\n          arr = [],\n          value;\n\n      switch (type) {\n        case 'int16':\n        case 'uint8c':\n          value = 1;\n          break;\n\n        default:\n          value = 1.1;\n          break;\n      }\n\n      for (i = 0; i < len; i += 1) {\n        arr.push(value);\n      }\n\n      return arr;\n    }\n\n    function createTypedArray(type, len) {\n      if (type === 'float32') {\n        return new Float32Array(len);\n      } else if (type === 'int16') {\n        return new Int16Array(len);\n      } else if (type === 'uint8c') {\n        return new Uint8ClampedArray(len);\n      }\n    }\n\n    if (typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\n      return createTypedArray;\n    } else {\n      return createRegularArray;\n    }\n  }();\n\n  function createSizedArray(len) {\n    return Array.apply(null, {\n      length: len\n    });\n  }\n\n  function createNS(type) {\n    //return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElementNS(svgNS, type);\n  }\n\n  function createTag(type) {\n    //return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElement(type);\n  }\n\n  function DynamicPropertyContainer() {}\n\n  ;\n  DynamicPropertyContainer.prototype = {\n    addDynamicProperty: function addDynamicProperty(prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n        this.container.addDynamicProperty(this);\n        this._isAnimated = true;\n      }\n    },\n    iterateDynamicProperties: function iterateDynamicProperties() {\n      this._mdf = false;\n      var i,\n          len = this.dynamicProperties.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.dynamicProperties[i].getValue();\n\n        if (this.dynamicProperties[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    },\n    initDynamicPropertyContainer: function initDynamicPropertyContainer(container) {\n      this.container = container;\n      this.dynamicProperties = [];\n      this._mdf = false;\n      this._isAnimated = false;\n    }\n  };\n\n  var getBlendMode = function () {\n    var blendModeEnums = {\n      0: 'source-over',\n      1: 'multiply',\n      2: 'screen',\n      3: 'overlay',\n      4: 'darken',\n      5: 'lighten',\n      6: 'color-dodge',\n      7: 'color-burn',\n      8: 'hard-light',\n      9: 'soft-light',\n      10: 'difference',\n      11: 'exclusion',\n      12: 'hue',\n      13: 'saturation',\n      14: 'color',\n      15: 'luminosity'\n    };\n    return function (mode) {\n      return blendModeEnums[mode] || '';\n    };\n  }();\n  /*!\r\n   Transformation Matrix v2.0\r\n   (c) Epistemex 2014-2015\r\n   www.epistemex.com\r\n   By Ken Fyrstenberg\r\n   Contributions by leeoniya.\r\n   License: MIT, header required.\r\n   */\n\n  /**\r\n   * 2D transformation matrix object initialized with identity matrix.\r\n   *\r\n   * The matrix can synchronize a canvas context by supplying the context\r\n   * as an argument, or later apply current absolute transform to an\r\n   * existing context.\r\n   *\r\n   * All values are handled as floating point values.\r\n   *\r\n   * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n   * @prop {number} a - scale x\r\n   * @prop {number} b - shear y\r\n   * @prop {number} c - shear x\r\n   * @prop {number} d - scale y\r\n   * @prop {number} e - translate x\r\n   * @prop {number} f - translate y\r\n   * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n   * @constructor\r\n   */\n\n\n  var Matrix = function () {\n    var _cos = Math.cos;\n    var _sin = Math.sin;\n    var _tan = Math.tan;\n    var _rnd = Math.round;\n\n    function reset() {\n      this.props[0] = 1;\n      this.props[1] = 0;\n      this.props[2] = 0;\n      this.props[3] = 0;\n      this.props[4] = 0;\n      this.props[5] = 1;\n      this.props[6] = 0;\n      this.props[7] = 0;\n      this.props[8] = 0;\n      this.props[9] = 0;\n      this.props[10] = 1;\n      this.props[11] = 0;\n      this.props[12] = 0;\n      this.props[13] = 0;\n      this.props[14] = 0;\n      this.props[15] = 1;\n      return this;\n    }\n\n    function rotate(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function rotateX(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateY(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateZ(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function shear(sx, sy) {\n      return this._t(1, sy, sx, 1, 0, 0);\n    }\n\n    function skew(ax, ay) {\n      return this.shear(_tan(ax), _tan(ay));\n    }\n\n    function skewFromAxis(ax, angle) {\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\n    }\n\n    function scale(sx, sy, sz) {\n      if (!sz && sz !== 0) {\n        sz = 1;\n      }\n\n      if (sx === 1 && sy === 1 && sz === 1) {\n        return this;\n      }\n\n      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\n    }\n\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n      this.props[0] = a;\n      this.props[1] = b;\n      this.props[2] = c;\n      this.props[3] = d;\n      this.props[4] = e;\n      this.props[5] = f;\n      this.props[6] = g;\n      this.props[7] = h;\n      this.props[8] = i;\n      this.props[9] = j;\n      this.props[10] = k;\n      this.props[11] = l;\n      this.props[12] = m;\n      this.props[13] = n;\n      this.props[14] = o;\n      this.props[15] = p;\n      return this;\n    }\n\n    function translate(tx, ty, tz) {\n      tz = tz || 0;\n\n      if (tx !== 0 || ty !== 0 || tz !== 0) {\n        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);\n      }\n\n      return this;\n    }\n\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\n      var _p = this.props;\n\n      if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {\n        //NOTE: commenting this condition because TurboFan deoptimizes code when present\n        //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\n        _p[12] = _p[12] * a2 + _p[15] * m2;\n        _p[13] = _p[13] * f2 + _p[15] * n2;\n        _p[14] = _p[14] * k2 + _p[15] * o2;\n        _p[15] = _p[15] * p2; //}\n\n        this._identityCalculated = false;\n        return this;\n      }\n\n      var a1 = _p[0];\n      var b1 = _p[1];\n      var c1 = _p[2];\n      var d1 = _p[3];\n      var e1 = _p[4];\n      var f1 = _p[5];\n      var g1 = _p[6];\n      var h1 = _p[7];\n      var i1 = _p[8];\n      var j1 = _p[9];\n      var k1 = _p[10];\n      var l1 = _p[11];\n      var m1 = _p[12];\n      var n1 = _p[13];\n      var o1 = _p[14];\n      var p1 = _p[15];\n      /* matrix order (canvas compatible):\r\n       * ace\r\n       * bdf\r\n       * 001\r\n       */\n\n      _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\n      _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;\n      _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;\n      _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;\n      _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;\n      _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;\n      _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;\n      _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;\n      _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;\n      _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;\n      _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;\n      _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;\n      _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;\n      _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;\n      _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;\n      _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;\n      this._identityCalculated = false;\n      return this;\n    }\n\n    function isIdentity() {\n      if (!this._identityCalculated) {\n        this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\n        this._identityCalculated = true;\n      }\n\n      return this._identity;\n    }\n\n    function equals(matr) {\n      var i = 0;\n\n      while (i < 16) {\n        if (matr.props[i] !== this.props[i]) {\n          return false;\n        }\n\n        i += 1;\n      }\n\n      return true;\n    }\n\n    function clone(matr) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        matr.props[i] = this.props[i];\n      }\n    }\n\n    function cloneFromProps(props) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        this.props[i] = props[i];\n      }\n    }\n\n    function applyToPoint(x, y, z) {\n      return {\n        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\n      };\n      /*return {\r\n       x: x * me.a + y * me.c + me.e,\r\n       y: x * me.b + y * me.d + me.f\r\n       };*/\n    }\n\n    function applyToX(x, y, z) {\n      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\n    }\n\n    function applyToY(x, y, z) {\n      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\n    }\n\n    function applyToZ(x, y, z) {\n      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\n    }\n\n    function inversePoint(pt) {\n      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\n      var a = this.props[5] / determinant;\n      var b = -this.props[1] / determinant;\n      var c = -this.props[4] / determinant;\n      var d = this.props[0] / determinant;\n      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;\n      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;\n      return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\n    }\n\n    function inversePoints(pts) {\n      var i,\n          len = pts.length,\n          retPts = [];\n\n      for (i = 0; i < len; i += 1) {\n        retPts[i] = inversePoint(pts[i]);\n      }\n\n      return retPts;\n    }\n\n    function applyToTriplePoints(pt1, pt2, pt3) {\n      var arr = createTypedArray('float32', 6);\n\n      if (this.isIdentity()) {\n        arr[0] = pt1[0];\n        arr[1] = pt1[1];\n        arr[2] = pt2[0];\n        arr[3] = pt2[1];\n        arr[4] = pt3[0];\n        arr[5] = pt3[1];\n      } else {\n        var p0 = this.props[0],\n            p1 = this.props[1],\n            p4 = this.props[4],\n            p5 = this.props[5],\n            p12 = this.props[12],\n            p13 = this.props[13];\n        arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\n        arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\n        arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\n        arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\n        arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\n        arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\n      }\n\n      return arr;\n    }\n\n    function applyToPointArray(x, y, z) {\n      var arr;\n\n      if (this.isIdentity()) {\n        arr = [x, y, z];\n      } else {\n        arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12], x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13], x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\n      }\n\n      return arr;\n    }\n\n    function applyToPointStringified(x, y) {\n      if (this.isIdentity()) {\n        return x + ',' + y;\n      }\n\n      var _p = this.props;\n      return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + ',' + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\n    }\n\n    function toCSS() {\n      //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n\n      /*if(this.isIdentity()) {\r\n          return '';\r\n      }*/\n      var i = 0;\n      var props = this.props;\n      var cssValue = 'matrix3d(';\n      var v = 10000;\n\n      while (i < 16) {\n        cssValue += _rnd(props[i] * v) / v;\n        cssValue += i === 15 ? ')' : ',';\n        i += 1;\n      }\n\n      return cssValue;\n    }\n\n    function roundMatrixProperty(val) {\n      var v = 10000;\n\n      if (val < 0.000001 && val > 0 || val > -0.000001 && val < 0) {\n        return _rnd(val * v) / v;\n      }\n\n      return val;\n    }\n\n    function to2dCSS() {\n      //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n\n      /*if(this.isIdentity()) {\r\n          return '';\r\n      }*/\n      var props = this.props;\n\n      var _a = roundMatrixProperty(props[0]);\n\n      var _b = roundMatrixProperty(props[1]);\n\n      var _c = roundMatrixProperty(props[4]);\n\n      var _d = roundMatrixProperty(props[5]);\n\n      var _e = roundMatrixProperty(props[12]);\n\n      var _f = roundMatrixProperty(props[13]);\n\n      return \"matrix(\" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + \")\";\n    }\n\n    return function () {\n      this.reset = reset;\n      this.rotate = rotate;\n      this.rotateX = rotateX;\n      this.rotateY = rotateY;\n      this.rotateZ = rotateZ;\n      this.skew = skew;\n      this.skewFromAxis = skewFromAxis;\n      this.shear = shear;\n      this.scale = scale;\n      this.setTransform = setTransform;\n      this.translate = translate;\n      this.transform = transform;\n      this.applyToPoint = applyToPoint;\n      this.applyToX = applyToX;\n      this.applyToY = applyToY;\n      this.applyToZ = applyToZ;\n      this.applyToPointArray = applyToPointArray;\n      this.applyToTriplePoints = applyToTriplePoints;\n      this.applyToPointStringified = applyToPointStringified;\n      this.toCSS = toCSS;\n      this.to2dCSS = to2dCSS;\n      this.clone = clone;\n      this.cloneFromProps = cloneFromProps;\n      this.equals = equals;\n      this.inversePoints = inversePoints;\n      this.inversePoint = inversePoint;\n      this._t = this.transform;\n      this.isIdentity = isIdentity;\n      this._identity = true;\n      this._identityCalculated = false;\n      this.props = createTypedArray('float32', 16);\n      this.reset();\n    };\n  }();\n  /*\r\n   Copyright 2014 David Bau.\r\n  \r\n   Permission is hereby granted, free of charge, to any person obtaining\r\n   a copy of this software and associated documentation files (the\r\n   \"Software\"), to deal in the Software without restriction, including\r\n   without limitation the rights to use, copy, modify, merge, publish,\r\n   distribute, sublicense, and/or sell copies of the Software, and to\r\n   permit persons to whom the Software is furnished to do so, subject to\r\n   the following conditions:\r\n  \r\n   The above copyright notice and this permission notice shall be\r\n   included in all copies or substantial portions of the Software.\r\n  \r\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n   SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n  \r\n   */\n\n\n  (function (pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var global = this,\n        width = 256,\n        // each RC4 output is 0 <= x < 256\n    chunks = 6,\n        // at least six RC4 outputs for each double\n    digits = 52,\n        // there are 52 significant digits in a double\n    rngname = 'random',\n        // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n        significance = math.pow(2, digits),\n        overflow = significance * 2,\n        mask = width - 1,\n        nodecrypto; // node.js crypto module, initialized at the bottom.\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n\n    function seedrandom(seed, options, callback) {\n      var key = [];\n      options = options === true ? {\n        entropy: true\n      } : options || {}; // Flatten the seed string or build one from local entropy if needed.\n\n      var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3), key); // Use the seed to initialize an ARC4 generator.\n\n      var arc4 = new ARC4(key); // This function returns a random double in [0, 1) that contains\n      // randomness in every bit of the mantissa of the IEEE 754 value.\n\n      var prng = function prng() {\n        var n = arc4.g(chunks),\n            // Start with a numerator n < 2 ^ 48\n        d = startdenom,\n            //   and denominator d = 2 ^ 48.\n        x = 0; //   and no 'extra last byte'.\n\n        while (n < significance) {\n          // Fill up all significant digits by\n          n = (n + x) * width; //   shifting numerator and\n\n          d *= width; //   denominator and generating a\n\n          x = arc4.g(1); //   new least-significant-byte.\n        }\n\n        while (n >= overflow) {\n          // To avoid rounding up, before adding\n          n /= 2; //   last byte, shift everything\n\n          d /= 2; //   right using integer math until\n\n          x >>>= 1; //   we have exactly the desired bits.\n        }\n\n        return (n + x) / d; // Form the number within [0, 1).\n      };\n\n      prng.int32 = function () {\n        return arc4.g(4) | 0;\n      };\n\n      prng.quick = function () {\n        return arc4.g(4) / 0x100000000;\n      };\n\n      prng.double = prng; // Mix the randomness into accumulated entropy.\n\n      mixkey(tostring(arc4.S), pool); // Calling convention: what to return as a function of prng, seed, is_math.\n\n      return (options.pass || callback || function (prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) {\n            copy(state, arc4);\n          } // Only provide the .state method if requested via options.state.\n\n\n          prng.state = function () {\n            return copy(arc4, {});\n          };\n        } // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n\n\n        if (is_math_call) {\n          math[rngname] = prng;\n          return seed;\n        } // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);\n    }\n\n    math['seed' + rngname] = seedrandom; //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n\n    function ARC4(key) {\n      var t,\n          keylen = key.length,\n          me = this,\n          i = 0,\n          j = me.i = me.j = 0,\n          s = me.S = []; // The empty key [] is treated as [0].\n\n      if (!keylen) {\n        key = [keylen++];\n      } // Set up S using the standard key scheduling algorithm.\n\n\n      while (i < width) {\n        s[i] = i++;\n      }\n\n      for (i = 0; i < width; i++) {\n        s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n        s[j] = t;\n      } // The \"g\" method returns the next (count) outputs as one number.\n\n\n      me.g = function (count) {\n        // Using instance members instead of closure state nearly doubles speed.\n        var t,\n            r = 0,\n            i = me.i,\n            j = me.j,\n            s = me.S;\n\n        while (count--) {\n          t = s[i = mask & i + 1];\n          r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n        }\n\n        me.i = i;\n        me.j = j;\n        return r; // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n      };\n    } //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n\n\n    function copy(f, t) {\n      t.i = f.i;\n      t.j = f.j;\n      t.S = f.S.slice();\n      return t;\n    } //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n\n\n    function flatten(obj, depth) {\n      var result = [],\n          typ = typeof obj,\n          prop;\n\n      if (depth && typ == 'object') {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1));\n          } catch (e) {}\n        }\n      }\n\n      return result.length ? result : typ == 'string' ? obj : obj + '\\0';\n    } //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n\n\n    function mixkey(seed, key) {\n      var stringseed = seed + '',\n          smear,\n          j = 0;\n\n      while (j < stringseed.length) {\n        key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n      }\n\n      return tostring(key);\n    } //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n\n\n    function autoseed() {\n      try {\n        if (nodecrypto) {\n          return tostring(nodecrypto.randomBytes(width));\n        }\n\n        var out = new Uint8Array(width);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n        return tostring(out);\n      } catch (e) {\n        var browser = global.navigator,\n            plugins = browser && browser.plugins;\n        return [+new Date(), global, plugins, global.screen, tostring(pool)];\n      }\n    } //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n\n\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a);\n    } //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n\n\n    mixkey(math.random(), pool); //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n    // End anonymous scope, and pass initial values.\n  })([], // pool: entropy pool starts empty\n  BMMath // math: package containing random, pow, and seedrandom\n  );\n\n  var BezierFactory = function () {\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\n    var ob = {};\n    ob.getBezierEasing = getBezierEasing;\n    var beziers = {};\n\n    function getBezierEasing(a, b, c, d, nm) {\n      var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\\./g, 'p');\n\n      if (beziers[str]) {\n        return beziers[str];\n      }\n\n      var bezEasing = new BezierEasing([a, b, c, d]);\n      beziers[str] = bezEasing;\n      return bezEasing;\n    } // These values are established by empiricism with tests (tradeoff: performance VS precision)\n\n\n    var NEWTON_ITERATIONS = 4;\n    var NEWTON_MIN_SLOPE = 0.001;\n    var SUBDIVISION_PRECISION = 0.0000001;\n    var SUBDIVISION_MAX_ITERATIONS = 10;\n    var kSplineTableSize = 11;\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n    var float32ArraySupported = typeof Float32Array === \"function\";\n\n    function A(aA1, aA2) {\n      return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n    }\n\n    function B(aA1, aA2) {\n      return 3.0 * aA2 - 6.0 * aA1;\n    }\n\n    function C(aA1) {\n      return 3.0 * aA1;\n    } // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n\n\n    function calcBezier(aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    } // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n\n\n    function getSlope(aT, aA1, aA2) {\n      return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n    }\n\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n      var currentX,\n          currentT,\n          i = 0;\n\n      do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n        if (currentX > 0.0) {\n          aB = currentT;\n        } else {\n          aA = currentT;\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n      return currentT;\n    }\n\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) return aGuessT;\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n      }\n\n      return aGuessT;\n    }\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\n\n\n    function BezierEasing(points) {\n      this._p = points;\n      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n      this._precomputed = false;\n      this.get = this.get.bind(this);\n    }\n\n    BezierEasing.prototype = {\n      get: function get(x) {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        if (!this._precomputed) this._precompute();\n        if (mX1 === mY1 && mX2 === mY2) return x; // linear\n        // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n\n        if (x === 0) return 0;\n        if (x === 1) return 1;\n        return calcBezier(this._getTForX(x), mY1, mY2);\n      },\n      // Private part\n      _precompute: function _precompute() {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        this._precomputed = true;\n        if (mX1 !== mY1 || mX2 !== mY2) this._calcSampleValues();\n      },\n      _calcSampleValues: function _calcSampleValues() {\n        var mX1 = this._p[0],\n            mX2 = this._p[2];\n\n        for (var i = 0; i < kSplineTableSize; ++i) {\n          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n        }\n      },\n\n      /**\r\n       * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n       */\n      _getTForX: function _getTForX(aX) {\n        var mX1 = this._p[0],\n            mX2 = this._p[2],\n            mSampleValues = this._mSampleValues;\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize;\n        }\n\n        --currentSample; // Interpolate to provide an initial guess for t\n\n        var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        } else if (initialSlope === 0.0) {\n          return guessForT;\n        } else {\n          return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n      }\n    };\n    return ob;\n  }();\n\n  (function () {\n    var lastTime = 0;\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback, element) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      var id = setTimeout(function () {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n    if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {\n      clearTimeout(id);\n    };\n  })();\n\n  function extendPrototype(sources, destination) {\n    var i,\n        len = sources.length,\n        sourcePrototype;\n\n    for (i = 0; i < len; i += 1) {\n      sourcePrototype = sources[i].prototype;\n\n      for (var attr in sourcePrototype) {\n        if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\n      }\n    }\n  }\n\n  function getDescriptor(object, prop) {\n    return Object.getOwnPropertyDescriptor(object, prop);\n  }\n\n  function createProxyFunction(prototype) {\n    function ProxyFunction() {}\n\n    ProxyFunction.prototype = prototype;\n    return ProxyFunction;\n  }\n\n  function bezFunction() {\n    var easingFunctions = [];\n    var math = Math;\n\n    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\n      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;\n      return det1 > -0.001 && det1 < 0.001;\n    }\n\n    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\n      if (z1 === 0 && z2 === 0 && z3 === 0) {\n        return pointOnLine2D(x1, y1, x2, y2, x3, y3);\n      }\n\n      var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\n      var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\n      var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\n      var diffDist;\n\n      if (dist1 > dist2) {\n        if (dist1 > dist3) {\n          diffDist = dist1 - dist2 - dist3;\n        } else {\n          diffDist = dist3 - dist2 - dist1;\n        }\n      } else if (dist3 > dist2) {\n        diffDist = dist3 - dist2 - dist1;\n      } else {\n        diffDist = dist2 - dist1 - dist3;\n      }\n\n      return diffDist > -0.0001 && diffDist < 0.0001;\n    }\n\n    var getBezierLength = function () {\n      return function (pt1, pt2, pt3, pt4) {\n        var curveSegments = defaultCurveSegments;\n        var k;\n        var i, len;\n        var ptCoord,\n            perc,\n            addedLength = 0;\n        var ptDistance;\n        var point = [],\n            lastPoint = [];\n        var lengthData = bezier_length_pool.newElement();\n        len = pt3.length;\n\n        for (k = 0; k < curveSegments; k += 1) {\n          perc = k / (curveSegments - 1);\n          ptDistance = 0;\n\n          for (i = 0; i < len; i += 1) {\n            ptCoord = bm_pow(1 - perc, 3) * pt1[i] + 3 * bm_pow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bm_pow(perc, 2) * pt4[i] + bm_pow(perc, 3) * pt2[i];\n            point[i] = ptCoord;\n\n            if (lastPoint[i] !== null) {\n              ptDistance += bm_pow(point[i] - lastPoint[i], 2);\n            }\n\n            lastPoint[i] = point[i];\n          }\n\n          if (ptDistance) {\n            ptDistance = bm_sqrt(ptDistance);\n            addedLength += ptDistance;\n          }\n\n          lengthData.percents[k] = perc;\n          lengthData.lengths[k] = addedLength;\n        }\n\n        lengthData.addedLength = addedLength;\n        return lengthData;\n      };\n    }();\n\n    function getSegmentsLength(shapeData) {\n      var segmentsLength = segments_length_pool.newElement();\n      var closed = shapeData.c;\n      var pathV = shapeData.v;\n      var pathO = shapeData.o;\n      var pathI = shapeData.i;\n      var i,\n          len = shapeData._length;\n      var lengths = segmentsLength.lengths;\n      var totalLength = 0;\n\n      for (i = 0; i < len - 1; i += 1) {\n        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      if (closed && len) {\n        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      segmentsLength.totalLength = totalLength;\n      return segmentsLength;\n    }\n\n    function BezierData(length) {\n      this.segmentLength = 0;\n      this.points = new Array(length);\n    }\n\n    function PointData(partial, point) {\n      this.partialLength = partial;\n      this.point = point;\n    }\n\n    var buildBezierData = function () {\n      var storedData = {};\n      return function (pt1, pt2, pt3, pt4) {\n        var bezierName = (pt1[0] + '_' + pt1[1] + '_' + pt2[0] + '_' + pt2[1] + '_' + pt3[0] + '_' + pt3[1] + '_' + pt4[0] + '_' + pt4[1]).replace(/\\./g, 'p');\n\n        if (!storedData[bezierName]) {\n          var curveSegments = defaultCurveSegments;\n          var k, i, len;\n          var ptCoord,\n              perc,\n              addedLength = 0;\n          var ptDistance;\n          var point,\n              lastPoint = null;\n\n          if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {\n            curveSegments = 2;\n          }\n\n          var bezierData = new BezierData(curveSegments);\n          len = pt3.length;\n\n          for (k = 0; k < curveSegments; k += 1) {\n            point = createSizedArray(len);\n            perc = k / (curveSegments - 1);\n            ptDistance = 0;\n\n            for (i = 0; i < len; i += 1) {\n              ptCoord = bm_pow(1 - perc, 3) * pt1[i] + 3 * bm_pow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bm_pow(perc, 2) * (pt2[i] + pt4[i]) + bm_pow(perc, 3) * pt2[i];\n              point[i] = ptCoord;\n\n              if (lastPoint !== null) {\n                ptDistance += bm_pow(point[i] - lastPoint[i], 2);\n              }\n            }\n\n            ptDistance = bm_sqrt(ptDistance);\n            addedLength += ptDistance;\n            bezierData.points[k] = new PointData(ptDistance, point);\n            lastPoint = point;\n          }\n\n          bezierData.segmentLength = addedLength;\n          storedData[bezierName] = bezierData;\n        }\n\n        return storedData[bezierName];\n      };\n    }();\n\n    function getDistancePerc(perc, bezierData) {\n      var percents = bezierData.percents;\n      var lengths = bezierData.lengths;\n      var len = percents.length;\n      var initPos = bm_floor((len - 1) * perc);\n      var lengthPos = perc * bezierData.addedLength;\n      var lPerc = 0;\n\n      if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\n        return percents[initPos];\n      } else {\n        var dir = lengths[initPos] > lengthPos ? -1 : 1;\n        var flag = true;\n\n        while (flag) {\n          if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\n            lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);\n            flag = false;\n          } else {\n            initPos += dir;\n          }\n\n          if (initPos < 0 || initPos >= len - 1) {\n            //FIX for TypedArrays that don't store floating point values with enough accuracy\n            if (initPos === len - 1) {\n              return percents[initPos];\n            }\n\n            flag = false;\n          }\n        }\n\n        return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;\n      }\n    }\n\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\n      var t1 = getDistancePerc(percent, bezierData);\n      var u0 = 1;\n      var u1 = 1 - t1;\n      var ptX = Math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1000) / 1000;\n      var ptY = Math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1000) / 1000;\n      return [ptX, ptY];\n    }\n\n    function getSegmentArray() {}\n\n    var bezier_segment_points = createTypedArray('float32', 8);\n\n    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\n      startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\n      var t0 = getDistancePerc(startPerc, bezierData);\n      endPerc = endPerc > 1 ? 1 : endPerc;\n      var t1 = getDistancePerc(endPerc, bezierData);\n      var i,\n          len = pt1.length;\n      var u0 = 1 - t0;\n      var u1 = 1 - t1;\n      var u0u0u0 = u0 * u0 * u0;\n      var t0u0u0_3 = t0 * u0 * u0 * 3;\n      var t0t0u0_3 = t0 * t0 * u0 * 3;\n      var t0t0t0 = t0 * t0 * t0; //\n\n      var u0u0u1 = u0 * u0 * u1;\n      var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1;\n      var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1;\n      var t0t0t1 = t0 * t0 * t1; //\n\n      var u0u1u1 = u0 * u1 * u1;\n      var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1;\n      var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1;\n      var t0t1t1 = t0 * t1 * t1; //\n\n      var u1u1u1 = u1 * u1 * u1;\n      var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1;\n      var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1;\n      var t1t1t1 = t1 * t1 * t1;\n\n      for (i = 0; i < len; i += 1) {\n        bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\n        bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\n        bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\n        bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\n      }\n\n      return bezier_segment_points;\n    }\n\n    return {\n      getSegmentsLength: getSegmentsLength,\n      getNewSegment: getNewSegment,\n      getPointInSegment: getPointInSegment,\n      buildBezierData: buildBezierData,\n      pointOnLine2D: pointOnLine2D,\n      pointOnLine3D: pointOnLine3D\n    };\n  }\n\n  var bez = bezFunction();\n\n  function dataFunctionManager() {\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\n    function completeLayers(layers, comps, fontManager) {\n      var layerData;\n      var animArray, lastFrame;\n      var i,\n          len = layers.length;\n      var j, jLen, k, kLen;\n\n      for (i = 0; i < len; i += 1) {\n        layerData = layers[i];\n\n        if (!('ks' in layerData) || layerData.completed) {\n          continue;\n        }\n\n        layerData.completed = true;\n\n        if (layerData.tt) {\n          layers[i - 1].td = layerData.tt;\n        }\n\n        animArray = [];\n        lastFrame = -1;\n\n        if (layerData.hasMask) {\n          var maskProps = layerData.masksProperties;\n          jLen = maskProps.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            if (maskProps[j].pt.k.i) {\n              convertPathsToAbsoluteValues(maskProps[j].pt.k);\n            } else {\n              kLen = maskProps[j].pt.k.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                if (maskProps[j].pt.k[k].s) {\n                  convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\n                }\n\n                if (maskProps[j].pt.k[k].e) {\n                  convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\n                }\n              }\n            }\n          }\n        }\n\n        if (layerData.ty === 0) {\n          layerData.layers = findCompLayers(layerData.refId, comps);\n          completeLayers(layerData.layers, comps, fontManager);\n        } else if (layerData.ty === 4) {\n          completeShapes(layerData.shapes);\n        } else if (layerData.ty == 5) {\n          completeText(layerData, fontManager);\n        }\n      }\n    }\n\n    function findCompLayers(id, comps) {\n      var i = 0,\n          len = comps.length;\n\n      while (i < len) {\n        if (comps[i].id === id) {\n          if (!comps[i].layers.__used) {\n            comps[i].layers.__used = true;\n            return comps[i].layers;\n          }\n\n          return JSON.parse(JSON.stringify(comps[i].layers));\n        }\n\n        i += 1;\n      }\n    }\n\n    function completeShapes(arr) {\n      var i,\n          len = arr.length;\n      var j, jLen;\n      var hasPaths = false;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (arr[i].ty == 'sh') {\n          if (arr[i].ks.k.i) {\n            convertPathsToAbsoluteValues(arr[i].ks.k);\n          } else {\n            jLen = arr[i].ks.k.length;\n\n            for (j = 0; j < jLen; j += 1) {\n              if (arr[i].ks.k[j].s) {\n                convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\n              }\n\n              if (arr[i].ks.k[j].e) {\n                convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\n              }\n            }\n          }\n\n          hasPaths = true;\n        } else if (arr[i].ty == 'gr') {\n          completeShapes(arr[i].it);\n        }\n      }\n      /*if(hasPaths){\r\n          //mx: distance\r\n          //ss: sensitivity\r\n          //dc: decay\r\n          arr.splice(arr.length-1,0,{\r\n              \"ty\": \"ms\",\r\n              \"mx\":20,\r\n              \"ss\":10,\r\n               \"dc\":0.001,\r\n              \"maxDist\":200\r\n          });\r\n      }*/\n\n    }\n\n    function convertPathsToAbsoluteValues(path) {\n      var i,\n          len = path.i.length;\n\n      for (i = 0; i < len; i += 1) {\n        path.i[i][0] += path.v[i][0];\n        path.i[i][1] += path.v[i][1];\n        path.o[i][0] += path.v[i][0];\n        path.o[i][1] += path.v[i][1];\n      }\n    }\n\n    function checkVersion(minimum, animVersionString) {\n      var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100];\n\n      if (minimum[0] > animVersion[0]) {\n        return true;\n      } else if (animVersion[0] > minimum[0]) {\n        return false;\n      }\n\n      if (minimum[1] > animVersion[1]) {\n        return true;\n      } else if (animVersion[1] > minimum[1]) {\n        return false;\n      }\n\n      if (minimum[2] > animVersion[2]) {\n        return true;\n      } else if (animVersion[2] > minimum[2]) {\n        return false;\n      }\n    }\n\n    var checkText = function () {\n      var minimumVersion = [4, 4, 14];\n\n      function updateTextLayer(textLayer) {\n        var documentData = textLayer.t.d;\n        textLayer.t.d = {\n          k: [{\n            s: documentData,\n            t: 0\n          }]\n        };\n      }\n\n      function iterateLayers(layers) {\n        var i,\n            len = layers.length;\n\n        for (i = 0; i < len; i += 1) {\n          if (layers[i].ty === 5) {\n            updateTextLayer(layers[i]);\n          }\n        }\n      }\n\n      return function (animationData) {\n        if (checkVersion(minimumVersion, animationData.v)) {\n          iterateLayers(animationData.layers);\n\n          if (animationData.assets) {\n            var i,\n                len = animationData.assets.length;\n\n            for (i = 0; i < len; i += 1) {\n              if (animationData.assets[i].layers) {\n                iterateLayers(animationData.assets[i].layers);\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var checkChars = function () {\n      var minimumVersion = [4, 7, 99];\n      return function (animationData) {\n        if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\n          var i,\n              len = animationData.chars.length,\n              j,\n              jLen,\n              k,\n              kLen;\n          var pathData, paths;\n\n          for (i = 0; i < len; i += 1) {\n            if (animationData.chars[i].data && animationData.chars[i].data.shapes) {\n              paths = animationData.chars[i].data.shapes[0].it;\n              jLen = paths.length;\n\n              for (j = 0; j < jLen; j += 1) {\n                pathData = paths[j].ks.k;\n\n                if (!pathData.__converted) {\n                  convertPathsToAbsoluteValues(paths[j].ks.k);\n                  pathData.__converted = true;\n                }\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var checkColors = function () {\n      var minimumVersion = [4, 1, 9];\n\n      function iterateShapes(shapes) {\n        var i,\n            len = shapes.length;\n        var j, jLen;\n\n        for (i = 0; i < len; i += 1) {\n          if (shapes[i].ty === 'gr') {\n            iterateShapes(shapes[i].it);\n          } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {\n            if (shapes[i].c.k && shapes[i].c.k[0].i) {\n              jLen = shapes[i].c.k.length;\n\n              for (j = 0; j < jLen; j += 1) {\n                if (shapes[i].c.k[j].s) {\n                  shapes[i].c.k[j].s[0] /= 255;\n                  shapes[i].c.k[j].s[1] /= 255;\n                  shapes[i].c.k[j].s[2] /= 255;\n                  shapes[i].c.k[j].s[3] /= 255;\n                }\n\n                if (shapes[i].c.k[j].e) {\n                  shapes[i].c.k[j].e[0] /= 255;\n                  shapes[i].c.k[j].e[1] /= 255;\n                  shapes[i].c.k[j].e[2] /= 255;\n                  shapes[i].c.k[j].e[3] /= 255;\n                }\n              }\n            } else {\n              shapes[i].c.k[0] /= 255;\n              shapes[i].c.k[1] /= 255;\n              shapes[i].c.k[2] /= 255;\n              shapes[i].c.k[3] /= 255;\n            }\n          }\n        }\n      }\n\n      function iterateLayers(layers) {\n        var i,\n            len = layers.length;\n\n        for (i = 0; i < len; i += 1) {\n          if (layers[i].ty === 4) {\n            iterateShapes(layers[i].shapes);\n          }\n        }\n      }\n\n      return function (animationData) {\n        if (checkVersion(minimumVersion, animationData.v)) {\n          iterateLayers(animationData.layers);\n\n          if (animationData.assets) {\n            var i,\n                len = animationData.assets.length;\n\n            for (i = 0; i < len; i += 1) {\n              if (animationData.assets[i].layers) {\n                iterateLayers(animationData.assets[i].layers);\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var checkShapes = function () {\n      var minimumVersion = [4, 4, 18];\n\n      function completeShapes(arr) {\n        var i,\n            len = arr.length;\n        var j, jLen;\n        var hasPaths = false;\n\n        for (i = len - 1; i >= 0; i -= 1) {\n          if (arr[i].ty == 'sh') {\n            if (arr[i].ks.k.i) {\n              arr[i].ks.k.c = arr[i].closed;\n            } else {\n              jLen = arr[i].ks.k.length;\n\n              for (j = 0; j < jLen; j += 1) {\n                if (arr[i].ks.k[j].s) {\n                  arr[i].ks.k[j].s[0].c = arr[i].closed;\n                }\n\n                if (arr[i].ks.k[j].e) {\n                  arr[i].ks.k[j].e[0].c = arr[i].closed;\n                }\n              }\n            }\n\n            hasPaths = true;\n          } else if (arr[i].ty == 'gr') {\n            completeShapes(arr[i].it);\n          }\n        }\n      }\n\n      function iterateLayers(layers) {\n        var layerData;\n        var i,\n            len = layers.length;\n        var j, jLen, k, kLen;\n\n        for (i = 0; i < len; i += 1) {\n          layerData = layers[i];\n\n          if (layerData.hasMask) {\n            var maskProps = layerData.masksProperties;\n            jLen = maskProps.length;\n\n            for (j = 0; j < jLen; j += 1) {\n              if (maskProps[j].pt.k.i) {\n                maskProps[j].pt.k.c = maskProps[j].cl;\n              } else {\n                kLen = maskProps[j].pt.k.length;\n\n                for (k = 0; k < kLen; k += 1) {\n                  if (maskProps[j].pt.k[k].s) {\n                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\n                  }\n\n                  if (maskProps[j].pt.k[k].e) {\n                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\n                  }\n                }\n              }\n            }\n          }\n\n          if (layerData.ty === 4) {\n            completeShapes(layerData.shapes);\n          }\n        }\n      }\n\n      return function (animationData) {\n        if (checkVersion(minimumVersion, animationData.v)) {\n          iterateLayers(animationData.layers);\n\n          if (animationData.assets) {\n            var i,\n                len = animationData.assets.length;\n\n            for (i = 0; i < len; i += 1) {\n              if (animationData.assets[i].layers) {\n                iterateLayers(animationData.assets[i].layers);\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    function completeData(animationData, fontManager) {\n      if (animationData.__complete) {\n        return;\n      }\n\n      checkColors(animationData);\n      checkText(animationData);\n      checkChars(animationData);\n      checkShapes(animationData);\n      completeLayers(animationData.layers, animationData.assets, fontManager);\n      animationData.__complete = true; //blitAnimation(animationData, animationData.assets, fontManager);\n    }\n\n    function completeText(data, fontManager) {\n      if (data.t.a.length === 0 && !('m' in data.t.p)) {\n        data.singleShape = true;\n      }\n    }\n\n    var moduleOb = {};\n    moduleOb.completeData = completeData;\n    return moduleOb;\n  }\n\n  var dataManager = dataFunctionManager();\n\n  var FontManager = function () {\n    var maxWaitingTime = 5000;\n    var emptyChar = {\n      w: 0,\n      size: 0,\n      shapes: []\n    };\n    var combinedCharacters = []; //Hindi characters\n\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\n\n    function setUpNode(font, family) {\n      var parentNode = createTag('span');\n      parentNode.style.fontFamily = family;\n      var node = createTag('span'); // Characters that vary significantly among different fonts\n\n      node.innerHTML = 'giItT1WQy@!-/#'; // Visible - so we can measure it - but not on the screen\n\n      parentNode.style.position = 'absolute';\n      parentNode.style.left = '-10000px';\n      parentNode.style.top = '-10000px'; // Large font size makes even subtle changes obvious\n\n      parentNode.style.fontSize = '300px'; // Reset any font properties\n\n      parentNode.style.fontVariant = 'normal';\n      parentNode.style.fontStyle = 'normal';\n      parentNode.style.fontWeight = 'normal';\n      parentNode.style.letterSpacing = '0';\n      parentNode.appendChild(node);\n      document.body.appendChild(parentNode); // Remember width with no applied web font\n\n      var width = node.offsetWidth;\n      node.style.fontFamily = font + ', ' + family;\n      return {\n        node: node,\n        w: width,\n        parent: parentNode\n      };\n    }\n\n    function checkLoadedFonts() {\n      var i,\n          len = this.fonts.length;\n      var node, w;\n      var loadedCount = len;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.fonts[i].loaded) {\n          loadedCount -= 1;\n          continue;\n        }\n\n        if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {\n          this.fonts[i].loaded = true;\n        } else {\n          node = this.fonts[i].monoCase.node;\n          w = this.fonts[i].monoCase.w;\n\n          if (node.offsetWidth !== w) {\n            loadedCount -= 1;\n            this.fonts[i].loaded = true;\n          } else {\n            node = this.fonts[i].sansCase.node;\n            w = this.fonts[i].sansCase.w;\n\n            if (node.offsetWidth !== w) {\n              loadedCount -= 1;\n              this.fonts[i].loaded = true;\n            }\n          }\n\n          if (this.fonts[i].loaded) {\n            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\n            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\n          }\n        }\n      }\n\n      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\n        setTimeout(this.checkLoadedFonts.bind(this), 20);\n      } else {\n        setTimeout(function () {\n          this.isLoaded = true;\n        }.bind(this), 0);\n      }\n    }\n\n    function createHelper(def, fontData) {\n      var tHelper = createNS('text');\n      tHelper.style.fontSize = '100px'; //tHelper.style.fontFamily = fontData.fFamily;\n\n      tHelper.setAttribute('font-family', fontData.fFamily);\n      tHelper.setAttribute('font-style', fontData.fStyle);\n      tHelper.setAttribute('font-weight', fontData.fWeight);\n      tHelper.textContent = '1';\n\n      if (fontData.fClass) {\n        tHelper.style.fontFamily = 'inherit';\n        tHelper.setAttribute('class', fontData.fClass);\n      } else {\n        tHelper.style.fontFamily = fontData.fFamily;\n      }\n\n      def.appendChild(tHelper);\n      var tCanvasHelper = createTag('canvas').getContext('2d');\n      tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px ' + fontData.fFamily; //tCanvasHelper.font = ' 100px '+ fontData.fFamily;\n\n      return tHelper;\n    }\n\n    function addFonts(fontData, defs) {\n      if (!fontData) {\n        this.isLoaded = true;\n        return;\n      }\n\n      if (this.chars) {\n        this.isLoaded = true;\n        this.fonts = fontData.list;\n        return;\n      }\n\n      var fontArr = fontData.list;\n      var i,\n          len = fontArr.length;\n      var _pendingFonts = len;\n\n      for (i = 0; i < len; i += 1) {\n        var shouldLoadFont = true;\n        var loadedSelector;\n        var j;\n        fontArr[i].loaded = false;\n        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace');\n        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif');\n\n        if (!fontArr[i].fPath) {\n          fontArr[i].loaded = true;\n          _pendingFonts -= 1;\n        } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {\n          loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"' + fontArr[i].fFamily + '\"], style[f-origin=\"3\"][f-family=\"' + fontArr[i].fFamily + '\"]');\n\n          if (loadedSelector.length > 0) {\n            shouldLoadFont = false;\n          }\n\n          if (shouldLoadFont) {\n            var s = createTag('style');\n            s.setAttribute('f-forigin', fontArr[i].fOrigin);\n            s.setAttribute('f-origin', fontArr[i].origin);\n            s.setAttribute('f-family', fontArr[i].fFamily);\n            s.type = \"text/css\";\n            s.innerHTML = \"@font-face {\" + \"font-family: \" + fontArr[i].fFamily + \"; font-style: normal; src: url('\" + fontArr[i].fPath + \"');}\";\n            defs.appendChild(s);\n          }\n        } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {\n          loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\n\n          for (j = 0; j < loadedSelector.length; j++) {\n            if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\n              // Font is already loaded\n              shouldLoadFont = false;\n            }\n          }\n\n          if (shouldLoadFont) {\n            var l = createTag('link');\n            l.setAttribute('f-forigin', fontArr[i].fOrigin);\n            l.setAttribute('f-origin', fontArr[i].origin);\n            l.type = \"text/css\";\n            l.rel = \"stylesheet\";\n            l.href = fontArr[i].fPath;\n            document.body.appendChild(l);\n          }\n        } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {\n          loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\n\n          for (j = 0; j < loadedSelector.length; j++) {\n            if (fontArr[i].fPath === loadedSelector[j].src) {\n              // Font is already loaded\n              shouldLoadFont = false;\n            }\n          }\n\n          if (shouldLoadFont) {\n            var sc = createTag('link');\n            sc.setAttribute('f-forigin', fontArr[i].fOrigin);\n            sc.setAttribute('f-origin', fontArr[i].origin);\n            sc.setAttribute('rel', 'stylesheet');\n            sc.setAttribute('href', fontArr[i].fPath);\n            defs.appendChild(sc);\n          }\n        }\n\n        fontArr[i].helper = createHelper(defs, fontArr[i]);\n        fontArr[i].cache = {};\n        this.fonts.push(fontArr[i]);\n      }\n\n      if (_pendingFonts === 0) {\n        this.isLoaded = true;\n      } else {\n        //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\n        //Adding this timeout seems to fix it\n        setTimeout(this.checkLoadedFonts.bind(this), 100);\n      }\n    }\n\n    function addChars(chars) {\n      if (!chars) {\n        return;\n      }\n\n      if (!this.chars) {\n        this.chars = [];\n      }\n\n      var i,\n          len = chars.length;\n      var j,\n          jLen = this.chars.length,\n          found;\n\n      for (i = 0; i < len; i += 1) {\n        j = 0;\n        found = false;\n\n        while (j < jLen) {\n          if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {\n            found = true;\n          }\n\n          j += 1;\n        }\n\n        if (!found) {\n          this.chars.push(chars[i]);\n          jLen += 1;\n        }\n      }\n    }\n\n    function getCharData(_char, style, font) {\n      var i = 0,\n          len = this.chars.length;\n\n      while (i < len) {\n        if (this.chars[i].ch === _char && this.chars[i].style === style && this.chars[i].fFamily === font) {\n          return this.chars[i];\n        }\n\n        i += 1;\n      }\n\n      if ((typeof _char === 'string' && _char.charCodeAt(0) !== 13 || !_char) && console && console.warn) {\n        console.warn('Missing character from exported characters list: ', _char, style, font);\n      }\n\n      return emptyChar;\n    }\n\n    function measureText(_char2, fontName, size) {\n      var fontData = this.getFontByName(fontName);\n\n      var index = _char2.charCodeAt(0);\n\n      if (!fontData.cache[index + 1]) {\n        var tHelper = fontData.helper; //Canvas version\n        //fontData.cache[index] = tHelper.measureText(char).width / 100;\n        //SVG version\n        //console.log(tHelper.getBBox().width)\n\n        if (_char2 === ' ') {\n          tHelper.textContent = '|' + _char2 + '|';\n          var doubleSize = tHelper.getComputedTextLength();\n          tHelper.textContent = '||';\n          var singleSize = tHelper.getComputedTextLength();\n          fontData.cache[index + 1] = (doubleSize - singleSize) / 100;\n        } else {\n          tHelper.textContent = _char2;\n          fontData.cache[index + 1] = tHelper.getComputedTextLength() / 100;\n        }\n      }\n\n      return fontData.cache[index + 1] * size;\n    }\n\n    function getFontByName(name) {\n      var i = 0,\n          len = this.fonts.length;\n\n      while (i < len) {\n        if (this.fonts[i].fName === name) {\n          return this.fonts[i];\n        }\n\n        i += 1;\n      }\n\n      return this.fonts[0];\n    }\n\n    function getCombinedCharacterCodes() {\n      return combinedCharacters;\n    }\n\n    function loaded() {\n      return this.isLoaded;\n    }\n\n    var Font = function Font() {\n      this.fonts = [];\n      this.chars = null;\n      this.typekitLoaded = 0;\n      this.isLoaded = false;\n      this.initTime = Date.now();\n    }; //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \n\n\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\n    Font.prototype.addChars = addChars;\n    Font.prototype.addFonts = addFonts;\n    Font.prototype.getCharData = getCharData;\n    Font.prototype.getFontByName = getFontByName;\n    Font.prototype.measureText = measureText;\n    Font.prototype.checkLoadedFonts = checkLoadedFonts;\n    Font.prototype.loaded = loaded;\n    return Font;\n  }();\n\n  var PropertyFactory = function () {\n    var initFrame = initialDefaultFrame;\n    var math_abs = Math.abs;\n\n    function interpolateValue(frameNum, caching) {\n      var offsetTime = this.offsetTime;\n      var newValue;\n\n      if (this.propType === 'multidimensional') {\n        newValue = createTypedArray('float32', this.pv.length);\n      }\n\n      var iterationIndex = caching.lastIndex;\n      var i = iterationIndex;\n      var len = this.keyframes.length - 1,\n          flag = true;\n      var keyData, nextKeyData;\n\n      while (flag) {\n        keyData = this.keyframes[i];\n        nextKeyData = this.keyframes[i + 1];\n\n        if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\n          if (keyData.h) {\n            keyData = nextKeyData;\n          }\n\n          iterationIndex = 0;\n          break;\n        }\n\n        if (nextKeyData.t - offsetTime > frameNum) {\n          iterationIndex = i;\n          break;\n        }\n\n        if (i < len - 1) {\n          i += 1;\n        } else {\n          iterationIndex = 0;\n          flag = false;\n        }\n      }\n\n      var k, kLen, perc, jLen, j, fnc;\n      var nextKeyTime = nextKeyData.t - offsetTime;\n      var keyTime = keyData.t - offsetTime;\n      var endValue;\n\n      if (keyData.to) {\n        if (!keyData.bezierData) {\n          keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\n        }\n\n        var bezierData = keyData.bezierData;\n\n        if (frameNum >= nextKeyTime || frameNum < keyTime) {\n          var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\n          kLen = bezierData.points[ind].point.length;\n\n          for (k = 0; k < kLen; k += 1) {\n            newValue[k] = bezierData.points[ind].point[k];\n          } // caching._lastKeyframeIndex = -1;\n\n        } else {\n          if (keyData.__fnct) {\n            fnc = keyData.__fnct;\n          } else {\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\n            keyData.__fnct = fnc;\n          }\n\n          perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n          var distanceInLine = bezierData.segmentLength * perc;\n          var segmentPerc;\n          var addedLength = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0;\n          j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0;\n          flag = true;\n          jLen = bezierData.points.length;\n\n          while (flag) {\n            addedLength += bezierData.points[j].partialLength;\n\n            if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\n              kLen = bezierData.points[j].point.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k];\n              }\n\n              break;\n            } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\n              segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\n              kLen = bezierData.points[j].point.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\n              }\n\n              break;\n            }\n\n            if (j < jLen - 1) {\n              j += 1;\n            } else {\n              flag = false;\n            }\n          }\n\n          caching._lastPoint = j;\n          caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\n          caching._lastKeyframeIndex = i;\n        }\n      } else {\n        var outX, outY, inX, inY, keyValue;\n        len = keyData.s.length;\n        endValue = nextKeyData.s || keyData.e;\n\n        if (this.sh && keyData.h !== 1) {\n          if (frameNum >= nextKeyTime) {\n            newValue[0] = endValue[0];\n            newValue[1] = endValue[1];\n            newValue[2] = endValue[2];\n          } else if (frameNum <= keyTime) {\n            newValue[0] = keyData.s[0];\n            newValue[1] = keyData.s[1];\n            newValue[2] = keyData.s[2];\n          } else {\n            var quatStart = createQuaternion(keyData.s);\n            var quatEnd = createQuaternion(endValue);\n            var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\n            quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\n          }\n        } else {\n          for (i = 0; i < len; i += 1) {\n            if (keyData.h !== 1) {\n              if (frameNum >= nextKeyTime) {\n                perc = 1;\n              } else if (frameNum < keyTime) {\n                perc = 0;\n              } else {\n                if (keyData.o.x.constructor === Array) {\n                  if (!keyData.__fnct) {\n                    keyData.__fnct = [];\n                  }\n\n                  if (!keyData.__fnct[i]) {\n                    outX = typeof keyData.o.x[i] === 'undefined' ? keyData.o.x[0] : keyData.o.x[i];\n                    outY = typeof keyData.o.y[i] === 'undefined' ? keyData.o.y[0] : keyData.o.y[i];\n                    inX = typeof keyData.i.x[i] === 'undefined' ? keyData.i.x[0] : keyData.i.x[i];\n                    inY = typeof keyData.i.y[i] === 'undefined' ? keyData.i.y[0] : keyData.i.y[i];\n                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                    keyData.__fnct[i] = fnc;\n                  } else {\n                    fnc = keyData.__fnct[i];\n                  }\n                } else {\n                  if (!keyData.__fnct) {\n                    outX = keyData.o.x;\n                    outY = keyData.o.y;\n                    inX = keyData.i.x;\n                    inY = keyData.i.y;\n                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                    keyData.__fnct = fnc;\n                  } else {\n                    fnc = keyData.__fnct;\n                  }\n                }\n\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n              }\n            }\n\n            endValue = nextKeyData.s || keyData.e;\n            keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\n\n            if (len === 1) {\n              newValue = keyValue;\n            } else {\n              newValue[i] = keyValue;\n            }\n          }\n        }\n      }\n\n      caching.lastIndex = iterationIndex;\n      return newValue;\n    } //based on @Toji's https://github.com/toji/gl-matrix/\n\n\n    function slerp(a, b, t) {\n      var out = [];\n      var ax = a[0],\n          ay = a[1],\n          az = a[2],\n          aw = a[3],\n          bx = b[0],\n          by = b[1],\n          bz = b[2],\n          bw = b[3];\n      var omega, cosom, sinom, scale0, scale1;\n      cosom = ax * bx + ay * by + az * bz + aw * bw;\n\n      if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n      }\n\n      if (1.0 - cosom > 0.000001) {\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n      } else {\n        scale0 = 1.0 - t;\n        scale1 = t;\n      }\n\n      out[0] = scale0 * ax + scale1 * bx;\n      out[1] = scale0 * ay + scale1 * by;\n      out[2] = scale0 * az + scale1 * bz;\n      out[3] = scale0 * aw + scale1 * bw;\n      return out;\n    }\n\n    function quaternionToEuler(out, quat) {\n      var qx = quat[0];\n      var qy = quat[1];\n      var qz = quat[2];\n      var qw = quat[3];\n      var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);\n      var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);\n      var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);\n      out[0] = heading / degToRads;\n      out[1] = attitude / degToRads;\n      out[2] = bank / degToRads;\n    }\n\n    function createQuaternion(values) {\n      var heading = values[0] * degToRads;\n      var attitude = values[1] * degToRads;\n      var bank = values[2] * degToRads;\n      var c1 = Math.cos(heading / 2);\n      var c2 = Math.cos(attitude / 2);\n      var c3 = Math.cos(bank / 2);\n      var s1 = Math.sin(heading / 2);\n      var s2 = Math.sin(attitude / 2);\n      var s3 = Math.sin(bank / 2);\n      var w = c1 * c2 * c3 - s1 * s2 * s3;\n      var x = s1 * s2 * c3 + c1 * c2 * s3;\n      var y = s1 * c2 * c3 + c1 * s2 * s3;\n      var z = c1 * s2 * c3 - s1 * c2 * s3;\n      return [x, y, z, w];\n    }\n\n    function getValueAtCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n\n      if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {\n        if (this._caching.lastFrame >= frameNum) {\n          this._caching._lastKeyframeIndex = -1;\n          this._caching.lastIndex = 0;\n        }\n\n        var renderResult = this.interpolateValue(frameNum, this._caching);\n        this.pv = renderResult;\n      }\n\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n\n    function setVValue(val) {\n      var multipliedValue;\n\n      if (this.propType === 'unidimensional') {\n        multipliedValue = val * this.mult;\n\n        if (math_abs(this.v - multipliedValue) > 0.00001) {\n          this.v = multipliedValue;\n          this._mdf = true;\n        }\n      } else {\n        var i = 0,\n            len = this.v.length;\n\n        while (i < len) {\n          multipliedValue = val[i] * this.mult;\n\n          if (math_abs(this.v[i] - multipliedValue) > 0.00001) {\n            this.v[i] = multipliedValue;\n            this._mdf = true;\n          }\n\n          i += 1;\n        }\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\n        return;\n      }\n\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n\n      this.lock = true;\n      this._mdf = this._isFirstFrame;\n      var multipliedValue;\n      var i,\n          len = this.effectsSequence.length;\n      var finalValue = this.kf ? this.pv : this.data.k;\n\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n\n      this.setVValue(finalValue);\n      this._isFirstFrame = false;\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n\n    function ValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional';\n      this.mult = mult || 1;\n      this.data = data;\n      this.v = mult ? data.k * mult : data.k;\n      this.pv = data.k;\n      this._mdf = false;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.vel = 0;\n      this.effectsSequence = [];\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n\n    function MultiDimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional';\n      this.mult = mult || 1;\n      this.data = data;\n      this._mdf = false;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.frameId = -1;\n      var i,\n          len = data.k.length;\n      this.v = createTypedArray('float32', len);\n      this.pv = createTypedArray('float32', len);\n      var arr = createTypedArray('float32', len);\n      this.vel = createTypedArray('float32', len);\n\n      for (i = 0; i < len; i += 1) {\n        this.v[i] = data.k[i] * this.mult;\n        this.pv[i] = data.k[i];\n      }\n\n      this._isFirstFrame = true;\n      this.effectsSequence = [];\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n\n    function KeyframedValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional';\n      this.keyframes = data.k;\n      this.offsetTime = elem.data.st;\n      this.frameId = -1;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: 0,\n        _lastKeyframeIndex: -1\n      };\n      this.k = true;\n      this.kf = true;\n      this.data = data;\n      this.mult = mult || 1;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.v = initFrame;\n      this.pv = initFrame;\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.addEffect = addEffect;\n    }\n\n    function KeyframedMultidimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional';\n      var i,\n          len = data.k.length;\n      var s, e, to, ti;\n\n      for (i = 0; i < len - 1; i += 1) {\n        if (data.k[i].to && data.k[i].s && data.k[i].e) {\n          s = data.k[i].s;\n          e = data.k[i].e;\n          to = data.k[i].to;\n          ti = data.k[i].ti;\n\n          if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2])) {\n            data.k[i].to = null;\n            data.k[i].ti = null;\n          }\n\n          if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\n            if (s.length === 2 || s[2] === e[2] && to[2] === 0 && ti[2] === 0) {\n              data.k[i].to = null;\n              data.k[i].ti = null;\n            }\n          }\n        }\n      }\n\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.keyframes = data.k;\n      this.offsetTime = elem.data.st;\n      this.k = true;\n      this.kf = true;\n      this._isFirstFrame = true;\n      this.mult = mult || 1;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.frameId = -1;\n      var arrLen = data.k[0].s.length;\n      this.v = createTypedArray('float32', arrLen);\n      this.pv = createTypedArray('float32', arrLen);\n\n      for (i = 0; i < arrLen; i += 1) {\n        this.v[i] = initFrame;\n        this.pv[i] = initFrame;\n      }\n\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: createTypedArray('float32', arrLen)\n      };\n      this.addEffect = addEffect;\n    }\n\n    function getProp(elem, data, type, mult, container) {\n      var p;\n\n      if (!data.k.length) {\n        p = new ValueProperty(elem, data, mult, container);\n      } else if (typeof data.k[0] === 'number') {\n        p = new MultiDimensionalProperty(elem, data, mult, container);\n      } else {\n        switch (type) {\n          case 0:\n            p = new KeyframedValueProperty(elem, data, mult, container);\n            break;\n\n          case 1:\n            p = new KeyframedMultidimensionalProperty(elem, data, mult, container);\n            break;\n        }\n      }\n\n      if (p.effectsSequence.length) {\n        container.addDynamicProperty(p);\n      }\n\n      return p;\n    }\n\n    var ob = {\n      getProp: getProp\n    };\n    return ob;\n  }();\n\n  var TransformPropertyFactory = function () {\n    function applyToMatrix(mat) {\n      var _mdf = this._mdf;\n      this.iterateDynamicProperties();\n      this._mdf = this._mdf || _mdf;\n\n      if (this.a) {\n        mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n      }\n\n      if (this.s) {\n        mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n      }\n\n      if (this.sk) {\n        mat.skewFromAxis(-this.sk.v, this.sa.v);\n      }\n\n      if (this.r) {\n        mat.rotate(-this.r.v);\n      } else {\n        mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n      }\n\n      if (this.data.p.s) {\n        if (this.data.p.z) {\n          mat.translate(this.px.v, this.py.v, -this.pz.v);\n        } else {\n          mat.translate(this.px.v, this.py.v, 0);\n        }\n      } else {\n        mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n      }\n    }\n\n    function processKeys(forceRender) {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n\n      if (this._isDirty) {\n        this.precalculateMatrix();\n        this._isDirty = false;\n      }\n\n      this.iterateDynamicProperties();\n\n      if (this._mdf || forceRender) {\n        this.v.cloneFromProps(this.pre.props);\n\n        if (this.appliedTransformations < 1) {\n          this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        }\n\n        if (this.appliedTransformations < 2) {\n          this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        }\n\n        if (this.sk && this.appliedTransformations < 3) {\n          this.v.skewFromAxis(-this.sk.v, this.sa.v);\n        }\n\n        if (this.r && this.appliedTransformations < 4) {\n          this.v.rotate(-this.r.v);\n        } else if (!this.r && this.appliedTransformations < 4) {\n          this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        }\n\n        if (this.autoOriented) {\n          var v1,\n              v2,\n              frameRate = this.elem.globalData.frameRate;\n\n          if (this.p && this.p.keyframes && this.p.getValueAtTime) {\n            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\n              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);\n              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\n            } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\n              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);\n              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / frameRate, 0);\n            } else {\n              v1 = this.p.pv;\n              v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\n            }\n          } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\n            v1 = [];\n            v2 = [];\n            var px = this.px,\n                py = this.py,\n                frameRate;\n\n            if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\n              v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);\n              v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);\n              v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);\n              v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);\n            } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\n              v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);\n              v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);\n              v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);\n              v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);\n            } else {\n              v1 = [px.pv, py.pv];\n              v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);\n              v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);\n            }\n          }\n\n          this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\n        }\n\n        if (this.data.p && this.data.p.s) {\n          if (this.data.p.z) {\n            this.v.translate(this.px.v, this.py.v, -this.pz.v);\n          } else {\n            this.v.translate(this.px.v, this.py.v, 0);\n          }\n        } else {\n          this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n        }\n      }\n\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function precalculateMatrix() {\n      if (!this.a.k) {\n        this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        this.appliedTransformations = 1;\n      } else {\n        return;\n      }\n\n      if (!this.s.effectsSequence.length) {\n        this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        this.appliedTransformations = 2;\n      } else {\n        return;\n      }\n\n      if (this.sk) {\n        if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\n          this.pre.skewFromAxis(-this.sk.v, this.sa.v);\n          this.appliedTransformations = 3;\n        } else {\n          return;\n        }\n      }\n\n      if (this.r) {\n        if (!this.r.effectsSequence.length) {\n          this.pre.rotate(-this.r.v);\n          this.appliedTransformations = 4;\n        } else {\n          return;\n        }\n      } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\n        this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        this.appliedTransformations = 4;\n      }\n    }\n\n    function autoOrient() {//\n      //var prevP = this.getValueAtTime();\n    }\n\n    function addDynamicProperty(prop) {\n      this._addDynamicProperty(prop);\n\n      this.elem.addDynamicProperty(prop);\n      this._isDirty = true;\n    }\n\n    function TransformProperty(elem, data, container) {\n      this.elem = elem;\n      this.frameId = -1;\n      this.propType = 'transform';\n      this.data = data;\n      this.v = new Matrix(); //Precalculated matrix with non animated properties\n\n      this.pre = new Matrix();\n      this.appliedTransformations = 0;\n      this.initDynamicPropertyContainer(container || elem);\n\n      if (data.p && data.p.s) {\n        this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this);\n        this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this);\n\n        if (data.p.z) {\n          this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this);\n        }\n      } else {\n        this.p = PropertyFactory.getProp(elem, data.p || {\n          k: [0, 0, 0]\n        }, 1, 0, this);\n      }\n\n      if (data.rx) {\n        this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\n        this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\n        this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\n\n        if (data.or.k[0].ti) {\n          var i,\n              len = data.or.k.length;\n\n          for (i = 0; i < len; i += 1) {\n            data.or.k[i].to = data.or.k[i].ti = null;\n          }\n        }\n\n        this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this); //sh Indicates it needs to be capped between -180 and 180\n\n        this.or.sh = true;\n      } else {\n        this.r = PropertyFactory.getProp(elem, data.r || {\n          k: 0\n        }, 0, degToRads, this);\n      }\n\n      if (data.sk) {\n        this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\n        this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\n      }\n\n      this.a = PropertyFactory.getProp(elem, data.a || {\n        k: [0, 0, 0]\n      }, 1, 0, this);\n      this.s = PropertyFactory.getProp(elem, data.s || {\n        k: [100, 100, 100]\n      }, 1, 0.01, this); // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\n\n      if (data.o) {\n        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem);\n      } else {\n        this.o = {\n          _mdf: false,\n          v: 1\n        };\n      }\n\n      this._isDirty = true;\n\n      if (!this.dynamicProperties.length) {\n        this.getValue(true);\n      }\n    }\n\n    TransformProperty.prototype = {\n      applyToMatrix: applyToMatrix,\n      getValue: processKeys,\n      precalculateMatrix: precalculateMatrix,\n      autoOrient: autoOrient\n    };\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\n\n    function getTransformProperty(elem, data, container) {\n      return new TransformProperty(elem, data, container);\n    }\n\n    return {\n      getTransformProperty: getTransformProperty\n    };\n  }();\n\n  function ShapePath() {\n    this.c = false;\n    this._length = 0;\n    this._maxLength = 8;\n    this.v = createSizedArray(this._maxLength);\n    this.o = createSizedArray(this._maxLength);\n    this.i = createSizedArray(this._maxLength);\n  }\n\n  ShapePath.prototype.setPathData = function (closed, len) {\n    this.c = closed;\n    this.setLength(len);\n    var i = 0;\n\n    while (i < len) {\n      this.v[i] = point_pool.newElement();\n      this.o[i] = point_pool.newElement();\n      this.i[i] = point_pool.newElement();\n      i += 1;\n    }\n  };\n\n  ShapePath.prototype.setLength = function (len) {\n    while (this._maxLength < len) {\n      this.doubleArrayLength();\n    }\n\n    this._length = len;\n  };\n\n  ShapePath.prototype.doubleArrayLength = function () {\n    this.v = this.v.concat(createSizedArray(this._maxLength));\n    this.i = this.i.concat(createSizedArray(this._maxLength));\n    this.o = this.o.concat(createSizedArray(this._maxLength));\n    this._maxLength *= 2;\n  };\n\n  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\n    var arr;\n    this._length = Math.max(this._length, pos + 1);\n\n    if (this._length >= this._maxLength) {\n      this.doubleArrayLength();\n    }\n\n    switch (type) {\n      case 'v':\n        arr = this.v;\n        break;\n\n      case 'i':\n        arr = this.i;\n        break;\n\n      case 'o':\n        arr = this.o;\n        break;\n    }\n\n    if (!arr[pos] || arr[pos] && !replace) {\n      arr[pos] = point_pool.newElement();\n    }\n\n    arr[pos][0] = x;\n    arr[pos][1] = y;\n  };\n\n  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\n    this.setXYAt(vX, vY, 'v', pos, replace);\n    this.setXYAt(oX, oY, 'o', pos, replace);\n    this.setXYAt(iX, iY, 'i', pos, replace);\n  };\n\n  ShapePath.prototype.reverse = function () {\n    var newPath = new ShapePath();\n    newPath.setPathData(this.c, this._length);\n    var vertices = this.v,\n        outPoints = this.o,\n        inPoints = this.i;\n    var init = 0;\n\n    if (this.c) {\n      newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\n      init = 1;\n    }\n\n    var cnt = this._length - 1;\n    var len = this._length;\n    var i;\n\n    for (i = init; i < len; i += 1) {\n      newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\n      cnt -= 1;\n    }\n\n    return newPath;\n  };\n\n  var ShapePropertyFactory = function () {\n    var initFrame = -999999;\n\n    function interpolateShape(frameNum, previousValue, caching) {\n      var iterationIndex = caching.lastIndex;\n      var keyPropS, keyPropE, isHold, j, k, jLen, kLen, perc, vertexValue;\n      var kf = this.keyframes;\n\n      if (frameNum < kf[0].t - this.offsetTime) {\n        keyPropS = kf[0].s[0];\n        isHold = true;\n        iterationIndex = 0;\n      } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\n        keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\n        /*if(kf[kf.length - 1].s){\r\n            keyPropS = kf[kf.length - 1].s[0];\r\n        }else{\r\n            keyPropS = kf[kf.length - 2].e[0];\r\n        }*/\n\n        isHold = true;\n      } else {\n        var i = iterationIndex;\n        var len = kf.length - 1,\n            flag = true,\n            keyData,\n            nextKeyData;\n\n        while (flag) {\n          keyData = kf[i];\n          nextKeyData = kf[i + 1];\n\n          if (nextKeyData.t - this.offsetTime > frameNum) {\n            break;\n          }\n\n          if (i < len - 1) {\n            i += 1;\n          } else {\n            flag = false;\n          }\n        }\n\n        isHold = keyData.h === 1;\n        iterationIndex = i;\n\n        if (!isHold) {\n          if (frameNum >= nextKeyData.t - this.offsetTime) {\n            perc = 1;\n          } else if (frameNum < keyData.t - this.offsetTime) {\n            perc = 0;\n          } else {\n            var fnc;\n\n            if (keyData.__fnct) {\n              fnc = keyData.__fnct;\n            } else {\n              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;\n              keyData.__fnct = fnc;\n            }\n\n            perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));\n          }\n\n          keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\n        }\n\n        keyPropS = keyData.s[0];\n      }\n\n      jLen = previousValue._length;\n      kLen = keyPropS.i[0].length;\n      caching.lastIndex = iterationIndex;\n\n      for (j = 0; j < jLen; j += 1) {\n        for (k = 0; k < kLen; k += 1) {\n          vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;\n          previousValue.i[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;\n          previousValue.o[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;\n          previousValue.v[j][k] = vertexValue;\n        }\n      }\n    }\n\n    function interpolateShapeCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n      var lastFrame = this._caching.lastFrame;\n\n      if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {\n        ////\n        this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\n        this.interpolateShape(frameNum, this.pv, this._caching); ////\n      }\n\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n\n    function resetShape() {\n      this.paths = this.localShapeCollection;\n    }\n\n    function shapesEqual(shape1, shape2) {\n      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\n        return false;\n      }\n\n      var i,\n          len = shape1._length;\n\n      for (i = 0; i < len; i += 1) {\n        if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function setVValue(newPath) {\n      if (!shapesEqual(this.v, newPath)) {\n        this.v = shape_pool.clone(newPath);\n        this.localShapeCollection.releaseShapes();\n        this.localShapeCollection.addShape(this.v);\n        this._mdf = true;\n        this.paths = this.localShapeCollection;\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      } else if (!this.effectsSequence.length) {\n        this._mdf = false;\n        return;\n      }\n\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n\n      this.lock = true;\n      this._mdf = false;\n      var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\n      var i,\n          len = this.effectsSequence.length;\n\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n\n      this.setVValue(finalValue);\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    ;\n\n    function ShapeProperty(elem, data, type) {\n      this.propType = 'shape';\n      this.comp = elem.comp;\n      this.container = elem;\n      this.elem = elem;\n      this.data = data;\n      this.k = false;\n      this.kf = false;\n      this._mdf = false;\n      var pathData = type === 3 ? data.pt.k : data.ks.k;\n      this.v = shape_pool.clone(pathData);\n      this.pv = shape_pool.clone(this.v);\n      this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.reset = resetShape;\n      this.effectsSequence = [];\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\n    ShapeProperty.prototype.getValue = processEffectsSequence;\n    ShapeProperty.prototype.setVValue = setVValue;\n    ShapeProperty.prototype.addEffect = addEffect;\n\n    function KeyframedShapeProperty(elem, data, type) {\n      this.propType = 'shape';\n      this.comp = elem.comp;\n      this.elem = elem;\n      this.container = elem;\n      this.offsetTime = elem.data.st;\n      this.keyframes = type === 3 ? data.pt.k : data.ks.k;\n      this.k = true;\n      this.kf = true;\n      var i,\n          len = this.keyframes[0].s[0].i.length;\n      var jLen = this.keyframes[0].s[0].i[0].length;\n      this.v = shape_pool.newElement();\n      this.v.setPathData(this.keyframes[0].s[0].c, len);\n      this.pv = shape_pool.clone(this.v);\n      this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.lastFrame = initFrame;\n      this.reset = resetShape;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0\n      };\n      this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\n    }\n\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\n\n    var EllShapeProperty = function () {\n      var cPoint = roundCorner;\n\n      function EllShapeProperty(elem, data) {\n        /*this.v = {\r\n            v: createSizedArray(4),\r\n            i: createSizedArray(4),\r\n            o: createSizedArray(4),\r\n            c: true\r\n        };*/\n        this.v = shape_pool.newElement();\n        this.v.setPathData(true, 4);\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n        this.paths = this.localShapeCollection;\n        this.localShapeCollection.addShape(this.v);\n        this.d = data.d;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertEllToPath();\n        }\n      }\n\n      ;\n      EllShapeProperty.prototype = {\n        reset: resetShape,\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertEllToPath();\n          }\n        },\n        convertEllToPath: function convertEllToPath() {\n          var p0 = this.p.v[0],\n              p1 = this.p.v[1],\n              s0 = this.s.v[0] / 2,\n              s1 = this.s.v[1] / 2;\n\n          var _cw = this.d !== 3;\n\n          var _v = this.v;\n          _v.v[0][0] = p0;\n          _v.v[0][1] = p1 - s1;\n          _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.v[1][1] = p1;\n          _v.v[2][0] = p0;\n          _v.v[2][1] = p1 + s1;\n          _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.v[3][1] = p1;\n          _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.i[0][1] = p1 - s1;\n          _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.i[1][1] = p1 - s1 * cPoint;\n          _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.i[2][1] = p1 + s1;\n          _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.i[3][1] = p1 + s1 * cPoint;\n          _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.o[0][1] = p1 - s1;\n          _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.o[1][1] = p1 + s1 * cPoint;\n          _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.o[2][1] = p1 + s1;\n          _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.o[3][1] = p1 - s1 * cPoint;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], EllShapeProperty);\n      return EllShapeProperty;\n    }();\n\n    var StarShapeProperty = function () {\n      function StarShapeProperty(elem, data) {\n        this.v = shape_pool.newElement();\n        this.v.setPathData(true, 0);\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.data = data;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n\n        if (data.sy === 1) {\n          this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this);\n          this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this);\n          this.convertToPath = this.convertStarToPath;\n        } else {\n          this.convertToPath = this.convertPolygonToPath;\n        }\n\n        this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\n        this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this);\n        this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this);\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertToPath();\n        }\n      }\n\n      ;\n      StarShapeProperty.prototype = {\n        reset: resetShape,\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertToPath();\n          }\n        },\n        convertStarToPath: function convertStarToPath() {\n          var numPts = Math.floor(this.pt.v) * 2;\n          var angle = Math.PI * 2 / numPts;\n          /*this.v.v.length = numPts;\r\n          this.v.i.length = numPts;\r\n          this.v.o.length = numPts;*/\n\n          var longFlag = true;\n          var longRad = this.or.v;\n          var shortRad = this.ir.v;\n          var longRound = this.os.v;\n          var shortRound = this.is.v;\n          var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);\n          var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);\n          var i,\n              rad,\n              roundness,\n              perimSegment,\n              currentAng = -Math.PI / 2;\n          currentAng += this.r.v;\n          var dir = this.data.d === 3 ? -1 : 1;\n          this.v._length = 0;\n\n          for (i = 0; i < numPts; i += 1) {\n            rad = longFlag ? longRad : shortRad;\n            roundness = longFlag ? longRound : shortRound;\n            perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            /*this.v.v[i] = [x,y];\r\n            this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n            this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n            this.v._length = numPts;*/\n\n            longFlag = !longFlag;\n            currentAng += angle * dir;\n          }\n        },\n        convertPolygonToPath: function convertPolygonToPath() {\n          var numPts = Math.floor(this.pt.v);\n          var angle = Math.PI * 2 / numPts;\n          var rad = this.or.v;\n          var roundness = this.os.v;\n          var perimSegment = 2 * Math.PI * rad / (numPts * 4);\n          var i,\n              currentAng = -Math.PI / 2;\n          var dir = this.data.d === 3 ? -1 : 1;\n          currentAng += this.r.v;\n          this.v._length = 0;\n\n          for (i = 0; i < numPts; i += 1) {\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            currentAng += angle * dir;\n          }\n\n          this.paths.length = 0;\n          this.paths[0] = this.v;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], StarShapeProperty);\n      return StarShapeProperty;\n    }();\n\n    var RectShapeProperty = function () {\n      function RectShapeProperty(elem, data) {\n        this.v = shape_pool.newElement();\n        this.v.c = true;\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertRectToPath();\n        }\n      }\n\n      ;\n      RectShapeProperty.prototype = {\n        convertRectToPath: function convertRectToPath() {\n          var p0 = this.p.v[0],\n              p1 = this.p.v[1],\n              v0 = this.s.v[0] / 2,\n              v1 = this.s.v[1] / 2;\n          var round = bm_min(v0, v1, this.r.v);\n          var cPoint = round * (1 - roundCorner);\n          this.v._length = 0;\n\n          if (this.d === 2 || this.d === 1) {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);\n\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);\n            }\n          } else {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);\n\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);\n            }\n          }\n        },\n        getValue: function getValue(frameNum) {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertRectToPath();\n          }\n        },\n        reset: resetShape\n      };\n      extendPrototype([DynamicPropertyContainer], RectShapeProperty);\n      return RectShapeProperty;\n    }();\n\n    function getShapeProp(elem, data, type) {\n      var prop;\n\n      if (type === 3 || type === 4) {\n        var dataProp = type === 3 ? data.pt : data.ks;\n        var keys = dataProp.k;\n\n        if (keys.length) {\n          prop = new KeyframedShapeProperty(elem, data, type);\n        } else {\n          prop = new ShapeProperty(elem, data, type);\n        }\n      } else if (type === 5) {\n        prop = new RectShapeProperty(elem, data);\n      } else if (type === 6) {\n        prop = new EllShapeProperty(elem, data);\n      } else if (type === 7) {\n        prop = new StarShapeProperty(elem, data);\n      }\n\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n\n      return prop;\n    }\n\n    function getConstructorFunction() {\n      return ShapeProperty;\n    }\n\n    function getKeyframedConstructorFunction() {\n      return KeyframedShapeProperty;\n    }\n\n    var ob = {};\n    ob.getShapeProp = getShapeProp;\n    ob.getConstructorFunction = getConstructorFunction;\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\n    return ob;\n  }();\n\n  var ShapeModifiers = function () {\n    var ob = {};\n    var modifiers = {};\n    ob.registerModifier = registerModifier;\n    ob.getModifier = getModifier;\n\n    function registerModifier(nm, factory) {\n      if (!modifiers[nm]) {\n        modifiers[nm] = factory;\n      }\n    }\n\n    function getModifier(nm, elem, data) {\n      return new modifiers[nm](elem, data);\n    }\n\n    return ob;\n  }();\n\n  function ShapeModifier() {}\n\n  ShapeModifier.prototype.initModifierProperties = function () {};\n\n  ShapeModifier.prototype.addShapeToModifier = function () {};\n\n  ShapeModifier.prototype.addShape = function (data) {\n    if (!this.closed) {\n      // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.\n      data.sh.container.addDynamicProperty(data.sh);\n      var shapeData = {\n        shape: data.sh,\n        data: data,\n        localShapeCollection: shapeCollection_pool.newShapeCollection()\n      };\n      this.shapes.push(shapeData);\n      this.addShapeToModifier(shapeData);\n\n      if (this._isAnimated) {\n        data.setAsAnimated();\n      }\n    }\n  };\n\n  ShapeModifier.prototype.init = function (elem, data) {\n    this.shapes = [];\n    this.elem = elem;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, data);\n    this.frameId = initialDefaultFrame;\n    this.closed = false;\n    this.k = false;\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  ShapeModifier.prototype.processKeys = function () {\n    if (this.elem.globalData.frameId === this.frameId) {\n      return;\n    }\n\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n\n  extendPrototype([DynamicPropertyContainer], ShapeModifier);\n\n  function TrimModifier() {}\n\n  extendPrototype([ShapeModifier], TrimModifier);\n\n  TrimModifier.prototype.initModifierProperties = function (elem, data) {\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\n    this.sValue = 0;\n    this.eValue = 0;\n    this.getValue = this.processKeys;\n    this.m = data.m;\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\n  };\n\n  TrimModifier.prototype.addShapeToModifier = function (shapeData) {\n    shapeData.pathsData = [];\n  };\n\n  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\n    var segments = [];\n\n    if (e <= 1) {\n      segments.push({\n        s: s,\n        e: e\n      });\n    } else if (s >= 1) {\n      segments.push({\n        s: s - 1,\n        e: e - 1\n      });\n    } else {\n      segments.push({\n        s: s,\n        e: 1\n      });\n      segments.push({\n        s: 0,\n        e: e - 1\n      });\n    }\n\n    var shapeSegments = [];\n    var i,\n        len = segments.length,\n        segmentOb;\n\n    for (i = 0; i < len; i += 1) {\n      segmentOb = segments[i];\n\n      if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {} else {\n        var shapeS, shapeE;\n\n        if (segmentOb.s * totalModifierLength <= addedLength) {\n          shapeS = 0;\n        } else {\n          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\n          shapeE = 1;\n        } else {\n          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        shapeSegments.push([shapeS, shapeE]);\n      }\n    }\n\n    if (!shapeSegments.length) {\n      shapeSegments.push([0, 0]);\n    }\n\n    return shapeSegments;\n  };\n\n  TrimModifier.prototype.releasePathsData = function (pathsData) {\n    var i,\n        len = pathsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      segments_length_pool.release(pathsData[i]);\n    }\n\n    pathsData.length = 0;\n    return pathsData;\n  };\n\n  TrimModifier.prototype.processShapes = function (_isFirstFrame) {\n    var s, e;\n\n    if (this._mdf || _isFirstFrame) {\n      var o = this.o.v % 360 / 360;\n\n      if (o < 0) {\n        o += 1;\n      }\n\n      s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;\n      e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;\n\n      if (s === e) {}\n\n      if (s > e) {\n        var _s = s;\n        s = e;\n        e = _s;\n      }\n\n      s = Math.round(s * 10000) * 0.0001;\n      e = Math.round(e * 10000) * 0.0001;\n      this.sValue = s;\n      this.eValue = e;\n    } else {\n      s = this.sValue;\n      e = this.eValue;\n    }\n\n    var shapePaths;\n    var i,\n        len = this.shapes.length,\n        j,\n        jLen;\n    var pathsData,\n        pathData,\n        totalShapeLength,\n        totalModifierLength = 0;\n\n    if (e === s) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].localShapeCollection.releaseShapes();\n        this.shapes[i].shape._mdf = true;\n        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\n      }\n    } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {\n      var segments = [],\n          shapeData,\n          localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]; // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\n\n        if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\n          shapeData.shape.paths = shapeData.localShapeCollection;\n        } else {\n          shapePaths = shapeData.shape.paths;\n          jLen = shapePaths._length;\n          totalShapeLength = 0;\n\n          if (!shapeData.shape._mdf && shapeData.pathsData.length) {\n            totalShapeLength = shapeData.totalShapeLength;\n          } else {\n            pathsData = this.releasePathsData(shapeData.pathsData);\n\n            for (j = 0; j < jLen; j += 1) {\n              pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\n              pathsData.push(pathData);\n              totalShapeLength += pathData.totalLength;\n            }\n\n            shapeData.totalShapeLength = totalShapeLength;\n            shapeData.pathsData = pathsData;\n          }\n\n          totalModifierLength += totalShapeLength;\n          shapeData.shape._mdf = true;\n        }\n      }\n\n      var shapeS = s,\n          shapeE = e,\n          addedLength = 0,\n          edges;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        shapeData = this.shapes[i];\n\n        if (shapeData.shape._mdf) {\n          localShapeCollection = shapeData.localShapeCollection;\n          localShapeCollection.releaseShapes(); //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\n\n          if (this.m === 2 && len > 1) {\n            edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\n            addedLength += shapeData.totalShapeLength;\n          } else {\n            edges = [[shapeS, shapeE]];\n          }\n\n          jLen = edges.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            shapeS = edges[j][0];\n            shapeE = edges[j][1];\n            segments.length = 0;\n\n            if (shapeE <= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength * shapeE\n              });\n            } else if (shapeS >= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * (shapeS - 1),\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            } else {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength\n              });\n              segments.push({\n                s: 0,\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            }\n\n            var newShapesData = this.addShapes(shapeData, segments[0]);\n\n            if (segments[0].s !== segments[0].e) {\n              if (segments.length > 1) {\n                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\n\n                if (lastShapeInCollection.c) {\n                  var lastShape = newShapesData.pop();\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1], lastShape);\n                } else {\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1]);\n                }\n              }\n\n              this.addPaths(newShapesData, localShapeCollection);\n            }\n          }\n\n          shapeData.shape.paths = localShapeCollection;\n        }\n      }\n    } else if (this._mdf) {\n      for (i = 0; i < len; i += 1) {\n        //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\n        //Don't remove this even if it's losing cached info.\n        this.shapes[i].pathsData.length = 0;\n        this.shapes[i].shape._mdf = true;\n      }\n    }\n  };\n\n  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\n    var i,\n        len = newPaths.length;\n\n    for (i = 0; i < len; i += 1) {\n      localShapeCollection.addShape(newPaths[i]);\n    }\n  };\n\n  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\n\n    if (newShape) {\n      shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\n    }\n\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\n  };\n\n  TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\n\n    if (newShape) {\n      shapePath.setXYAt(points[0], points[4], 'v', pos);\n    }\n\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\n  };\n\n  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\n    var pathsData = shapeData.pathsData;\n    var shapePaths = shapeData.shape.paths.shapes;\n    var i,\n        len = shapeData.shape.paths._length,\n        j,\n        jLen;\n    var addedLength = 0;\n    var currentLengthData, segmentCount;\n    var lengths;\n    var segment;\n    var shapes = [];\n    var initPos;\n    var newShape = true;\n\n    if (!shapePath) {\n      shapePath = shape_pool.newElement();\n      segmentCount = 0;\n      initPos = 0;\n    } else {\n      segmentCount = shapePath._length;\n      initPos = shapePath._length;\n    }\n\n    shapes.push(shapePath);\n\n    for (i = 0; i < len; i += 1) {\n      lengths = pathsData[i].lengths;\n      shapePath.c = shapePaths[i].c;\n      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\n\n      for (j = 1; j < jLen; j += 1) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\n          addedLength += currentLengthData.addedLength;\n          shapePath.c = false;\n        } else if (addedLength > shapeSegment.e) {\n          shapePath.c = false;\n          break;\n        } else {\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n\n            newShape = false;\n            shapePath.c = false;\n          }\n\n          addedLength += currentLengthData.addedLength;\n          segmentCount += 1;\n        }\n      }\n\n      if (shapePaths[i].c && lengths.length) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength <= shapeSegment.e) {\n          var segmentLength = lengths[j - 1].addedLength;\n\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n\n            newShape = false;\n            shapePath.c = false;\n          }\n        } else {\n          shapePath.c = false;\n        }\n\n        addedLength += currentLengthData.addedLength;\n        segmentCount += 1;\n      }\n\n      if (shapePath._length) {\n        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\n        shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], 'o', shapePath._length - 1);\n      }\n\n      if (addedLength > shapeSegment.e) {\n        break;\n      }\n\n      if (i < len - 1) {\n        shapePath = shape_pool.newElement();\n        newShape = true;\n        shapes.push(shapePath);\n        segmentCount = 0;\n      }\n    }\n\n    return shapes;\n  };\n\n  ShapeModifiers.registerModifier('tm', TrimModifier);\n\n  function RoundCornersModifier() {}\n\n  extendPrototype([ShapeModifier], RoundCornersModifier);\n\n  RoundCornersModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this);\n    this._isAnimated = !!this.rd.effectsSequence.length;\n  };\n\n  RoundCornersModifier.prototype.processPath = function (path, round) {\n    var cloned_path = shape_pool.newElement();\n    cloned_path.c = path.c;\n    var i,\n        len = path._length;\n    var currentV,\n        currentI,\n        currentO,\n        closerV,\n        newV,\n        newO,\n        newI,\n        distance,\n        newPosPerc,\n        index = 0;\n    var vX, vY, oX, oY, iX, iY;\n\n    for (i = 0; i < len; i += 1) {\n      currentV = path.v[i];\n      currentO = path.o[i];\n      currentI = path.i[i];\n\n      if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {\n        if ((i === 0 || i === len - 1) && !path.c) {\n          cloned_path.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index);\n          /*cloned_path.v[index] = currentV;\r\n          cloned_path.o[index] = currentO;\r\n          cloned_path.i[index] = currentI;*/\n\n          index += 1;\n        } else {\n          if (i === 0) {\n            closerV = path.v[len - 1];\n          } else {\n            closerV = path.v[i - 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          vX = iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vY = iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;\n          oX = vX - (vX - currentV[0]) * roundCorner;\n          oY = vY - (vY - currentV[1]) * roundCorner;\n          cloned_path.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n\n          if (i === len - 1) {\n            closerV = path.v[0];\n          } else {\n            closerV = path.v[i + 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          vX = oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vY = oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;\n          iX = vX - (vX - currentV[0]) * roundCorner;\n          iY = vY - (vY - currentV[1]) * roundCorner;\n          cloned_path.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n        }\n      } else {\n        cloned_path.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index);\n        index += 1;\n      }\n    }\n\n    return cloned_path;\n  };\n\n  RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i,\n        len = this.shapes.length;\n    var j, jLen;\n    var rd = this.rd.v;\n\n    if (rd !== 0) {\n      var shapeData, newPaths, localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        newPaths = shapeData.shape.paths;\n        localShapeCollection = shapeData.localShapeCollection;\n\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], rd));\n          }\n        }\n\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n\n  ShapeModifiers.registerModifier('rd', RoundCornersModifier);\n\n  function RepeaterModifier() {}\n\n  extendPrototype([ShapeModifier], RepeaterModifier);\n\n  RepeaterModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.c = PropertyFactory.getProp(elem, data.c, 0, null, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, null, this);\n    this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this);\n    this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this);\n    this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this);\n    this.data = data;\n\n    if (!this.dynamicProperties.length) {\n      this.getValue(true);\n    }\n\n    this._isAnimated = !!this.dynamicProperties.length;\n    this.pMatrix = new Matrix();\n    this.rMatrix = new Matrix();\n    this.sMatrix = new Matrix();\n    this.tMatrix = new Matrix();\n    this.matrix = new Matrix();\n  };\n\n  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {\n    var dir = inv ? -1 : 1;\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    rMatrix.rotate(-transform.r.v * dir * perc);\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n  };\n\n  RepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {\n    this.elem = elem;\n    this.arr = arr;\n    this.pos = pos;\n    this.elemsData = elemsData;\n    this._currentCopies = 0;\n    this._elements = [];\n    this._groups = [];\n    this.frameId = -1;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, arr[pos]);\n    var cont = 0;\n\n    while (pos > 0) {\n      pos -= 1; //this._elements.unshift(arr.splice(pos,1)[0]);\n\n      this._elements.unshift(arr[pos]);\n\n      cont += 1;\n    }\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  RepeaterModifier.prototype.resetElements = function (elements) {\n    var i,\n        len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._processed = false;\n\n      if (elements[i].ty === 'gr') {\n        this.resetElements(elements[i].it);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.cloneElements = function (elements) {\n    var i,\n        len = elements.length;\n    var newElements = JSON.parse(JSON.stringify(elements));\n    this.resetElements(newElements);\n    return newElements;\n  };\n\n  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\n    var i,\n        len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._render = renderFlag;\n\n      if (elements[i].ty === 'gr') {\n        this.changeGroupRender(elements[i].it, renderFlag);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\n    var items, itemsTransform, i, dir, cont;\n\n    if (this._mdf || _isFirstFrame) {\n      var copies = Math.ceil(this.c.v);\n\n      if (this._groups.length < copies) {\n        while (this._groups.length < copies) {\n          var group = {\n            it: this.cloneElements(this._elements),\n            ty: 'gr'\n          };\n          group.it.push({\n            \"a\": {\n              \"a\": 0,\n              \"ix\": 1,\n              \"k\": [0, 0]\n            },\n            \"nm\": \"Transform\",\n            \"o\": {\n              \"a\": 0,\n              \"ix\": 7,\n              \"k\": 100\n            },\n            \"p\": {\n              \"a\": 0,\n              \"ix\": 2,\n              \"k\": [0, 0]\n            },\n            \"r\": {\n              \"a\": 1,\n              \"ix\": 6,\n              \"k\": [{\n                s: 0,\n                e: 0,\n                t: 0\n              }, {\n                s: 0,\n                e: 0,\n                t: 1\n              }]\n            },\n            \"s\": {\n              \"a\": 0,\n              \"ix\": 3,\n              \"k\": [100, 100]\n            },\n            \"sa\": {\n              \"a\": 0,\n              \"ix\": 5,\n              \"k\": 0\n            },\n            \"sk\": {\n              \"a\": 0,\n              \"ix\": 4,\n              \"k\": 0\n            },\n            \"ty\": \"tr\"\n          });\n          this.arr.splice(0, 0, group);\n\n          this._groups.splice(0, 0, group);\n\n          this._currentCopies += 1;\n        }\n\n        this.elem.reloadShapes();\n      }\n\n      cont = 0;\n      var renderFlag;\n\n      for (i = 0; i <= this._groups.length - 1; i += 1) {\n        renderFlag = cont < copies;\n        this._groups[i]._render = renderFlag;\n        this.changeGroupRender(this._groups[i].it, renderFlag);\n        cont += 1;\n      }\n\n      this._currentCopies = copies; ////\n\n      var offset = this.o.v;\n      var offsetModulo = offset % 1;\n      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n      var k;\n      var tMat = this.tr.v.props;\n      var pProps = this.pMatrix.props;\n      var rProps = this.rMatrix.props;\n      var sProps = this.sMatrix.props;\n      this.pMatrix.reset();\n      this.rMatrix.reset();\n      this.sMatrix.reset();\n      this.tMatrix.reset();\n      this.matrix.reset();\n      var iteration = 0;\n\n      if (offset > 0) {\n        while (iteration < roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          iteration += 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\n          iteration += offsetModulo;\n        }\n      } else if (offset < 0) {\n        while (iteration > roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\n          iteration -= 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);\n          iteration -= offsetModulo;\n        }\n      }\n\n      i = this.data.m === 1 ? 0 : this._currentCopies - 1;\n      dir = this.data.m === 1 ? 1 : -1;\n      cont = this._currentCopies;\n      var j, jLen;\n\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        jLen = itemsTransform.length;\n        items[items.length - 1].transform.mProps._mdf = true;\n        items[items.length - 1].transform.op._mdf = true;\n        items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\n\n        if (iteration !== 0) {\n          if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {\n            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          }\n\n          this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);\n          this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);\n          this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n\n          this.matrix.reset();\n        } else {\n          this.matrix.reset();\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n        }\n\n        iteration += 1;\n        cont -= 1;\n        i += dir;\n      }\n    } else {\n      cont = this._currentCopies;\n      i = 0;\n      dir = 1;\n\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        items[items.length - 1].transform.mProps._mdf = false;\n        items[items.length - 1].transform.op._mdf = false;\n        cont -= 1;\n        i += dir;\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.addShape = function () {};\n\n  ShapeModifiers.registerModifier('rp', RepeaterModifier);\n\n  function ShapeCollection() {\n    this._length = 0;\n    this._maxLength = 4;\n    this.shapes = createSizedArray(this._maxLength);\n  }\n\n  ShapeCollection.prototype.addShape = function (shapeData) {\n    if (this._length === this._maxLength) {\n      this.shapes = this.shapes.concat(createSizedArray(this._maxLength));\n      this._maxLength *= 2;\n    }\n\n    this.shapes[this._length] = shapeData;\n    this._length += 1;\n  };\n\n  ShapeCollection.prototype.releaseShapes = function () {\n    var i;\n\n    for (i = 0; i < this._length; i += 1) {\n      shape_pool.release(this.shapes[i]);\n    }\n\n    this._length = 0;\n  };\n\n  function DashProperty(elem, data, renderer, container) {\n    this.elem = elem;\n    this.frameId = -1;\n    this.dataProps = createSizedArray(data.length);\n    this.renderer = renderer;\n    this.k = false;\n    this.dashStr = '';\n    this.dashArray = createTypedArray('float32', data.length ? data.length - 1 : 0);\n    this.dashoffset = createTypedArray('float32', 1);\n    this.initDynamicPropertyContainer(container);\n    var i,\n        len = data.length || 0,\n        prop;\n\n    for (i = 0; i < len; i += 1) {\n      prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this);\n      this.k = prop.k || this.k;\n      this.dataProps[i] = {\n        n: data[i].n,\n        p: prop\n      };\n    }\n\n    if (!this.k) {\n      this.getValue(true);\n    }\n\n    this._isAnimated = this.k;\n  }\n\n  DashProperty.prototype.getValue = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return;\n    }\n\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n    this._mdf = this._mdf || forceRender;\n\n    if (this._mdf) {\n      var i = 0,\n          len = this.dataProps.length;\n\n      if (this.renderer === 'svg') {\n        this.dashStr = '';\n      }\n\n      for (i = 0; i < len; i += 1) {\n        if (this.dataProps[i].n != 'o') {\n          if (this.renderer === 'svg') {\n            this.dashStr += ' ' + this.dataProps[i].p.v;\n          } else {\n            this.dashArray[i] = this.dataProps[i].p.v;\n          }\n        } else {\n          this.dashoffset[0] = this.dataProps[i].p.v;\n        }\n      }\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], DashProperty);\n\n  function GradientProperty(elem, data, container) {\n    this.data = data;\n    this.c = createTypedArray('uint8c', data.p * 4);\n    var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4;\n    this.o = createTypedArray('float32', cLength);\n    this._cmdf = false;\n    this._omdf = false;\n    this._collapsable = this.checkCollapsable();\n    this._hasOpacity = cLength;\n    this.initDynamicPropertyContainer(container);\n    this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this);\n    this.k = this.prop.k;\n    this.getValue(true);\n  }\n\n  GradientProperty.prototype.comparePoints = function (values, points) {\n    var i = 0,\n        len = this.o.length / 2,\n        diff;\n\n    while (i < len) {\n      diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);\n\n      if (diff > 0.01) {\n        return false;\n      }\n\n      i += 1;\n    }\n\n    return true;\n  };\n\n  GradientProperty.prototype.checkCollapsable = function () {\n    if (this.o.length / 2 !== this.c.length / 4) {\n      return false;\n    }\n\n    if (this.data.k.k[0].s) {\n      var i = 0,\n          len = this.data.k.k.length;\n\n      while (i < len) {\n        if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\n          return false;\n        }\n\n        i += 1;\n      }\n    } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  GradientProperty.prototype.getValue = function (forceRender) {\n    this.prop.getValue();\n    this._mdf = false;\n    this._cmdf = false;\n    this._omdf = false;\n\n    if (this.prop._mdf || forceRender) {\n      var i,\n          len = this.data.p * 4;\n      var mult, val;\n\n      for (i = 0; i < len; i += 1) {\n        mult = i % 4 === 0 ? 100 : 255;\n        val = Math.round(this.prop.v[i] * mult);\n\n        if (this.c[i] !== val) {\n          this.c[i] = val;\n          this._cmdf = !forceRender;\n        }\n      }\n\n      if (this.o.length) {\n        len = this.prop.v.length;\n\n        for (i = this.data.p * 4; i < len; i += 1) {\n          mult = i % 2 === 0 ? 100 : 1;\n          val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];\n\n          if (this.o[i - this.data.p * 4] !== val) {\n            this.o[i - this.data.p * 4] = val;\n            this._omdf = !forceRender;\n          }\n        }\n      }\n\n      this._mdf = !forceRender;\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], GradientProperty);\n\n  var buildShapeString = function buildShapeString(pathNodes, length, closed, mat) {\n    if (length === 0) {\n      return '';\n    }\n\n    var _o = pathNodes.o;\n    var _i = pathNodes.i;\n    var _v = pathNodes.v;\n    var i,\n        shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n\n    for (i = 1; i < length; i += 1) {\n      shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\n    }\n\n    if (closed && length) {\n      shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n      shapeString += 'z';\n    }\n\n    return shapeString;\n  };\n\n  var ImagePreloader = function () {\n    var proxyImage = function () {\n      var canvas = createTag('canvas');\n      canvas.width = 1;\n      canvas.height = 1;\n      var ctx = canvas.getContext('2d');\n      ctx.fillStyle = 'rgba(0,0,0,0)';\n      ctx.fillRect(0, 0, 1, 1);\n      return canvas;\n    }();\n\n    function imageLoaded() {\n      this.loadedAssets += 1;\n\n      if (this.loadedAssets === this.totalImages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n\n    function getAssetsPath(assetData, assetsPath, original_path) {\n      var path = '';\n\n      if (assetData.e) {\n        path = assetData.p;\n      } else if (assetsPath) {\n        var imagePath = assetData.p;\n\n        if (imagePath.indexOf('images/') !== -1) {\n          imagePath = imagePath.split('/')[1];\n        }\n\n        path = assetsPath + imagePath;\n      } else {\n        path = original_path;\n        path += assetData.u ? assetData.u : '';\n        path += assetData.p;\n      }\n\n      return path;\n    }\n\n    function createImageData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createTag('img');\n      img.crossOrigin = 'anonymous';\n      img.addEventListener('load', this._imageLoaded.bind(this), false);\n      img.addEventListener('error', function () {\n        ob.img = proxyImage;\n\n        this._imageLoaded();\n      }.bind(this), false);\n      img.src = path;\n      var ob = {\n        img: img,\n        assetData: assetData\n      };\n      return ob;\n    }\n\n    function loadAssets(assets, cb) {\n      this.imagesLoadedCb = cb;\n      var i,\n          len = assets.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (!assets[i].layers) {\n          this.totalImages += 1;\n          this.images.push(this._createImageData(assets[i]));\n        }\n      }\n    }\n\n    function setPath(path) {\n      this.path = path || '';\n    }\n\n    function setAssetsPath(path) {\n      this.assetsPath = path || '';\n    }\n\n    function getImage(assetData) {\n      var i = 0,\n          len = this.images.length;\n\n      while (i < len) {\n        if (this.images[i].assetData === assetData) {\n          return this.images[i].img;\n        }\n\n        i += 1;\n      }\n    }\n\n    function destroy() {\n      this.imagesLoadedCb = null;\n      this.images.length = 0;\n    }\n\n    function loaded() {\n      return this.totalImages === this.loadedAssets;\n    }\n\n    return function ImagePreloader() {\n      this.loadAssets = loadAssets;\n      this.setAssetsPath = setAssetsPath;\n      this.setPath = setPath;\n      this.loaded = loaded;\n      this.destroy = destroy;\n      this.getImage = getImage;\n      this._createImageData = createImageData;\n      this._imageLoaded = imageLoaded;\n      this.assetsPath = '';\n      this.path = '';\n      this.totalImages = 0;\n      this.loadedAssets = 0;\n      this.imagesLoadedCb = null;\n      this.images = [];\n    };\n  }();\n\n  var featureSupport = function () {\n    var ob = {\n      maskType: true\n    };\n\n    if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\n      ob.maskType = false;\n    }\n\n    return ob;\n  }();\n\n  var filtersFactory = function () {\n    var ob = {};\n    ob.createFilter = createFilter;\n    ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\n\n    function createFilter(filId) {\n      var fil = createNS('filter');\n      fil.setAttribute('id', filId);\n      fil.setAttribute('filterUnits', 'objectBoundingBox');\n      fil.setAttribute('x', '0%');\n      fil.setAttribute('y', '0%');\n      fil.setAttribute('width', '100%');\n      fil.setAttribute('height', '100%');\n      return fil;\n    }\n\n    function createAlphaToLuminanceFilter() {\n      var feColorMatrix = createNS('feColorMatrix');\n      feColorMatrix.setAttribute('type', 'matrix');\n      feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n      feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\n      return feColorMatrix;\n    }\n\n    return ob;\n  }();\n\n  var assetLoader = function () {\n    function formatResponse(xhr) {\n      if (xhr.response && typeof xhr.response === 'object') {\n        return xhr.response;\n      } else if (xhr.response && typeof xhr.response === 'string') {\n        return JSON.parse(xhr.response);\n      } else if (xhr.responseText) {\n        return JSON.parse(xhr.responseText);\n      }\n    }\n\n    function loadAsset(path, callback, errorCallback) {\n      var response;\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, true); // set responseType after calling open or IE will break.\n\n      try {\n        // This crashes on Android WebView prior to KitKat\n        xhr.responseType = \"json\";\n      } catch (err) {}\n\n      xhr.send();\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n          if (xhr.status == 200) {\n            response = formatResponse(xhr);\n            callback(response);\n          } else {\n            try {\n              response = formatResponse(xhr);\n              callback(response);\n            } catch (err) {\n              if (errorCallback) {\n                errorCallback(err);\n              }\n            }\n          }\n        }\n      };\n    }\n\n    return {\n      load: loadAsset\n    };\n  }();\n\n  function TextAnimatorProperty(textData, renderType, elem) {\n    this._isFirstFrame = true;\n    this._hasMaskedPath = false;\n    this._frameId = -1;\n    this._textData = textData;\n    this._renderType = renderType;\n    this._elem = elem;\n    this._animatorsData = createSizedArray(this._textData.a.length);\n    this._pathData = {};\n    this._moreOptions = {\n      alignment: {}\n    };\n    this.renderedLetters = [];\n    this.lettersChangedFlag = false;\n    this.initDynamicPropertyContainer(elem);\n  }\n\n  TextAnimatorProperty.prototype.searchProperties = function () {\n    var i,\n        len = this._textData.a.length,\n        animatorProps;\n    var getProp = PropertyFactory.getProp;\n\n    for (i = 0; i < len; i += 1) {\n      animatorProps = this._textData.a[i];\n      this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\n    }\n\n    if (this._textData.p && 'm' in this._textData.p) {\n      this._pathData = {\n        f: getProp(this._elem, this._textData.p.f, 0, 0, this),\n        l: getProp(this._elem, this._textData.p.l, 0, 0, this),\n        r: this._textData.p.r,\n        m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\n      };\n      this._hasMaskedPath = true;\n    } else {\n      this._hasMaskedPath = false;\n    }\n\n    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);\n  };\n\n  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\n    this.lettersChangedFlag = lettersChangedFlag;\n\n    if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\n      return;\n    }\n\n    this._isFirstFrame = false;\n    var alignment = this._moreOptions.alignment.v;\n    var animators = this._animatorsData;\n    var textData = this._textData;\n    var matrixHelper = this.mHelper;\n    var renderType = this._renderType;\n    var renderedLettersCount = this.renderedLetters.length;\n    var data = this.data;\n    var xPos, yPos;\n    var i, len;\n    var letters = documentData.l,\n        pathInfo,\n        currentLength,\n        currentPoint,\n        segmentLength,\n        flag,\n        pointInd,\n        segmentInd,\n        prevPoint,\n        points,\n        segments,\n        partialLength,\n        totalLength,\n        perc,\n        tanAngle,\n        mask;\n\n    if (this._hasMaskedPath) {\n      mask = this._pathData.m;\n\n      if (!this._pathData.n || this._pathData._mdf) {\n        var paths = mask.v;\n\n        if (this._pathData.r) {\n          paths = paths.reverse();\n        } // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\n\n\n        pathInfo = {\n          tLength: 0,\n          segments: []\n        };\n        len = paths._length - 1;\n        var bezierData;\n        totalLength = 0;\n\n        for (i = 0; i < len; i += 1) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[i + 1], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n\n        i = len;\n\n        if (mask.v.c) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[0], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n\n        this._pathData.pi = pathInfo;\n      }\n\n      pathInfo = this._pathData.pi;\n      currentLength = this._pathData.f.v;\n      segmentInd = 0;\n      pointInd = 1;\n      segmentLength = 0;\n      flag = true;\n      segments = pathInfo.segments;\n\n      if (currentLength < 0 && mask.v.c) {\n        if (pathInfo.tLength < Math.abs(currentLength)) {\n          currentLength = -Math.abs(currentLength) % pathInfo.tLength;\n        }\n\n        segmentInd = segments.length - 1;\n        points = segments[segmentInd].points;\n        pointInd = points.length - 1;\n\n        while (currentLength < 0) {\n          currentLength += points[pointInd].partialLength;\n          pointInd -= 1;\n\n          if (pointInd < 0) {\n            segmentInd -= 1;\n            points = segments[segmentInd].points;\n            pointInd = points.length - 1;\n          }\n        }\n      }\n\n      points = segments[segmentInd].points;\n      prevPoint = points[pointInd - 1];\n      currentPoint = points[pointInd];\n      partialLength = currentPoint.partialLength;\n    }\n\n    len = letters.length;\n    xPos = 0;\n    yPos = 0;\n    var yOff = documentData.finalSize * 1.2 * 0.714;\n    var firstLine = true;\n    var animatorProps, animatorSelector;\n    var j, jLen;\n    var letterValue;\n    jLen = animators.length;\n    var lastLetter;\n    var mult,\n        ind = -1,\n        offf,\n        xPathPos,\n        yPathPos;\n    var initPathPos = currentLength,\n        initSegmentInd = segmentInd,\n        initPointInd = pointInd,\n        currentLine = -1;\n    var elemOpacity;\n    var sc, sw, fc, k;\n    var lineLength = 0;\n    var letterSw,\n        letterSc,\n        letterFc,\n        letterM = '',\n        letterP = this.defaultPropsArray,\n        letterO; //\n\n    if (documentData.j === 2 || documentData.j === 1) {\n      var animatorJustifyOffset = 0;\n      var animatorFirstCharOffset = 0;\n      var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\n      var lastIndex = 0;\n      var isNewLine = true;\n\n      for (i = 0; i < len; i += 1) {\n        if (letters[i].n) {\n          if (animatorJustifyOffset) {\n            animatorJustifyOffset += animatorFirstCharOffset;\n          }\n\n          while (lastIndex < i) {\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n            lastIndex += 1;\n          }\n\n          animatorJustifyOffset = 0;\n          isNewLine = true;\n        } else {\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n\n            if (animatorProps.t.propType) {\n              if (isNewLine && documentData.j === 2) {\n                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\n              }\n\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;\n              } else {\n                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;\n              }\n            }\n          }\n\n          isNewLine = false;\n        }\n      }\n\n      if (animatorJustifyOffset) {\n        animatorJustifyOffset += animatorFirstCharOffset;\n      }\n\n      while (lastIndex < i) {\n        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n        lastIndex += 1;\n      }\n    } //\n\n\n    for (i = 0; i < len; i += 1) {\n      matrixHelper.reset();\n      elemOpacity = 1;\n\n      if (letters[i].n) {\n        xPos = 0;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        currentLength = initPathPos;\n        firstLine = false;\n        lineLength = 0;\n\n        if (this._hasMaskedPath) {\n          segmentInd = initSegmentInd;\n          pointInd = initPointInd;\n          points = segments[segmentInd].points;\n          prevPoint = points[pointInd - 1];\n          currentPoint = points[pointInd];\n          partialLength = currentPoint.partialLength;\n          segmentLength = 0;\n        }\n\n        letterO = letterSw = letterFc = letterM = '';\n        letterP = this.defaultPropsArray;\n      } else {\n        if (this._hasMaskedPath) {\n          if (currentLine !== letters[i].line) {\n            switch (documentData.j) {\n              case 1:\n                currentLength += totalLength - documentData.lineWidths[letters[i].line];\n                break;\n\n              case 2:\n                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;\n                break;\n            }\n\n            currentLine = letters[i].line;\n          }\n\n          if (ind !== letters[i].ind) {\n            if (letters[ind]) {\n              currentLength += letters[ind].extra;\n            }\n\n            currentLength += letters[i].an / 2;\n            ind = letters[i].ind;\n          }\n\n          currentLength += alignment[0] * letters[i].an / 200;\n          var animatorOffset = 0;\n\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n\n            if (animatorProps.p.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.p.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.p.v[0] * mult;\n              }\n            }\n\n            if (animatorProps.a.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.a.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.a.v[0] * mult;\n              }\n            }\n          }\n\n          flag = true;\n\n          while (flag) {\n            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\n              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\n              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\n              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\n              matrixHelper.translate(-alignment[0] * letters[i].an / 200, -(alignment[1] * yOff / 100));\n              flag = false;\n            } else if (points) {\n              segmentLength += currentPoint.partialLength;\n              pointInd += 1;\n\n              if (pointInd >= points.length) {\n                pointInd = 0;\n                segmentInd += 1;\n\n                if (!segments[segmentInd]) {\n                  if (mask.v.c) {\n                    pointInd = 0;\n                    segmentInd = 0;\n                    points = segments[segmentInd].points;\n                  } else {\n                    segmentLength -= currentPoint.partialLength;\n                    points = null;\n                  }\n                } else {\n                  points = segments[segmentInd].points;\n                }\n              }\n\n              if (points) {\n                prevPoint = currentPoint;\n                currentPoint = points[pointInd];\n                partialLength = currentPoint.partialLength;\n              }\n            }\n          }\n\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0);\n        } else {\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0); // Grouping alignment\n\n          matrixHelper.translate(-alignment[0] * letters[i].an / 200, -alignment[1] * yOff / 100, 0);\n        }\n\n        lineLength += letters[i].l / 2;\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.t.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars); //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\n\n            if (xPos !== 0 || documentData.j !== 0) {\n              if (this._hasMaskedPath) {\n                if (mult.length) {\n                  currentLength += animatorProps.t.v * mult[0];\n                } else {\n                  currentLength += animatorProps.t.v * mult;\n                }\n              } else {\n                if (mult.length) {\n                  xPos += animatorProps.t.v * mult[0];\n                } else {\n                  xPos += animatorProps.t.v * mult;\n                }\n              }\n            }\n          }\n        }\n\n        lineLength += letters[i].l / 2;\n\n        if (documentData.strokeWidthAnim) {\n          sw = documentData.sw || 0;\n        }\n\n        if (documentData.strokeColorAnim) {\n          if (documentData.sc) {\n            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\n          } else {\n            sc = [0, 0, 0];\n          }\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.a.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.s.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);\n            } else {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          animatorSelector = animators[j].s;\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n          if (animatorProps.sk.propType) {\n            if (mult.length) {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\n            } else {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\n            }\n          }\n\n          if (animatorProps.r.propType) {\n            if (mult.length) {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\n            } else {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult);\n            }\n          }\n\n          if (animatorProps.ry.propType) {\n            if (mult.length) {\n              matrixHelper.rotateY(animatorProps.ry.v * mult[1]);\n            } else {\n              matrixHelper.rotateY(animatorProps.ry.v * mult);\n            }\n          }\n\n          if (animatorProps.rx.propType) {\n            if (mult.length) {\n              matrixHelper.rotateX(animatorProps.rx.v * mult[0]);\n            } else {\n              matrixHelper.rotateX(animatorProps.rx.v * mult);\n            }\n          }\n\n          if (animatorProps.o.propType) {\n            if (mult.length) {\n              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];\n            } else {\n              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;\n            }\n          }\n\n          if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\n            if (mult.length) {\n              sw += animatorProps.sw.v * mult[0];\n            } else {\n              sw += animatorProps.sw.v * mult;\n            }\n          }\n\n          if (documentData.strokeColorAnim && animatorProps.sc.propType) {\n            for (k = 0; k < 3; k += 1) {\n              if (mult.length) {\n                sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k]) * mult[0];\n              } else {\n                sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k]) * mult;\n              }\n            }\n          }\n\n          if (documentData.fillColorAnim && documentData.fc) {\n            if (animatorProps.fc.propType) {\n              for (k = 0; k < 3; k += 1) {\n                if (mult.length) {\n                  fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k]) * mult[0];\n                } else {\n                  fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k]) * mult;\n                }\n              }\n            }\n\n            if (animatorProps.fh.propType) {\n              if (mult.length) {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);\n              } else {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult);\n              }\n            }\n\n            if (animatorProps.fs.propType) {\n              if (mult.length) {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);\n              } else {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);\n              }\n            }\n\n            if (animatorProps.fb.propType) {\n              if (mult.length) {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);\n              } else {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);\n              }\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.p.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\n              } else {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n              }\n            } else {\n              if (mult.length) {\n                matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\n              } else {\n                matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n              }\n            }\n          }\n        }\n\n        if (documentData.strokeWidthAnim) {\n          letterSw = sw < 0 ? 0 : sw;\n        }\n\n        if (documentData.strokeColorAnim) {\n          letterSc = 'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')';\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          letterFc = 'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')';\n        }\n\n        if (this._hasMaskedPath) {\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(0, alignment[1] * yOff / 100 + yPos, 0);\n\n          if (textData.p.p) {\n            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\n            var rot = Math.atan(tanAngle) * 180 / Math.PI;\n\n            if (currentPoint.point[0] < prevPoint.point[0]) {\n              rot += 180;\n            }\n\n            matrixHelper.rotate(-rot * Math.PI / 180);\n          }\n\n          matrixHelper.translate(xPathPos, yPathPos, 0);\n          currentLength -= alignment[0] * letters[i].an / 200;\n\n          if (letters[i + 1] && ind !== letters[i + 1].ind) {\n            currentLength += letters[i].an / 2;\n            currentLength += documentData.tr / 1000 * documentData.finalSize;\n          }\n        } else {\n          matrixHelper.translate(xPos, yPos, 0);\n\n          if (documentData.ps) {\n            //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\n            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n          }\n\n          switch (documentData.j) {\n            case 1:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);\n              break;\n\n            case 2:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);\n              break;\n          }\n\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(offf, 0, 0);\n          matrixHelper.translate(alignment[0] * letters[i].an / 200, alignment[1] * yOff / 100, 0);\n          xPos += letters[i].l + documentData.tr / 1000 * documentData.finalSize;\n        }\n\n        if (renderType === 'html') {\n          letterM = matrixHelper.toCSS();\n        } else if (renderType === 'svg') {\n          letterM = matrixHelper.to2dCSS();\n        } else {\n          letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];\n        }\n\n        letterO = elemOpacity;\n      }\n\n      if (renderedLettersCount <= i) {\n        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);\n        this.renderedLetters.push(letterValue);\n        renderedLettersCount += 1;\n        this.lettersChangedFlag = true;\n      } else {\n        letterValue = this.renderedLetters[i];\n        this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\n      }\n    }\n  };\n\n  TextAnimatorProperty.prototype.getValue = function () {\n    if (this._elem.globalData.frameId === this._frameId) {\n      return;\n    }\n\n    this._frameId = this._elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n\n  TextAnimatorProperty.prototype.mHelper = new Matrix();\n  TextAnimatorProperty.prototype.defaultPropsArray = [];\n  extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\n\n  function TextAnimatorDataProperty(elem, animatorProps, container) {\n    var defaultData = {\n      propType: false\n    };\n    var getProp = PropertyFactory.getProp;\n    var textAnimator_animatables = animatorProps.a;\n    this.a = {\n      r: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\n      rx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\n      ry: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\n      sk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\n      sa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\n      s: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\n      a: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\n      o: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\n      p: textAnimator_animatables.p ? getProp(elem, textAnimator_animatables.p, 1, 0, container) : defaultData,\n      sw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\n      sc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\n      fc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\n      fh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\n      fs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\n      fb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\n      t: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\n    };\n    this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container);\n    this.s.t = animatorProps.s.t;\n  }\n\n  function LetterProps(o, sw, sc, fc, m, p) {\n    this.o = o;\n    this.sw = sw;\n    this.sc = sc;\n    this.fc = fc;\n    this.m = m;\n    this.p = p;\n    this._mdf = {\n      o: true,\n      sw: !!sw,\n      sc: !!sc,\n      fc: !!fc,\n      m: true,\n      p: true\n    };\n  }\n\n  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\n    this._mdf.o = false;\n    this._mdf.sw = false;\n    this._mdf.sc = false;\n    this._mdf.fc = false;\n    this._mdf.m = false;\n    this._mdf.p = false;\n    var updated = false;\n\n    if (this.o !== o) {\n      this.o = o;\n      this._mdf.o = true;\n      updated = true;\n    }\n\n    if (this.sw !== sw) {\n      this.sw = sw;\n      this._mdf.sw = true;\n      updated = true;\n    }\n\n    if (this.sc !== sc) {\n      this.sc = sc;\n      this._mdf.sc = true;\n      updated = true;\n    }\n\n    if (this.fc !== fc) {\n      this.fc = fc;\n      this._mdf.fc = true;\n      updated = true;\n    }\n\n    if (this.m !== m) {\n      this.m = m;\n      this._mdf.m = true;\n      updated = true;\n    }\n\n    if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\n      this.p = p;\n      this._mdf.p = true;\n      updated = true;\n    }\n\n    return updated;\n  };\n\n  function TextProperty(elem, data) {\n    this._frameId = initialDefaultFrame;\n    this.pv = '';\n    this.v = '';\n    this.kf = false;\n    this._isFirstFrame = true;\n    this._mdf = false;\n    this.data = data;\n    this.elem = elem;\n    this.comp = this.elem.comp;\n    this.keysIndex = 0;\n    this.canResize = false;\n    this.minimumFontSize = 1;\n    this.effectsSequence = [];\n    this.currentData = {\n      ascent: 0,\n      boxWidth: this.defaultBoxWidth,\n      f: '',\n      fStyle: '',\n      fWeight: '',\n      fc: '',\n      j: '',\n      justifyOffset: '',\n      l: [],\n      lh: 0,\n      lineWidths: [],\n      ls: '',\n      of: '',\n      s: '',\n      sc: '',\n      sw: 0,\n      t: 0,\n      tr: 0,\n      sz: 0,\n      ps: null,\n      fillColorAnim: false,\n      strokeColorAnim: false,\n      strokeWidthAnim: false,\n      yOffset: 0,\n      finalSize: 0,\n      finalText: [],\n      finalLineHeight: 0,\n      __complete: false\n    };\n    this.copyData(this.currentData, this.data.d.k[0].s);\n\n    if (!this.searchProperty()) {\n      this.completeTextData(this.currentData);\n    }\n  }\n\n  TextProperty.prototype.defaultBoxWidth = [0, 0];\n\n  TextProperty.prototype.copyData = function (obj, data) {\n    for (var s in data) {\n      if (data.hasOwnProperty(s)) {\n        obj[s] = data[s];\n      }\n    }\n\n    return obj;\n  };\n\n  TextProperty.prototype.setCurrentData = function (data) {\n    if (!data.__complete) {\n      this.completeTextData(data);\n    }\n\n    this.currentData = data;\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\n    this._mdf = true;\n  };\n\n  TextProperty.prototype.searchProperty = function () {\n    return this.searchKeyframes();\n  };\n\n  TextProperty.prototype.searchKeyframes = function () {\n    this.kf = this.data.d.k.length > 1;\n\n    if (this.kf) {\n      this.addEffect(this.getKeyframeValue.bind(this));\n    }\n\n    return this.kf;\n  };\n\n  TextProperty.prototype.addEffect = function (effectFunction) {\n    this.effectsSequence.push(effectFunction);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.getValue = function (_finalValue) {\n    if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\n      return;\n    }\n\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\n    var currentValue = this.currentData;\n    var currentIndex = this.keysIndex;\n\n    if (this.lock) {\n      this.setCurrentData(this.currentData);\n      return;\n    }\n\n    this.lock = true;\n    this._mdf = false;\n    var multipliedValue;\n    var i,\n        len = this.effectsSequence.length;\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\n\n    for (i = 0; i < len; i += 1) {\n      //Checking if index changed to prevent creating a new object every time the expression updates.\n      if (currentIndex !== this.keysIndex) {\n        finalValue = this.effectsSequence[i](finalValue, finalValue.t);\n      } else {\n        finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\n      }\n    }\n\n    if (currentValue !== finalValue) {\n      this.setCurrentData(finalValue);\n    }\n\n    this.pv = this.v = this.currentData;\n    this.lock = false;\n    this.frameId = this.elem.globalData.frameId;\n  };\n\n  TextProperty.prototype.getKeyframeValue = function () {\n    var textKeys = this.data.d.k,\n        textDocumentData;\n    var frameNum = this.elem.comp.renderedFrame;\n    var i = 0,\n        len = textKeys.length;\n\n    while (i <= len - 1) {\n      textDocumentData = textKeys[i].s;\n\n      if (i === len - 1 || textKeys[i + 1].t > frameNum) {\n        break;\n      }\n\n      i += 1;\n    }\n\n    if (this.keysIndex !== i) {\n      this.keysIndex = i;\n    }\n\n    return this.data.d.k[this.keysIndex].s;\n  };\n\n  TextProperty.prototype.buildFinalText = function (text) {\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\n    var charactersArray = [];\n    var i = 0,\n        len = text.length;\n    var charCode;\n\n    while (i < len) {\n      charCode = text.charCodeAt(i);\n\n      if (combinedCharacters.indexOf(charCode) !== -1) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i);\n      } else {\n        if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n          charCode = text.charCodeAt(i + 1);\n\n          if (charCode >= 0xDC00 && charCode <= 0xDFFF) {\n            charactersArray.push(text.substr(i, 2));\n            ++i;\n          } else {\n            charactersArray.push(text.charAt(i));\n          }\n        } else {\n          charactersArray.push(text.charAt(i));\n        }\n      }\n\n      i += 1;\n    }\n\n    return charactersArray;\n  };\n\n  TextProperty.prototype.completeTextData = function (documentData) {\n    documentData.__complete = true;\n    var fontManager = this.elem.globalData.fontManager;\n    var data = this.data;\n    var letters = [];\n    var i, len;\n    var newLineFlag,\n        index = 0,\n        val;\n    var anchorGrouping = data.m.g;\n    var currentSize = 0,\n        currentPos = 0,\n        currentLine = 0,\n        lineWidths = [];\n    var lineWidth = 0;\n    var maxLineWidth = 0;\n    var j, jLen;\n    var fontData = fontManager.getFontByName(documentData.f);\n    var charData,\n        cLength = 0;\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\n    var fWeight = 'normal',\n        fStyle = 'normal';\n    len = styles.length;\n    var styleName;\n\n    for (i = 0; i < len; i += 1) {\n      styleName = styles[i].toLowerCase();\n\n      switch (styleName) {\n        case 'italic':\n          fStyle = 'italic';\n          break;\n\n        case 'bold':\n          fWeight = '700';\n          break;\n\n        case 'black':\n          fWeight = '900';\n          break;\n\n        case 'medium':\n          fWeight = '500';\n          break;\n\n        case 'regular':\n        case 'normal':\n          fWeight = '400';\n          break;\n\n        case 'light':\n        case 'thin':\n          fWeight = '200';\n          break;\n      }\n    }\n\n    documentData.fWeight = fontData.fWeight || fWeight;\n    documentData.fStyle = fStyle;\n    documentData.finalSize = documentData.s;\n    documentData.finalText = this.buildFinalText(documentData.t);\n    len = documentData.finalText.length;\n    documentData.finalLineHeight = documentData.lh;\n    var trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n    var charCode;\n\n    if (documentData.sz) {\n      var flag = true;\n      var boxWidth = documentData.sz[0];\n      var boxHeight = documentData.sz[1];\n      var currentHeight, finalText;\n\n      while (flag) {\n        finalText = this.buildFinalText(documentData.t);\n        currentHeight = 0;\n        lineWidth = 0;\n        len = finalText.length;\n        trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n        var lastSpaceIndex = -1;\n\n        for (i = 0; i < len; i += 1) {\n          charCode = finalText[i].charCodeAt(0);\n          newLineFlag = false;\n\n          if (finalText[i] === ' ') {\n            lastSpaceIndex = i;\n          } else if (charCode === 13 || charCode === 3) {\n            lineWidth = 0;\n            newLineFlag = true;\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n          }\n\n          if (fontManager.chars) {\n            charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\n            cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n          } else {\n            //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\n            cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\n          }\n\n          if (lineWidth + cLength > boxWidth && finalText[i] !== ' ') {\n            if (lastSpaceIndex === -1) {\n              len += 1;\n            } else {\n              i = lastSpaceIndex;\n            }\n\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n            finalText.splice(i, lastSpaceIndex === i ? 1 : 0, \"\\r\"); //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\n\n            lastSpaceIndex = -1;\n            lineWidth = 0;\n          } else {\n            lineWidth += cLength;\n            lineWidth += trackingOffset;\n          }\n        }\n\n        currentHeight += fontData.ascent * documentData.finalSize / 100;\n\n        if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\n          documentData.finalSize -= 1;\n          documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\n        } else {\n          documentData.finalText = finalText;\n          len = documentData.finalText.length;\n          flag = false;\n        }\n      }\n    }\n\n    lineWidth = -trackingOffset;\n    cLength = 0;\n    var uncollapsedSpaces = 0;\n    var currentChar;\n\n    for (i = 0; i < len; i += 1) {\n      newLineFlag = false;\n      currentChar = documentData.finalText[i];\n      charCode = currentChar.charCodeAt(0);\n\n      if (currentChar === ' ') {\n        val = \"\\xA0\";\n      } else if (charCode === 13 || charCode === 3) {\n        uncollapsedSpaces = 0;\n        lineWidths.push(lineWidth);\n        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n        lineWidth = -2 * trackingOffset;\n        val = '';\n        newLineFlag = true;\n        currentLine += 1;\n      } else {\n        val = documentData.finalText[i];\n      }\n\n      if (fontManager.chars) {\n        charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\n        cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n      } else {\n        //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\n        //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\n        cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\n      } //\n\n\n      if (currentChar === ' ') {\n        uncollapsedSpaces += cLength + trackingOffset;\n      } else {\n        lineWidth += cLength + trackingOffset + uncollapsedSpaces;\n        uncollapsedSpaces = 0;\n      }\n\n      letters.push({\n        l: cLength,\n        an: cLength,\n        add: currentSize,\n        n: newLineFlag,\n        anIndexes: [],\n        val: val,\n        line: currentLine,\n        animatorJustifyOffset: 0\n      });\n\n      if (anchorGrouping == 2) {\n        currentSize += cLength;\n\n        if (val === '' || val === \"\\xA0\" || i === len - 1) {\n          if (val === '' || val === \"\\xA0\") {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          index += 1;\n          currentSize = 0;\n        }\n      } else if (anchorGrouping == 3) {\n        currentSize += cLength;\n\n        if (val === '' || i === len - 1) {\n          if (val === '') {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          currentSize = 0;\n          index += 1;\n        }\n      } else {\n        letters[index].ind = index;\n        letters[index].extra = 0;\n        index += 1;\n      }\n    }\n\n    documentData.l = letters;\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n    lineWidths.push(lineWidth);\n\n    if (documentData.sz) {\n      documentData.boxWidth = documentData.sz[0];\n      documentData.justifyOffset = 0;\n    } else {\n      documentData.boxWidth = maxLineWidth;\n\n      switch (documentData.j) {\n        case 1:\n          documentData.justifyOffset = -documentData.boxWidth;\n          break;\n\n        case 2:\n          documentData.justifyOffset = -documentData.boxWidth / 2;\n          break;\n\n        default:\n          documentData.justifyOffset = 0;\n      }\n    }\n\n    documentData.lineWidths = lineWidths;\n    var animators = data.a,\n        animatorData,\n        letterData;\n    jLen = animators.length;\n    var based,\n        ind,\n        indexes = [];\n\n    for (j = 0; j < jLen; j += 1) {\n      animatorData = animators[j];\n\n      if (animatorData.a.sc) {\n        documentData.strokeColorAnim = true;\n      }\n\n      if (animatorData.a.sw) {\n        documentData.strokeWidthAnim = true;\n      }\n\n      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\n        documentData.fillColorAnim = true;\n      }\n\n      ind = 0;\n      based = animatorData.s.b;\n\n      for (i = 0; i < len; i += 1) {\n        letterData = letters[i];\n        letterData.anIndexes[j] = ind;\n\n        if (based == 1 && letterData.val !== '' || based == 2 && letterData.val !== '' && letterData.val !== \"\\xA0\" || based == 3 && (letterData.n || letterData.val == \"\\xA0\" || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {\n          if (animatorData.s.rn === 1) {\n            indexes.push(ind);\n          }\n\n          ind += 1;\n        }\n      }\n\n      data.a[j].s.totalChars = ind;\n      var currentInd = -1,\n          newInd;\n\n      if (animatorData.s.rn === 1) {\n        for (i = 0; i < len; i += 1) {\n          letterData = letters[i];\n\n          if (currentInd != letterData.anIndexes[j]) {\n            currentInd = letterData.anIndexes[j];\n            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];\n          }\n\n          letterData.anIndexes[j] = newInd;\n        }\n      }\n    }\n\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;\n    documentData.ls = documentData.ls || 0;\n    documentData.ascent = fontData.ascent * documentData.finalSize / 100;\n  };\n\n  TextProperty.prototype.updateDocumentData = function (newData, index) {\n    index = index === undefined ? this.keysIndex : index;\n    var dData = this.copyData({}, this.data.d.k[index].s);\n    dData = this.copyData(dData, newData);\n    this.data.d.k[index].s = dData;\n    this.recalculate(index);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.recalculate = function (index) {\n    var dData = this.data.d.k[index].s;\n    dData.__complete = false;\n    this.keysIndex = 0;\n    this._isFirstFrame = true;\n    this.getValue(dData);\n  };\n\n  TextProperty.prototype.canResizeFont = function (_canResize) {\n    this.canResize = _canResize;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.setMinimumFontSize = function (_fontValue) {\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n\n  var TextSelectorProp = function () {\n    var max = Math.max;\n    var min = Math.min;\n    var floor = Math.floor;\n\n    function TextSelectorProp(elem, data) {\n      this._currentTextLength = -1;\n      this.k = false;\n      this.data = data;\n      this.elem = elem;\n      this.comp = elem.comp;\n      this.finalS = 0;\n      this.finalE = 0;\n      this.initDynamicPropertyContainer(elem);\n      this.s = PropertyFactory.getProp(elem, data.s || {\n        k: 0\n      }, 0, 0, this);\n\n      if ('e' in data) {\n        this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this);\n      } else {\n        this.e = {\n          v: 100\n        };\n      }\n\n      this.o = PropertyFactory.getProp(elem, data.o || {\n        k: 0\n      }, 0, 0, this);\n      this.xe = PropertyFactory.getProp(elem, data.xe || {\n        k: 0\n      }, 0, 0, this);\n      this.ne = PropertyFactory.getProp(elem, data.ne || {\n        k: 0\n      }, 0, 0, this);\n      this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this);\n\n      if (!this.dynamicProperties.length) {\n        this.getValue();\n      }\n    }\n\n    TextSelectorProp.prototype = {\n      getMult: function getMult(ind) {\n        if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\n          this.getValue();\n        } //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\n\n\n        var easer = BezierFactory.getBezierEasing(this.ne.v / 100, 0, 1 - this.xe.v / 100, 1).get;\n        var mult = 0;\n        var s = this.finalS;\n        var e = this.finalE;\n        var type = this.data.sh;\n\n        if (type == 2) {\n          if (e === s) {\n            mult = ind >= e ? 1 : 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type == 3) {\n          if (e === s) {\n            mult = ind >= e ? 0 : 1;\n          } else {\n            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type == 4) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n\n            if (mult < 0.5) {\n              mult *= 2;\n            } else {\n              mult = 1 - 2 * (mult - 0.5);\n            }\n          }\n\n          mult = easer(mult);\n        } else if (type == 5) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            var tot = e - s;\n            /*ind += 0.5;\r\n            mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\n\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            var x = -tot / 2 + ind;\n            var a = tot / 2;\n            mult = Math.sqrt(1 - x * x / (a * a));\n          }\n\n          mult = easer(mult);\n        } else if (type == 6) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2;\n            /*\r\n             ind = Math.min(Math.max(s,ind),e-1);\r\n             mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n             mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\n          }\n\n          mult = easer(mult);\n        } else {\n          if (ind >= floor(s)) {\n            if (ind - s < 0) {\n              mult = 1 - (s - ind);\n            } else {\n              mult = max(0, min(e - ind, 1));\n            }\n          }\n\n          mult = easer(mult);\n        }\n\n        return mult * this.a.v;\n      },\n      getValue: function getValue(newCharsFlag) {\n        this.iterateDynamicProperties();\n        this._mdf = newCharsFlag || this._mdf;\n        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\n\n        if (newCharsFlag && this.data.r === 2) {\n          this.e.v = this._currentTextLength;\n        }\n\n        var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\n        var o = this.o.v / divisor;\n        var s = this.s.v / divisor + o;\n        var e = this.e.v / divisor + o;\n\n        if (s > e) {\n          var _s = s;\n          s = e;\n          e = _s;\n        }\n\n        this.finalS = s;\n        this.finalE = e;\n      }\n    };\n    extendPrototype([DynamicPropertyContainer], TextSelectorProp);\n\n    function getTextSelectorProp(elem, data, arr) {\n      return new TextSelectorProp(elem, data, arr);\n    }\n\n    return {\n      getTextSelectorProp: getTextSelectorProp\n    };\n  }();\n\n  var pool_factory = function () {\n    return function (initialLength, _create, _release, _clone) {\n      var _length = 0;\n      var _maxLength = initialLength;\n      var pool = createSizedArray(_maxLength);\n      var ob = {\n        newElement: newElement,\n        release: release\n      };\n\n      function newElement() {\n        var element;\n\n        if (_length) {\n          _length -= 1;\n          element = pool[_length];\n        } else {\n          element = _create();\n        }\n\n        return element;\n      }\n\n      function release(element) {\n        if (_length === _maxLength) {\n          pool = pooling.double(pool);\n          _maxLength = _maxLength * 2;\n        }\n\n        if (_release) {\n          _release(element);\n        }\n\n        pool[_length] = element;\n        _length += 1;\n      }\n\n      function clone() {\n        var clonedElement = newElement();\n        return _clone(clonedElement);\n      }\n\n      return ob;\n    };\n  }();\n\n  var pooling = function () {\n    function _double(arr) {\n      return arr.concat(createSizedArray(arr.length));\n    }\n\n    return {\n      double: _double\n    };\n  }();\n\n  var point_pool = function () {\n    function create() {\n      return createTypedArray('float32', 2);\n    }\n\n    return pool_factory(8, create);\n  }();\n\n  var shape_pool = function () {\n    function create() {\n      return new ShapePath();\n    }\n\n    function release(shapePath) {\n      var len = shapePath._length,\n          i;\n\n      for (i = 0; i < len; i += 1) {\n        point_pool.release(shapePath.v[i]);\n        point_pool.release(shapePath.i[i]);\n        point_pool.release(shapePath.o[i]);\n        shapePath.v[i] = null;\n        shapePath.i[i] = null;\n        shapePath.o[i] = null;\n      }\n\n      shapePath._length = 0;\n      shapePath.c = false;\n    }\n\n    function clone(shape) {\n      var cloned = factory.newElement();\n      var i,\n          len = shape._length === undefined ? shape.v.length : shape._length;\n      cloned.setLength(len);\n      cloned.c = shape.c;\n      var pt;\n\n      for (i = 0; i < len; i += 1) {\n        cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);\n      }\n\n      return cloned;\n    }\n\n    var factory = pool_factory(4, create, release);\n    factory.clone = clone;\n    return factory;\n  }();\n\n  var shapeCollection_pool = function () {\n    var ob = {\n      newShapeCollection: newShapeCollection,\n      release: release\n    };\n    var _length = 0;\n    var _maxLength = 4;\n    var pool = createSizedArray(_maxLength);\n\n    function newShapeCollection() {\n      var shapeCollection;\n\n      if (_length) {\n        _length -= 1;\n        shapeCollection = pool[_length];\n      } else {\n        shapeCollection = new ShapeCollection();\n      }\n\n      return shapeCollection;\n    }\n\n    function release(shapeCollection) {\n      var i,\n          len = shapeCollection._length;\n\n      for (i = 0; i < len; i += 1) {\n        shape_pool.release(shapeCollection.shapes[i]);\n      }\n\n      shapeCollection._length = 0;\n\n      if (_length === _maxLength) {\n        pool = pooling.double(pool);\n        _maxLength = _maxLength * 2;\n      }\n\n      pool[_length] = shapeCollection;\n      _length += 1;\n    }\n\n    return ob;\n  }();\n\n  var segments_length_pool = function () {\n    function create() {\n      return {\n        lengths: [],\n        totalLength: 0\n      };\n    }\n\n    function release(element) {\n      var i,\n          len = element.lengths.length;\n\n      for (i = 0; i < len; i += 1) {\n        bezier_length_pool.release(element.lengths[i]);\n      }\n\n      element.lengths.length = 0;\n    }\n\n    return pool_factory(8, create, release);\n  }();\n\n  var bezier_length_pool = function () {\n    function create() {\n      return {\n        addedLength: 0,\n        percents: createTypedArray('float32', defaultCurveSegments),\n        lengths: createTypedArray('float32', defaultCurveSegments)\n      };\n    }\n\n    return pool_factory(8, create);\n  }();\n\n  function BaseRenderer() {}\n\n  BaseRenderer.prototype.checkLayers = function (num) {\n    var i,\n        len = this.layers.length,\n        data;\n    this.completeLayers = true;\n\n    for (i = len - 1; i >= 0; i--) {\n      if (!this.elements[i]) {\n        data = this.layers[i];\n\n        if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {\n          this.buildItem(i);\n        }\n      }\n\n      this.completeLayers = this.elements[i] ? this.completeLayers : false;\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.createItem = function (layer) {\n    switch (layer.ty) {\n      case 2:\n        return this.createImage(layer);\n\n      case 0:\n        return this.createComp(layer);\n\n      case 1:\n        return this.createSolid(layer);\n\n      case 3:\n        return this.createNull(layer);\n\n      case 4:\n        return this.createShape(layer);\n\n      case 5:\n        return this.createText(layer);\n\n      case 13:\n        return this.createCamera(layer);\n    }\n\n    return this.createNull(layer);\n  };\n\n  BaseRenderer.prototype.createCamera = function () {\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\n  };\n\n  BaseRenderer.prototype.buildAllItems = function () {\n    var i,\n        len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.buildItem(i);\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.includeLayers = function (newLayers) {\n    this.completeLayers = false;\n    var i,\n        len = newLayers.length;\n    var j,\n        jLen = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      j = 0;\n\n      while (j < jLen) {\n        if (this.layers[j].id == newLayers[i].id) {\n          this.layers[j] = newLayers[i];\n          break;\n        }\n\n        j += 1;\n      }\n    }\n  };\n\n  BaseRenderer.prototype.setProjectInterface = function (pInterface) {\n    this.globalData.projectInterface = pInterface;\n  };\n\n  BaseRenderer.prototype.initItems = function () {\n    if (!this.globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n  };\n\n  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\n    var elements = this.elements;\n    var layers = this.layers;\n    var i = 0,\n        len = layers.length;\n\n    while (i < len) {\n      if (layers[i].ind == parentName) {\n        if (!elements[i] || elements[i] === true) {\n          this.buildItem(i);\n          this.addPendingElement(element);\n        } else {\n          hierarchy.push(elements[i]);\n          elements[i].setAsParent();\n\n          if (layers[i].parent !== undefined) {\n            this.buildElementParenting(element, layers[i].parent, hierarchy);\n          } else {\n            element.setHierarchy(hierarchy);\n          }\n        }\n      }\n\n      i += 1;\n    }\n  };\n\n  BaseRenderer.prototype.addPendingElement = function (element) {\n    this.pendingElements.push(element);\n  };\n\n  BaseRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i,\n        len = assets.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i]);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\n    this.globalData.fontManager = new FontManager();\n    this.globalData.fontManager.addChars(animData.chars);\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\n    this.globalData.frameId = 0;\n    this.globalData.frameRate = animData.fr;\n    this.globalData.nm = animData.nm;\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h\n    };\n  };\n\n  function SVGRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.svgElement = createNS('svg');\n    var ariaLabel = '';\n\n    if (config && config.title) {\n      var titleElement = createNS('title');\n      var titleId = createElementID();\n      titleElement.setAttribute('id', titleId);\n      titleElement.textContent = config.title;\n      this.svgElement.appendChild(titleElement);\n      ariaLabel += titleId;\n    }\n\n    if (config && config.description) {\n      var descElement = createNS('desc');\n      var descId = createElementID();\n      descElement.setAttribute('id', descId);\n      descElement.textContent = config.description;\n      this.svgElement.appendChild(descElement);\n      ariaLabel += ' ' + descId;\n    }\n\n    if (ariaLabel) {\n      this.svgElement.setAttribute('aria-labelledby', ariaLabel);\n    }\n\n    var defs = createNS('defs');\n    this.svgElement.appendChild(defs);\n    var maskElement = createNS('g');\n    this.svgElement.appendChild(maskElement);\n    this.layerElement = maskElement;\n    this.renderConfig = {\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      progressiveLoad: config && config.progressiveLoad || false,\n      hideOnTransparent: config && config.hideOnTransparent === false ? false : true,\n      viewBoxOnly: config && config.viewBoxOnly || false,\n      viewBoxSize: config && config.viewBoxSize || false,\n      className: config && config.className || ''\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      defs: defs,\n      renderConfig: this.renderConfig\n    };\n    this.elements = [];\n    this.pendingElements = [];\n    this.destroyed = false;\n    this.rendererType = 'svg';\n  }\n\n  extendPrototype([BaseRenderer], SVGRenderer);\n\n  SVGRenderer.prototype.createNull = function (data) {\n    return new NullElement(data, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createShape = function (data) {\n    return new SVGShapeElement(data, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createText = function (data) {\n    return new SVGTextElement(data, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createImage = function (data) {\n    return new IImageElement(data, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createSolid = function (data) {\n    return new ISolidElement(data, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.configAnimation = function (animData) {\n    this.svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n    if (this.renderConfig.viewBoxSize) {\n      this.svgElement.setAttribute('viewBox', this.renderConfig.viewBoxSize);\n    } else {\n      this.svgElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h);\n    }\n\n    if (!this.renderConfig.viewBoxOnly) {\n      this.svgElement.setAttribute('width', animData.w);\n      this.svgElement.setAttribute('height', animData.h);\n      this.svgElement.style.width = '100%';\n      this.svgElement.style.height = '100%';\n      this.svgElement.style.transform = 'translate3d(0,0,0)';\n    }\n\n    if (this.renderConfig.className) {\n      this.svgElement.setAttribute('class', this.renderConfig.className);\n    }\n\n    this.svgElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio); //this.layerElement.style.transform = 'translate3d(0,0,0)';\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\n\n    this.animationItem.wrapper.appendChild(this.svgElement); //Mask animation\n\n    var defs = this.globalData.defs;\n    this.setupGlobalData(animData, defs);\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.data = animData;\n    var maskElement = createNS('clipPath');\n    var rect = createNS('rect');\n    rect.setAttribute('width', animData.w);\n    rect.setAttribute('height', animData.h);\n    rect.setAttribute('x', 0);\n    rect.setAttribute('y', 0);\n    var maskId = createElementID();\n    maskElement.setAttribute('id', maskId);\n    maskElement.appendChild(rect);\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\" + maskId + \")\");\n    defs.appendChild(maskElement);\n    this.layers = animData.layers;\n    this.elements = createSizedArray(animData.layers.length);\n  };\n\n  SVGRenderer.prototype.destroy = function () {\n    this.animationItem.wrapper.innerHTML = '';\n    this.layerElement = null;\n    this.globalData.defs = null;\n    var i,\n        len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i++) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  SVGRenderer.prototype.updateContainerSize = function () {};\n\n  SVGRenderer.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty == 99) {\n      return;\n    }\n\n    elements[pos] = true;\n    var element = this.createItem(this.layers[pos]);\n    elements[pos] = element;\n\n    if (expressionsPlugin) {\n      if (this.layers[pos].ty === 0) {\n        this.globalData.projectInterface.registerComposition(element);\n      }\n\n      element.initExpressions();\n    }\n\n    this.appendElementInPos(element, pos);\n\n    if (this.layers[pos].tt) {\n      if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\n        this.buildItem(pos - 1);\n        this.addPendingElement(element);\n      } else {\n        element.setMatte(elements[pos - 1].layerId);\n      }\n    }\n  };\n\n  SVGRenderer.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n\n      if (element.data.tt) {\n        var i = 0,\n            len = this.elements.length;\n\n        while (i < len) {\n          if (this.elements[i] === element) {\n            element.setMatte(this.elements[i - 1].layerId);\n            break;\n          }\n\n          i += 1;\n        }\n      }\n    }\n  };\n\n  SVGRenderer.prototype.renderFrame = function (num) {\n    if (this.renderedFrame === num || this.destroyed) {\n      return;\n    }\n\n    if (num === null) {\n      num = this.renderedFrame;\n    } else {\n      this.renderedFrame = num;\n    } // console.log('-------');\n    // console.log('FRAME ',num);\n\n\n    this.globalData.frameNum = num;\n    this.globalData.frameId += 1;\n    this.globalData.projectInterface.currentFrame = num;\n    this.globalData._mdf = false;\n    var i,\n        len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = len - 1; i >= 0; i--) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    if (this.globalData._mdf) {\n      for (i = 0; i < len; i += 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n    }\n  };\n\n  SVGRenderer.prototype.appendElementInPos = function (element, pos) {\n    var newElement = element.getBaseElement();\n\n    if (!newElement) {\n      return;\n    }\n\n    var i = 0;\n    var nextElement;\n\n    while (i < pos) {\n      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\n        nextElement = this.elements[i].getBaseElement();\n      }\n\n      i += 1;\n    }\n\n    if (nextElement) {\n      this.layerElement.insertBefore(newElement, nextElement);\n    } else {\n      this.layerElement.appendChild(newElement);\n    }\n  };\n\n  SVGRenderer.prototype.hide = function () {\n    this.layerElement.style.display = 'none';\n  };\n\n  SVGRenderer.prototype.show = function () {\n    this.layerElement.style.display = 'block';\n  };\n\n  function CanvasRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      className: config && config.className || ''\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = 'canvas';\n  }\n\n  extendPrototype([BaseRenderer], CanvasRenderer);\n\n  CanvasRenderer.prototype.createShape = function (data) {\n    return new CVShapeElement(data, this.globalData, this);\n  };\n\n  CanvasRenderer.prototype.createText = function (data) {\n    return new CVTextElement(data, this.globalData, this);\n  };\n\n  CanvasRenderer.prototype.createImage = function (data) {\n    return new CVImageElement(data, this.globalData, this);\n  };\n\n  CanvasRenderer.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this);\n  };\n\n  CanvasRenderer.prototype.createSolid = function (data) {\n    return new CVSolidElement(data, this.globalData, this);\n  };\n\n  CanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\n\n  CanvasRenderer.prototype.ctxTransform = function (props) {\n    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\n      return;\n    }\n\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);\n      return;\n    }\n\n    this.transformMat.cloneFromProps(props);\n    var cProps = this.contextData.cTr.props;\n    this.transformMat.transform(cProps[0], cProps[1], cProps[2], cProps[3], cProps[4], cProps[5], cProps[6], cProps[7], cProps[8], cProps[9], cProps[10], cProps[11], cProps[12], cProps[13], cProps[14], cProps[15]); //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\n\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\n    var trProps = this.contextData.cTr.props;\n    this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);\n  };\n\n  CanvasRenderer.prototype.ctxOpacity = function (op) {\n    /*if(op === 1){\r\n        return;\r\n    }*/\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n      return;\n    }\n\n    this.contextData.cO *= op < 0 ? 0 : op;\n\n    if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {\n      this.canvasContext.globalAlpha = this.contextData.cO;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n    }\n  };\n\n  CanvasRenderer.prototype.reset = function () {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    this.contextData.reset();\n  };\n\n  CanvasRenderer.prototype.save = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.save();\n      return;\n    }\n\n    if (actionFlag) {\n      this.canvasContext.save();\n    }\n\n    var props = this.contextData.cTr.props;\n\n    if (this.contextData._length <= this.contextData.cArrPos) {\n      this.contextData.duplicate();\n    }\n\n    var i,\n        arr = this.contextData.saved[this.contextData.cArrPos];\n\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = props[i];\n    }\n\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\n    this.contextData.cArrPos += 1;\n  };\n\n  CanvasRenderer.prototype.restore = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    if (actionFlag) {\n      this.canvasContext.restore();\n      this.globalData.blendMode = 'source-over';\n    }\n\n    this.contextData.cArrPos -= 1;\n    var popped = this.contextData.saved[this.contextData.cArrPos];\n    var i,\n        arr = this.contextData.cTr.props;\n\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = popped[i];\n    }\n\n    this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13]);\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\n    this.contextData.cO = popped;\n\n    if (this.globalData.currentGlobalAlpha !== popped) {\n      this.canvasContext.globalAlpha = popped;\n      this.globalData.currentGlobalAlpha = popped;\n    }\n  };\n\n  CanvasRenderer.prototype.configAnimation = function (animData) {\n    if (this.animationItem.wrapper) {\n      this.animationItem.container = createTag('canvas');\n      this.animationItem.container.style.width = '100%';\n      this.animationItem.container.style.height = '100%'; //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\n      //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\n\n      this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\n      this.animationItem.wrapper.appendChild(this.animationItem.container);\n      this.canvasContext = this.animationItem.container.getContext('2d');\n\n      if (this.renderConfig.className) {\n        this.animationItem.container.setAttribute('class', this.renderConfig.className);\n      }\n    } else {\n      this.canvasContext = this.renderConfig.context;\n    }\n\n    this.data = animData;\n    this.layers = animData.layers;\n    this.transformCanvas = {\n      w: animData.w,\n      h: animData.h,\n      sx: 0,\n      sy: 0,\n      tx: 0,\n      ty: 0\n    };\n    this.setupGlobalData(animData, document.body);\n    this.globalData.canvasContext = this.canvasContext;\n    this.globalData.renderer = this;\n    this.globalData.isDashed = false;\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.globalData.transformCanvas = this.transformCanvas;\n    this.elements = createSizedArray(animData.layers.length);\n    this.updateContainerSize();\n  };\n\n  CanvasRenderer.prototype.updateContainerSize = function () {\n    this.reset();\n    var elementWidth, elementHeight;\n\n    if (this.animationItem.wrapper && this.animationItem.container) {\n      elementWidth = this.animationItem.wrapper.offsetWidth;\n      elementHeight = this.animationItem.wrapper.offsetHeight;\n      this.animationItem.container.setAttribute('width', elementWidth * this.renderConfig.dpr);\n      this.animationItem.container.setAttribute('height', elementHeight * this.renderConfig.dpr);\n    } else {\n      elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\n      elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\n    }\n\n    var elementRel, animationRel;\n\n    if (this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1) {\n      var par = this.renderConfig.preserveAspectRatio.split(' ');\n      var fillType = par[1] || 'meet';\n      var pos = par[0] || 'xMidYMid';\n      var xPos = pos.substr(0, 4);\n      var yPos = pos.substr(4);\n      elementRel = elementWidth / elementHeight;\n      animationRel = this.transformCanvas.w / this.transformCanvas.h;\n\n      if (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice') {\n        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      } else {\n        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      }\n\n      if (xPos === 'xMid' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2 * this.renderConfig.dpr;\n      } else if (xPos === 'xMax' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.tx = 0;\n      }\n\n      if (yPos === 'YMid' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2 * this.renderConfig.dpr;\n      } else if (yPos === 'YMax' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.ty = 0;\n      }\n    } else if (this.renderConfig.preserveAspectRatio == 'none') {\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    } else {\n      this.transformCanvas.sx = this.renderConfig.dpr;\n      this.transformCanvas.sy = this.renderConfig.dpr;\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    }\n\n    this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];\n    /*var i, len = this.elements.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n            this.elements[i].resize(this.globalData.transformCanvas);\r\n        }\r\n    }*/\n\n    this.ctxTransform(this.transformCanvas.props);\n    this.canvasContext.beginPath();\n    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n    this.canvasContext.closePath();\n    this.canvasContext.clip();\n    this.renderFrame(this.renderedFrame, true);\n  };\n\n  CanvasRenderer.prototype.destroy = function () {\n    if (this.renderConfig.clearCanvas) {\n      this.animationItem.wrapper.innerHTML = '';\n    }\n\n    var i,\n        len = this.layers ? this.layers.length : 0;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.globalData.canvasContext = null;\n    this.animationItem.container = null;\n    this.destroyed = true;\n  };\n\n  CanvasRenderer.prototype.renderFrame = function (num, forceRender) {\n    if (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender || this.destroyed || num === -1) {\n      return;\n    }\n\n    this.renderedFrame = num;\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\n    this.globalData.frameId += 1;\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\n    this.globalData.projectInterface.currentFrame = num; // console.log('--------');\n    // console.log('NEW: ',num);\n\n    var i,\n        len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = 0; i < len; i++) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    if (this.globalData._mdf) {\n      if (this.renderConfig.clearCanvas === true) {\n        this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n      } else {\n        this.save();\n      }\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n\n      if (this.renderConfig.clearCanvas !== true) {\n        this.restore();\n      }\n    }\n  };\n\n  CanvasRenderer.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty == 99) {\n      return;\n    }\n\n    var element = this.createItem(this.layers[pos], this, this.globalData);\n    elements[pos] = element;\n    element.initExpressions();\n    /*if(this.layers[pos].ty === 0){\r\n        element.resize(this.globalData.transformCanvas);\r\n    }*/\n  };\n\n  CanvasRenderer.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  CanvasRenderer.prototype.hide = function () {\n    this.animationItem.container.style.display = 'none';\n  };\n\n  CanvasRenderer.prototype.show = function () {\n    this.animationItem.container.style.display = 'block';\n  };\n\n  function HybridRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.renderConfig = {\n      className: config && config.className || '',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      hideOnTransparent: config && config.hideOnTransparent === false ? false : true\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      renderConfig: this.renderConfig\n    };\n    this.pendingElements = [];\n    this.elements = [];\n    this.threeDElements = [];\n    this.destroyed = false;\n    this.camera = null;\n    this.supports3d = true;\n    this.rendererType = 'html';\n  }\n\n  extendPrototype([BaseRenderer], HybridRenderer);\n  HybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\n\n  HybridRenderer.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  HybridRenderer.prototype.appendElementInPos = function (element, pos) {\n    var newDOMElement = element.getBaseElement();\n\n    if (!newDOMElement) {\n      return;\n    }\n\n    var layer = this.layers[pos];\n\n    if (!layer.ddd || !this.supports3d) {\n      if (this.threeDElements) {\n        this.addTo3dContainer(newDOMElement, pos);\n      } else {\n        var i = 0;\n        var nextDOMElement, nextLayer, tmpDOMElement;\n\n        while (i < pos) {\n          if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement) {\n            nextLayer = this.elements[i];\n            tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\n            nextDOMElement = tmpDOMElement || nextDOMElement;\n          }\n\n          i += 1;\n        }\n\n        if (nextDOMElement) {\n          if (!layer.ddd || !this.supports3d) {\n            this.layerElement.insertBefore(newDOMElement, nextDOMElement);\n          }\n        } else {\n          if (!layer.ddd || !this.supports3d) {\n            this.layerElement.appendChild(newDOMElement);\n          }\n        }\n      }\n    } else {\n      this.addTo3dContainer(newDOMElement, pos);\n    }\n  };\n\n  HybridRenderer.prototype.createShape = function (data) {\n    if (!this.supports3d) {\n      return new SVGShapeElement(data, this.globalData, this);\n    }\n\n    return new HShapeElement(data, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createText = function (data) {\n    if (!this.supports3d) {\n      return new SVGTextElement(data, this.globalData, this);\n    }\n\n    return new HTextElement(data, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createCamera = function (data) {\n    this.camera = new HCameraElement(data, this.globalData, this);\n    return this.camera;\n  };\n\n  HybridRenderer.prototype.createImage = function (data) {\n    if (!this.supports3d) {\n      return new IImageElement(data, this.globalData, this);\n    }\n\n    return new HImageElement(data, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createComp = function (data) {\n    if (!this.supports3d) {\n      return new SVGCompElement(data, this.globalData, this);\n    }\n\n    return new HCompElement(data, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createSolid = function (data) {\n    if (!this.supports3d) {\n      return new ISolidElement(data, this.globalData, this);\n    }\n\n    return new HSolidElement(data, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\n\n  HybridRenderer.prototype.getThreeDContainerByPos = function (pos) {\n    var i = 0,\n        len = this.threeDElements.length;\n\n    while (i < len) {\n      if (this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\n        return this.threeDElements[i].perspectiveElem;\n      }\n\n      i += 1;\n    }\n  };\n\n  HybridRenderer.prototype.createThreeDContainer = function (pos, type) {\n    var perspectiveElem = createTag('div');\n    styleDiv(perspectiveElem);\n    var container = createTag('div');\n    styleDiv(container);\n\n    if (type === '3d') {\n      perspectiveElem.style.width = this.globalData.compSize.w + 'px';\n      perspectiveElem.style.height = this.globalData.compSize.h + 'px';\n      perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\n      container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n    }\n\n    perspectiveElem.appendChild(container); //this.resizerElem.appendChild(perspectiveElem);\n\n    var threeDContainerData = {\n      container: container,\n      perspectiveElem: perspectiveElem,\n      startPos: pos,\n      endPos: pos,\n      type: type\n    };\n    this.threeDElements.push(threeDContainerData);\n    return threeDContainerData;\n  };\n\n  HybridRenderer.prototype.build3dContainers = function () {\n    var i,\n        len = this.layers.length;\n    var lastThreeDContainerData;\n    var currentContainer = '';\n\n    for (i = 0; i < len; i += 1) {\n      if (this.layers[i].ddd && this.layers[i].ty !== 3) {\n        if (currentContainer !== '3d') {\n          currentContainer = '3d';\n          lastThreeDContainerData = this.createThreeDContainer(i, '3d');\n        }\n\n        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\n      } else {\n        if (currentContainer !== '2d') {\n          currentContainer = '2d';\n          lastThreeDContainerData = this.createThreeDContainer(i, '2d');\n        }\n\n        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\n      }\n    }\n\n    len = this.threeDElements.length;\n\n    for (i = len - 1; i >= 0; i--) {\n      this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\n    }\n  };\n\n  HybridRenderer.prototype.addTo3dContainer = function (elem, pos) {\n    var i = 0,\n        len = this.threeDElements.length;\n\n    while (i < len) {\n      if (pos <= this.threeDElements[i].endPos) {\n        var j = this.threeDElements[i].startPos;\n        var nextElement;\n\n        while (j < pos) {\n          if (this.elements[j] && this.elements[j].getBaseElement) {\n            nextElement = this.elements[j].getBaseElement();\n          }\n\n          j += 1;\n        }\n\n        if (nextElement) {\n          this.threeDElements[i].container.insertBefore(elem, nextElement);\n        } else {\n          this.threeDElements[i].container.appendChild(elem);\n        }\n\n        break;\n      }\n\n      i += 1;\n    }\n  };\n\n  HybridRenderer.prototype.configAnimation = function (animData) {\n    var resizerElem = createTag('div');\n    var wrapper = this.animationItem.wrapper;\n    resizerElem.style.width = animData.w + 'px';\n    resizerElem.style.height = animData.h + 'px';\n    this.resizerElem = resizerElem;\n    styleDiv(resizerElem);\n    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\n\n    if (this.renderConfig.className) {\n      resizerElem.setAttribute('class', this.renderConfig.className);\n    }\n\n    wrapper.appendChild(resizerElem);\n    resizerElem.style.overflow = 'hidden';\n    var svg = createNS('svg');\n    svg.setAttribute('width', '1');\n    svg.setAttribute('height', '1');\n    styleDiv(svg);\n    this.resizerElem.appendChild(svg);\n    var defs = createNS('defs');\n    svg.appendChild(defs);\n    this.data = animData; //Mask animation\n\n    this.setupGlobalData(animData, svg);\n    this.globalData.defs = defs;\n    this.layers = animData.layers;\n    this.layerElement = this.resizerElem;\n    this.build3dContainers();\n    this.updateContainerSize();\n  };\n\n  HybridRenderer.prototype.destroy = function () {\n    this.animationItem.wrapper.innerHTML = '';\n    this.animationItem.container = null;\n    this.globalData.defs = null;\n    var i,\n        len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i++) {\n      this.elements[i].destroy();\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  HybridRenderer.prototype.updateContainerSize = function () {\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\n    var elementRel = elementWidth / elementHeight;\n    var animationRel = this.globalData.compSize.w / this.globalData.compSize.h;\n    var sx, sy, tx, ty;\n\n    if (animationRel > elementRel) {\n      sx = elementWidth / this.globalData.compSize.w;\n      sy = elementWidth / this.globalData.compSize.w;\n      tx = 0;\n      ty = (elementHeight - this.globalData.compSize.h * (elementWidth / this.globalData.compSize.w)) / 2;\n    } else {\n      sx = elementHeight / this.globalData.compSize.h;\n      sy = elementHeight / this.globalData.compSize.h;\n      tx = (elementWidth - this.globalData.compSize.w * (elementHeight / this.globalData.compSize.h)) / 2;\n      ty = 0;\n    }\n\n    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,' + sy + ',0,0,0,0,1,0,' + tx + ',' + ty + ',0,1)';\n  };\n\n  HybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\n\n  HybridRenderer.prototype.hide = function () {\n    this.resizerElem.style.display = 'none';\n  };\n\n  HybridRenderer.prototype.show = function () {\n    this.resizerElem.style.display = 'block';\n  };\n\n  HybridRenderer.prototype.initItems = function () {\n    this.buildAllItems();\n\n    if (this.camera) {\n      this.camera.setup();\n    } else {\n      var cWidth = this.globalData.compSize.w;\n      var cHeight = this.globalData.compSize.h;\n      var i,\n          len = this.threeDElements.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth, 2) + Math.pow(cHeight, 2)) + 'px';\n      }\n    }\n  };\n\n  HybridRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i,\n        len = assets.length;\n    var floatingContainer = createTag('div');\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i], floatingContainer, this.globalData.comp, null);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  function MaskElement(data, element, globalData) {\n    this.data = data;\n    this.element = element;\n    this.globalData = globalData;\n    this.storedData = [];\n    this.masksProperties = this.data.masksProperties || [];\n    this.maskElement = null;\n    var defs = this.globalData.defs;\n    var i,\n        len = this.masksProperties ? this.masksProperties.length : 0;\n    this.viewData = createSizedArray(len);\n    this.solidPath = '';\n    var path,\n        properties = this.masksProperties;\n    var count = 0;\n    var currentMasks = [];\n    var j, jLen;\n    var layerId = createElementID();\n    var rect, expansor, feMorph, x;\n    var maskType = 'clipPath',\n        maskRef = 'clip-path';\n\n    for (i = 0; i < len; i++) {\n      if (properties[i].mode !== 'a' && properties[i].mode !== 'n' || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {\n        maskType = 'mask';\n        maskRef = 'mask';\n      }\n\n      if ((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0) {\n        rect = createNS('rect');\n        rect.setAttribute('fill', '#ffffff');\n        rect.setAttribute('width', this.element.comp.data.w || 0);\n        rect.setAttribute('height', this.element.comp.data.h || 0);\n        currentMasks.push(rect);\n      } else {\n        rect = null;\n      }\n\n      path = createNS('path');\n\n      if (properties[i].mode == 'n') {\n        // TODO move this to a factory or to a constructor\n        this.viewData[i] = {\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          elem: path,\n          lastPath: ''\n        };\n        defs.appendChild(path);\n        continue;\n      }\n\n      count += 1;\n      path.setAttribute('fill', properties[i].mode === 's' ? '#000000' : '#ffffff');\n      path.setAttribute('clip-rule', 'nonzero');\n      var filterID;\n\n      if (properties[i].x.k !== 0) {\n        maskType = 'mask';\n        maskRef = 'mask';\n        x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);\n        filterID = createElementID();\n        expansor = createNS('filter');\n        expansor.setAttribute('id', filterID);\n        feMorph = createNS('feMorphology');\n        feMorph.setAttribute('operator', 'erode');\n        feMorph.setAttribute('in', 'SourceGraphic');\n        feMorph.setAttribute('radius', '0');\n        expansor.appendChild(feMorph);\n        defs.appendChild(expansor);\n        path.setAttribute('stroke', properties[i].mode === 's' ? '#000000' : '#ffffff');\n      } else {\n        feMorph = null;\n        x = null;\n      } // TODO move this to a factory or to a constructor\n\n\n      this.storedData[i] = {\n        elem: path,\n        x: x,\n        expan: feMorph,\n        lastPath: '',\n        lastOperator: '',\n        filterId: filterID,\n        lastRadius: 0\n      };\n\n      if (properties[i].mode == 'i') {\n        jLen = currentMasks.length;\n        var g = createNS('g');\n\n        for (j = 0; j < jLen; j += 1) {\n          g.appendChild(currentMasks[j]);\n        }\n\n        var mask = createNS('mask');\n        mask.setAttribute('mask-type', 'alpha');\n        mask.setAttribute('id', layerId + '_' + count);\n        mask.appendChild(path);\n        defs.appendChild(mask);\n        g.setAttribute('mask', 'url(' + locationHref + '#' + layerId + '_' + count + ')');\n        currentMasks.length = 0;\n        currentMasks.push(g);\n      } else {\n        currentMasks.push(path);\n      }\n\n      if (properties[i].inv && !this.solidPath) {\n        this.solidPath = this.createLayerSolidPath();\n      } // TODO move this to a factory or to a constructor\n\n\n      this.viewData[i] = {\n        elem: path,\n        lastPath: '',\n        op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n        prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n        invRect: rect\n      };\n\n      if (!this.viewData[i].prop.k) {\n        this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);\n      }\n    }\n\n    this.maskElement = createNS(maskType);\n    len = currentMasks.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.maskElement.appendChild(currentMasks[i]);\n    }\n\n    if (count > 0) {\n      this.maskElement.setAttribute('id', layerId);\n      this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\n      defs.appendChild(this.maskElement);\n    }\n\n    if (this.viewData.length) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n\n  MaskElement.prototype.getMaskProperty = function (pos) {\n    return this.viewData[pos].prop;\n  };\n\n  MaskElement.prototype.renderFrame = function (isFirstFrame) {\n    var finalMat = this.element.finalTransform.mat;\n    var i,\n        len = this.masksProperties.length;\n\n    for (i = 0; i < len; i++) {\n      if (this.viewData[i].prop._mdf || isFirstFrame) {\n        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);\n      }\n\n      if (this.viewData[i].op._mdf || isFirstFrame) {\n        this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v);\n      }\n\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\n          this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\n          this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\n        }\n\n        if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\n          var feMorph = this.storedData[i].expan;\n\n          if (this.storedData[i].x.v < 0) {\n            if (this.storedData[i].lastOperator !== 'erode') {\n              this.storedData[i].lastOperator = 'erode';\n              this.storedData[i].elem.setAttribute('filter', 'url(' + locationHref + '#' + this.storedData[i].filterId + ')');\n            }\n\n            feMorph.setAttribute('radius', -this.storedData[i].x.v);\n          } else {\n            if (this.storedData[i].lastOperator !== 'dilate') {\n              this.storedData[i].lastOperator = 'dilate';\n              this.storedData[i].elem.setAttribute('filter', null);\n            }\n\n            this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2);\n          }\n        }\n      }\n    }\n  };\n\n  MaskElement.prototype.getMaskelement = function () {\n    return this.maskElement;\n  };\n\n  MaskElement.prototype.createLayerSolidPath = function () {\n    var path = 'M0,0 ';\n    path += ' h' + this.globalData.compSize.w;\n    path += ' v' + this.globalData.compSize.h;\n    path += ' h-' + this.globalData.compSize.w;\n    path += ' v-' + this.globalData.compSize.h + ' ';\n    return path;\n  };\n\n  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\n    var pathString = \" M\" + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\n    var i, len;\n    len = pathNodes._length;\n\n    for (i = 1; i < len; i += 1) {\n      //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\n      pathString += \" C\" + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + \" \" + pathNodes.i[i][0] + ',' + pathNodes.i[i][1] + \" \" + pathNodes.v[i][0] + ',' + pathNodes.v[i][1];\n    } //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\n\n\n    if (pathNodes.c && len > 1) {\n      pathString += \" C\" + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + \" \" + pathNodes.i[0][0] + ',' + pathNodes.i[0][1] + \" \" + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\n    } //pathNodes.__renderedString = pathString;\n\n\n    if (viewData.lastPath !== pathString) {\n      var pathShapeValue = '';\n\n      if (viewData.elem) {\n        if (pathNodes.c) {\n          pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\n        }\n\n        viewData.elem.setAttribute('d', pathShapeValue);\n      }\n\n      viewData.lastPath = pathString;\n    }\n  };\n\n  MaskElement.prototype.destroy = function () {\n    this.element = null;\n    this.globalData = null;\n    this.maskElement = null;\n    this.data = null;\n    this.masksProperties = null;\n  };\n  /**\r\n   * @file \r\n   * Handles AE's layer parenting property.\r\n   *\r\n   */\n\n\n  function HierarchyElement() {}\n\n  HierarchyElement.prototype = {\n    /**\r\n        * @function \r\n        * Initializes hierarchy properties\r\n        *\r\n        */\n    initHierarchy: function initHierarchy() {\n      //element's parent list\n      this.hierarchy = []; //if element is parent of another layer _isParent will be true\n\n      this._isParent = false;\n      this.checkParenting();\n    },\n\n    /**\r\n        * @function \r\n        * Sets layer's hierarchy.\r\n        * @param {array} hierarch\r\n        * layer's parent list\r\n        *\r\n        */\n    setHierarchy: function setHierarchy(hierarchy) {\n      this.hierarchy = hierarchy;\n    },\n\n    /**\r\n        * @function \r\n        * Sets layer as parent.\r\n        *\r\n        */\n    setAsParent: function setAsParent() {\n      this._isParent = true;\n    },\n\n    /**\r\n        * @function \r\n        * Searches layer's parenting chain\r\n        *\r\n        */\n    checkParenting: function checkParenting() {\n      if (this.data.parent !== undefined) {\n        this.comp.buildElementParenting(this, this.data.parent, []);\n      }\n    }\n  };\n  /**\r\n   * @file \r\n   * Handles element's layer frame update.\r\n   * Checks layer in point and out point\r\n   *\r\n   */\n\n  function FrameElement() {}\n\n  FrameElement.prototype = {\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\n    initFrame: function initFrame() {\n      //set to true when inpoint is rendered\n      this._isFirstFrame = false; //list of animated properties\n\n      this.dynamicProperties = []; // If layer has been modified in current tick this will be true\n\n      this._mdf = false;\n    },\n\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\n    prepareProperties: function prepareProperties(num, isVisible) {\n      var i,\n          len = this.dynamicProperties.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (isVisible || this._isParent && this.dynamicProperties[i].propType === 'transform') {\n          this.dynamicProperties[i].getValue();\n\n          if (this.dynamicProperties[i]._mdf) {\n            this.globalData._mdf = true;\n            this._mdf = true;\n          }\n        }\n      }\n    },\n    addDynamicProperty: function addDynamicProperty(prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n      }\n    }\n  };\n\n  function TransformElement() {}\n\n  TransformElement.prototype = {\n    initTransform: function initTransform() {\n      this.finalTransform = {\n        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {\n          o: 0\n        },\n        _matMdf: false,\n        _opMdf: false,\n        mat: new Matrix()\n      };\n\n      if (this.data.ao) {\n        this.finalTransform.mProp.autoOriented = true;\n      } //TODO: check TYPE 11: Guided elements\n\n\n      if (this.data.ty !== 11) {//this.createElements();\n      }\n    },\n    renderTransform: function renderTransform() {\n      this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\n      this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\n\n      if (this.hierarchy) {\n        var mat;\n        var finalMat = this.finalTransform.mat;\n        var i = 0,\n            len = this.hierarchy.length; //Checking if any of the transformation matrices in the hierarchy chain has changed.\n\n        if (!this.finalTransform._matMdf) {\n          while (i < len) {\n            if (this.hierarchy[i].finalTransform.mProp._mdf) {\n              this.finalTransform._matMdf = true;\n              break;\n            }\n\n            i += 1;\n          }\n        }\n\n        if (this.finalTransform._matMdf) {\n          mat = this.finalTransform.mProp.v.props;\n          finalMat.cloneFromProps(mat);\n\n          for (i = 0; i < len; i += 1) {\n            mat = this.hierarchy[i].finalTransform.mProp.v.props;\n            finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\n          }\n        }\n      }\n    },\n    globalToLocal: function globalToLocal(pt) {\n      var transforms = [];\n      transforms.push(this.finalTransform);\n      var flag = true;\n      var comp = this.comp;\n\n      while (flag) {\n        if (comp.finalTransform) {\n          if (comp.data.hasMask) {\n            transforms.splice(0, 0, comp.finalTransform);\n          }\n\n          comp = comp.comp;\n        } else {\n          flag = false;\n        }\n      }\n\n      var i,\n          len = transforms.length,\n          ptNew;\n\n      for (i = 0; i < len; i += 1) {\n        ptNew = transforms[i].mat.applyToPointArray(0, 0, 0); //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\n\n        pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\n      }\n\n      return pt;\n    },\n    mHelper: new Matrix()\n  };\n\n  function RenderableElement() {}\n\n  RenderableElement.prototype = {\n    initRenderable: function initRenderable() {\n      //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\n      this.isInRange = false; //layer's display state\n\n      this.hidden = false; // If layer's transparency equals 0, it can be hidden\n\n      this.isTransparent = false; //list of animated components\n\n      this.renderableComponents = [];\n    },\n    addRenderableComponent: function addRenderableComponent(component) {\n      if (this.renderableComponents.indexOf(component) === -1) {\n        this.renderableComponents.push(component);\n      }\n    },\n    removeRenderableComponent: function removeRenderableComponent(component) {\n      if (this.renderableComponents.indexOf(component) !== -1) {\n        this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\n      }\n    },\n    prepareRenderableFrame: function prepareRenderableFrame(num) {\n      this.checkLayerLimits(num);\n    },\n    checkTransparency: function checkTransparency() {\n      if (this.finalTransform.mProp.o.v <= 0) {\n        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\n          this.isTransparent = true;\n          this.hide();\n        }\n      } else if (this.isTransparent) {\n        this.isTransparent = false;\n        this.show();\n      }\n    },\n\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\n    checkLayerLimits: function checkLayerLimits(num) {\n      if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\n        if (this.isInRange !== true) {\n          this.globalData._mdf = true;\n          this._mdf = true;\n          this.isInRange = true;\n          this.show();\n        }\n      } else {\n        if (this.isInRange !== false) {\n          this.globalData._mdf = true;\n          this.isInRange = false;\n          this.hide();\n        }\n      }\n    },\n    renderRenderable: function renderRenderable() {\n      var i,\n          len = this.renderableComponents.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.renderableComponents[i].renderFrame(this._isFirstFrame);\n      }\n      /*this.maskManager.renderFrame(this.finalTransform.mat);\r\n      this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/\n\n    },\n    sourceRectAtTime: function sourceRectAtTime() {\n      return {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100\n      };\n    },\n    getLayerSize: function getLayerSize() {\n      if (this.data.ty === 5) {\n        return {\n          w: this.data.textData.width,\n          h: this.data.textData.height\n        };\n      } else {\n        return {\n          w: this.data.width,\n          h: this.data.height\n        };\n      }\n    }\n  };\n\n  function RenderableDOMElement() {}\n\n  (function () {\n    var _prototype = {\n      initElement: function initElement(data, globalData, comp) {\n        this.initFrame();\n        this.initBaseData(data, globalData, comp);\n        this.initTransform(data, globalData, comp);\n        this.initHierarchy();\n        this.initRenderable();\n        this.initRendererElement();\n        this.createContainerElements();\n        this.createRenderableComponents();\n        this.createContent();\n        this.hide();\n      },\n      hide: function hide() {\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n          var elem = this.baseElement || this.layerElement;\n          elem.style.display = 'none';\n          this.hidden = true;\n        }\n      },\n      show: function show() {\n        if (this.isInRange && !this.isTransparent) {\n          if (!this.data.hd) {\n            var elem = this.baseElement || this.layerElement;\n            elem.style.display = 'block';\n          }\n\n          this.hidden = false;\n          this._isFirstFrame = true;\n        }\n      },\n      renderFrame: function renderFrame() {\n        //If it is exported as hidden (data.hd === true) no need to render\n        //If it is not visible no need to render\n        if (this.data.hd || this.hidden) {\n          return;\n        }\n\n        this.renderTransform();\n        this.renderRenderable();\n        this.renderElement();\n        this.renderInnerContent();\n\n        if (this._isFirstFrame) {\n          this._isFirstFrame = false;\n        }\n      },\n      renderInnerContent: function renderInnerContent() {},\n      prepareFrame: function prepareFrame(num) {\n        this._mdf = false;\n        this.prepareRenderableFrame(num);\n        this.prepareProperties(num, this.isInRange);\n        this.checkTransparency();\n      },\n      destroy: function destroy() {\n        this.innerElem = null;\n        this.destroyBaseElement();\n      }\n    };\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\n  })();\n\n  function ProcessedElement(element, position) {\n    this.elem = element;\n    this.pos = position;\n  }\n\n  function SVGStyleData(data, level) {\n    this.data = data;\n    this.type = data.ty;\n    this.d = '';\n    this.lvl = level;\n    this._mdf = false;\n    this.closed = data.hd === true;\n    this.pElem = createNS('path');\n    this.msElem = null;\n  }\n\n  SVGStyleData.prototype.reset = function () {\n    this.d = '';\n    this._mdf = false;\n  };\n\n  function SVGShapeData(transformers, level, shape) {\n    this.caches = [];\n    this.styles = [];\n    this.transformers = transformers;\n    this.lStr = '';\n    this.sh = shape;\n    this.lvl = level; //TODO find if there are some cases where _isAnimated can be false. \n    // For now, since shapes add up with other shapes. They have to be calculated every time.\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\n\n    this._isAnimated = !!shape.k; // TODO: commenting this for now since all shapes are animated\n\n    var i = 0,\n        len = transformers.length;\n\n    while (i < len) {\n      if (transformers[i].mProps.dynamicProperties.length) {\n        this._isAnimated = true;\n        break;\n      }\n\n      i += 1;\n    }\n  }\n\n  SVGShapeData.prototype.setAsAnimated = function () {\n    this._isAnimated = true;\n  };\n\n  function SVGTransformData(mProps, op, container) {\n    this.transform = {\n      mProps: mProps,\n      op: op,\n      container: container\n    };\n    this.elements = [];\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\n  }\n\n  function SVGStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n    this._isAnimated = !!this._isAnimated;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\n\n  function SVGFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGFillStyleData);\n\n  function SVGGradientFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.initGradientData(elem, data, styleOb);\n  }\n\n  SVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.s = PropertyFactory.getProp(elem, data.s, 1, null, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 1, null, this);\n    this.h = PropertyFactory.getProp(elem, data.h || {\n      k: 0\n    }, 0, 0.01, this);\n    this.a = PropertyFactory.getProp(elem, data.a || {\n      k: 0\n    }, 0, degToRads, this);\n    this.g = new GradientProperty(elem, data.g, this);\n    this.style = styleOb;\n    this.stops = [];\n    this.setGradientData(styleOb.pElem, data);\n    this.setGradientOpacity(data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  };\n\n  SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {\n    var gradientId = createElementID();\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\n    gfill.setAttribute('id', gradientId);\n    gfill.setAttribute('spreadMethod', 'pad');\n    gfill.setAttribute('gradientUnits', 'userSpaceOnUse');\n    var stops = [];\n    var stop, j, jLen;\n    jLen = data.g.p * 4;\n\n    for (j = 0; j < jLen; j += 4) {\n      stop = createNS('stop');\n      gfill.appendChild(stop);\n      stops.push(stop);\n    }\n\n    pathElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + locationHref + '#' + gradientId + ')');\n    this.gf = gfill;\n    this.cst = stops;\n  };\n\n  SVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {\n    if (this.g._hasOpacity && !this.g._collapsable) {\n      var stop, j, jLen;\n      var mask = createNS(\"mask\");\n      var maskElement = createNS('path');\n      mask.appendChild(maskElement);\n      var opacityId = createElementID();\n      var maskId = createElementID();\n      mask.setAttribute('id', maskId);\n      var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\n      opFill.setAttribute('id', opacityId);\n      opFill.setAttribute('spreadMethod', 'pad');\n      opFill.setAttribute('gradientUnits', 'userSpaceOnUse');\n      jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\n      var stops = this.stops;\n\n      for (j = data.g.p * 4; j < jLen; j += 2) {\n        stop = createNS('stop');\n        stop.setAttribute('stop-color', 'rgb(255,255,255)');\n        opFill.appendChild(stop);\n        stops.push(stop);\n      }\n\n      maskElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + locationHref + '#' + opacityId + ')');\n      this.of = opFill;\n      this.ms = mask;\n      this.ost = stops;\n      this.maskId = maskId;\n      styleOb.msElem = maskElement;\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\n\n  function SVGGradientStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this);\n    this.initGradientData(elem, data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  }\n\n  extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\n\n  function ShapeGroupData() {\n    this.it = [];\n    this.prevViewData = [];\n    this.gr = createNS('g');\n  }\n\n  var SVGElementsRenderer = function () {\n    var _identityMatrix = new Matrix();\n\n    var _matrixHelper = new Matrix();\n\n    var ob = {\n      createRenderFunction: createRenderFunction\n    };\n\n    function createRenderFunction(data) {\n      var ty = data.ty;\n\n      switch (data.ty) {\n        case 'fl':\n          return renderFill;\n\n        case 'gf':\n          return renderGradient;\n\n        case 'gs':\n          return renderGradientStroke;\n\n        case 'st':\n          return renderStroke;\n\n        case 'sh':\n        case 'el':\n        case 'rc':\n        case 'sr':\n          return renderPath;\n\n        case 'tr':\n          return renderContentTransform;\n      }\n    }\n\n    function renderContentTransform(styleData, itemData, isFirstFrame) {\n      if (isFirstFrame || itemData.transform.op._mdf) {\n        itemData.transform.container.setAttribute('opacity', itemData.transform.op.v);\n      }\n\n      if (isFirstFrame || itemData.transform.mProps._mdf) {\n        itemData.transform.container.setAttribute('transform', itemData.transform.mProps.v.to2dCSS());\n      }\n    }\n\n    function renderPath(styleData, itemData, isFirstFrame) {\n      var j,\n          jLen,\n          pathStringTransformed,\n          redraw,\n          pathNodes,\n          l,\n          lLen = itemData.styles.length;\n      var lvl = itemData.lvl;\n      var paths, mat, props, iterations, k;\n\n      for (l = 0; l < lLen; l += 1) {\n        redraw = itemData.sh._mdf || isFirstFrame;\n\n        if (itemData.styles[l].lvl < lvl) {\n          mat = _matrixHelper.reset();\n          iterations = lvl - itemData.styles[l].lvl;\n          k = itemData.transformers.length - 1;\n\n          while (!redraw && iterations > 0) {\n            redraw = itemData.transformers[k].mProps._mdf || redraw;\n            iterations--;\n            k--;\n          }\n\n          if (redraw) {\n            iterations = lvl - itemData.styles[l].lvl;\n            k = itemData.transformers.length - 1;\n\n            while (iterations > 0) {\n              props = itemData.transformers[k].mProps.v.props;\n              mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n              iterations--;\n              k--;\n            }\n          }\n        } else {\n          mat = _identityMatrix;\n        }\n\n        paths = itemData.sh.paths;\n        jLen = paths._length;\n\n        if (redraw) {\n          pathStringTransformed = '';\n\n          for (j = 0; j < jLen; j += 1) {\n            pathNodes = paths.shapes[j];\n\n            if (pathNodes && pathNodes._length) {\n              pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\n            }\n          }\n\n          itemData.caches[l] = pathStringTransformed;\n        } else {\n          pathStringTransformed = itemData.caches[l];\n        }\n\n        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\n      }\n    }\n\n    function renderFill(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n\n      if (itemData.c._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill', 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\n      }\n\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill-opacity', itemData.o.v);\n      }\n    }\n\n    ;\n\n    function renderGradientStroke(styleData, itemData, isFirstFrame) {\n      renderGradient(styleData, itemData, isFirstFrame);\n      renderStroke(styleData, itemData, isFirstFrame);\n    }\n\n    function renderGradient(styleData, itemData, isFirstFrame) {\n      var gfill = itemData.gf;\n      var hasOpacity = itemData.g._hasOpacity;\n      var pt1 = itemData.s.v,\n          pt2 = itemData.e.v;\n\n      if (itemData.o._mdf || isFirstFrame) {\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\n      }\n\n      if (itemData.s._mdf || isFirstFrame) {\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\n        gfill.setAttribute(attr1, pt1[0]);\n        gfill.setAttribute(attr2, pt1[1]);\n\n        if (hasOpacity && !itemData.g._collapsable) {\n          itemData.of.setAttribute(attr1, pt1[0]);\n          itemData.of.setAttribute(attr2, pt1[1]);\n        }\n      }\n\n      var stops, i, len, stop;\n\n      if (itemData.g._cmdf || isFirstFrame) {\n        stops = itemData.cst;\n        var cValues = itemData.g.c;\n        len = stops.length;\n\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n          stop.setAttribute('offset', cValues[i * 4] + '%');\n          stop.setAttribute('stop-color', 'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')');\n        }\n      }\n\n      if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\n        var oValues = itemData.g.o;\n\n        if (itemData.g._collapsable) {\n          stops = itemData.cst;\n        } else {\n          stops = itemData.ost;\n        }\n\n        len = stops.length;\n\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n\n          if (!itemData.g._collapsable) {\n            stop.setAttribute('offset', oValues[i * 2] + '%');\n          }\n\n          stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\n        }\n      }\n\n      if (styleData.t === 1) {\n        if (itemData.e._mdf || isFirstFrame) {\n          gfill.setAttribute('x2', pt2[0]);\n          gfill.setAttribute('y2', pt2[1]);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('x2', pt2[0]);\n            itemData.of.setAttribute('y2', pt2[1]);\n          }\n        }\n      } else {\n        var rad;\n\n        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          gfill.setAttribute('r', rad);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('r', rad);\n          }\n        }\n\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\n          if (!rad) {\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          }\n\n          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n          var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99 : itemData.h.v;\n          var dist = rad * percent;\n          var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n          var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n          gfill.setAttribute('fx', x);\n          gfill.setAttribute('fy', y);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('fx', x);\n            itemData.of.setAttribute('fy', y);\n          }\n        } //gfill.setAttribute('fy','200');\n\n      }\n    }\n\n    ;\n\n    function renderStroke(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n      var d = itemData.d;\n\n      if (d && (d._mdf || isFirstFrame) && d.dashStr) {\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\n      }\n\n      if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\n        styleElem.pElem.setAttribute('stroke', 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\n      }\n\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\n      }\n\n      if (itemData.w._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\n\n        if (styleElem.msElem) {\n          styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\n        }\n      }\n    }\n\n    ;\n    return ob;\n  }();\n\n  function ShapeTransformManager() {\n    this.sequences = {};\n    this.sequenceList = [];\n    this.transform_key_count = 0;\n  }\n\n  ShapeTransformManager.prototype = {\n    addTransformSequence: function addTransformSequence(transforms) {\n      var i,\n          len = transforms.length;\n      var key = '_';\n\n      for (i = 0; i < len; i += 1) {\n        key += transforms[i].transform.key + '_';\n      }\n\n      var sequence = this.sequences[key];\n\n      if (!sequence) {\n        sequence = {\n          transforms: [].concat(transforms),\n          finalTransform: new Matrix(),\n          _mdf: false\n        };\n        this.sequences[key] = sequence;\n        this.sequenceList.push(sequence);\n      }\n\n      return sequence;\n    },\n    processSequence: function processSequence(sequence, isFirstFrame) {\n      var i = 0,\n          len = sequence.transforms.length,\n          _mdf = isFirstFrame;\n\n      while (i < len && !isFirstFrame) {\n        if (sequence.transforms[i].transform.mProps._mdf) {\n          _mdf = true;\n          break;\n        }\n\n        i += 1;\n      }\n\n      if (_mdf) {\n        var props;\n        sequence.finalTransform.reset();\n\n        for (i = len - 1; i >= 0; i -= 1) {\n          props = sequence.transforms[i].transform.mProps.v.props;\n          sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n        }\n      }\n\n      sequence._mdf = _mdf;\n    },\n    processSequences: function processSequences(isFirstFrame) {\n      var i,\n          len = this.sequenceList.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.processSequence(this.sequenceList[i], isFirstFrame);\n      }\n    },\n    getNewKey: function getNewKey() {\n      return '_' + this.transform_key_count++;\n    }\n  };\n\n  function CVShapeData(element, data, styles, transformsManager) {\n    this.styledShapes = [];\n    this.tr = [0, 0, 0, 0, 0, 0];\n    var ty = 4;\n\n    if (data.ty == 'rc') {\n      ty = 5;\n    } else if (data.ty == 'el') {\n      ty = 6;\n    } else if (data.ty == 'sr') {\n      ty = 7;\n    }\n\n    this.sh = ShapePropertyFactory.getShapeProp(element, data, ty, element);\n    var i,\n        len = styles.length,\n        styledShape;\n\n    for (i = 0; i < len; i += 1) {\n      if (!styles[i].closed) {\n        styledShape = {\n          transforms: transformsManager.addTransformSequence(styles[i].transforms),\n          trNodes: []\n        };\n        this.styledShapes.push(styledShape);\n        styles[i].elements.push(styledShape);\n      }\n    }\n  }\n\n  CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\n\n  function BaseElement() {}\n\n  BaseElement.prototype = {\n    checkMasks: function checkMasks() {\n      if (!this.data.hasMask) {\n        return false;\n      }\n\n      var i = 0,\n          len = this.data.masksProperties.length;\n\n      while (i < len) {\n        if (this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false) {\n          return true;\n        }\n\n        i += 1;\n      }\n\n      return false;\n    },\n    initExpressions: function initExpressions() {\n      this.layerInterface = LayerExpressionInterface(this);\n\n      if (this.data.hasMask && this.maskManager) {\n        this.layerInterface.registerMaskInterface(this.maskManager);\n      }\n\n      var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);\n      this.layerInterface.registerEffectsInterface(effectsInterface);\n\n      if (this.data.ty === 0 || this.data.xt) {\n        this.compInterface = CompExpressionInterface(this);\n      } else if (this.data.ty === 4) {\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);\n        this.layerInterface.content = this.layerInterface.shapeInterface;\n      } else if (this.data.ty === 5) {\n        this.layerInterface.textInterface = TextExpressionInterface(this);\n        this.layerInterface.text = this.layerInterface.textInterface;\n      }\n    },\n    setBlendMode: function setBlendMode() {\n      var blendModeValue = getBlendMode(this.data.bm);\n      var elem = this.baseElement || this.layerElement;\n      elem.style['mix-blend-mode'] = blendModeValue;\n    },\n    initBaseData: function initBaseData(data, globalData, comp) {\n      this.globalData = globalData;\n      this.comp = comp;\n      this.data = data;\n      this.layerId = createElementID(); //Stretch factor for old animations missing this property.\n\n      if (!this.data.sr) {\n        this.data.sr = 1;\n      } // effects manager\n\n\n      this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);\n    },\n    getType: function getType() {\n      return this.type;\n    },\n    sourceRectAtTime: function sourceRectAtTime() {}\n  };\n\n  function NullElement(data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initFrame();\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n  }\n\n  NullElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n\n  NullElement.prototype.renderFrame = function () {};\n\n  NullElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  NullElement.prototype.destroy = function () {};\n\n  NullElement.prototype.sourceRectAtTime = function () {};\n\n  NullElement.prototype.hide = function () {};\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);\n\n  function SVGBaseElement() {}\n\n  SVGBaseElement.prototype = {\n    initRendererElement: function initRendererElement() {\n      this.layerElement = createNS('g');\n    },\n    createContainerElements: function createContainerElements() {\n      this.matteElement = createNS('g');\n      this.transformedElement = this.layerElement;\n      this.maskedElement = this.layerElement;\n      this._sizeChanged = false;\n      var layerElementParent = null; //If this layer acts as a mask for the following layer\n\n      var filId, fil, gg;\n\n      if (this.data.td) {\n        if (this.data.td == 3 || this.data.td == 1) {\n          var masker = createNS('mask');\n          masker.setAttribute('id', this.layerId);\n          masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\n          masker.appendChild(this.layerElement);\n          layerElementParent = masker;\n          this.globalData.defs.appendChild(masker); // This is only for IE and Edge when mask if of type alpha\n\n          if (!featureSupport.maskType && this.data.td == 1) {\n            masker.setAttribute('mask-type', 'luminance');\n            filId = createElementID();\n            fil = filtersFactory.createFilter(filId);\n            this.globalData.defs.appendChild(fil);\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS('g');\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            masker.appendChild(gg);\n            gg.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\n          }\n        } else if (this.data.td == 2) {\n          var maskGroup = createNS('mask');\n          maskGroup.setAttribute('id', this.layerId);\n          maskGroup.setAttribute('mask-type', 'alpha');\n          var maskGrouper = createNS('g');\n          maskGroup.appendChild(maskGrouper);\n          filId = createElementID();\n          fil = filtersFactory.createFilter(filId); ////\n          // This solution doesn't work on Android when meta tag with viewport attribute is set\n\n          /*var feColorMatrix = createNS('feColorMatrix');\r\n          feColorMatrix.setAttribute('type', 'matrix');\r\n          feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n          feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n          fil.appendChild(feColorMatrix);*/\n          ////\n\n          var feCTr = createNS('feComponentTransfer');\n          feCTr.setAttribute('in', 'SourceGraphic');\n          fil.appendChild(feCTr);\n          var feFunc = createNS('feFuncA');\n          feFunc.setAttribute('type', 'table');\n          feFunc.setAttribute('tableValues', '1.0 0.0');\n          feCTr.appendChild(feFunc); ////\n\n          this.globalData.defs.appendChild(fil);\n          var alphaRect = createNS('rect');\n          alphaRect.setAttribute('width', this.comp.data.w);\n          alphaRect.setAttribute('height', this.comp.data.h);\n          alphaRect.setAttribute('x', '0');\n          alphaRect.setAttribute('y', '0');\n          alphaRect.setAttribute('fill', '#ffffff');\n          alphaRect.setAttribute('opacity', '0');\n          maskGrouper.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\n          maskGrouper.appendChild(alphaRect);\n          maskGrouper.appendChild(this.layerElement);\n          layerElementParent = maskGrouper;\n\n          if (!featureSupport.maskType) {\n            maskGroup.setAttribute('mask-type', 'luminance');\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS('g');\n            maskGrouper.appendChild(alphaRect);\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            maskGrouper.appendChild(gg);\n          }\n\n          this.globalData.defs.appendChild(maskGroup);\n        }\n      } else if (this.data.tt) {\n        this.matteElement.appendChild(this.layerElement);\n        layerElementParent = this.matteElement;\n        this.baseElement = this.matteElement;\n      } else {\n        this.baseElement = this.layerElement;\n      }\n\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln);\n      }\n\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl);\n      } //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\n\n\n      if (this.data.ty === 0 && !this.data.hd) {\n        var cp = createNS('clipPath');\n        var pt = createNS('path');\n        pt.setAttribute('d', 'M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\n        var clipId = createElementID();\n        cp.setAttribute('id', clipId);\n        cp.appendChild(pt);\n        this.globalData.defs.appendChild(cp);\n\n        if (this.checkMasks()) {\n          var cpGroup = createNS('g');\n          cpGroup.setAttribute('clip-path', 'url(' + locationHref + '#' + clipId + ')');\n          cpGroup.appendChild(this.layerElement);\n          this.transformedElement = cpGroup;\n\n          if (layerElementParent) {\n            layerElementParent.appendChild(this.transformedElement);\n          } else {\n            this.baseElement = this.transformedElement;\n          }\n        } else {\n          this.layerElement.setAttribute('clip-path', 'url(' + locationHref + '#' + clipId + ')');\n        }\n      }\n\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function renderElement() {\n      if (this.finalTransform._matMdf) {\n        this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\n      }\n\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\n      }\n    },\n    destroyBaseElement: function destroyBaseElement() {\n      this.layerElement = null;\n      this.matteElement = null;\n      this.maskManager.destroy();\n    },\n    getBaseElement: function getBaseElement() {\n      if (this.data.hd) {\n        return null;\n      }\n\n      return this.baseElement;\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n      this.renderableEffectsManager = new SVGEffects(this);\n    },\n    setMatte: function setMatte(id) {\n      if (!this.matteElement) {\n        return;\n      }\n\n      this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\n    }\n  };\n\n  function IShapeElement() {}\n\n  IShapeElement.prototype = {\n    addShapeToModifiers: function addShapeToModifiers(data) {\n      var i,\n          len = this.shapeModifiers.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.shapeModifiers[i].addShape(data);\n      }\n    },\n    isShapeInAnimatedModifiers: function isShapeInAnimatedModifiers(data) {\n      var i = 0,\n          len = this.shapeModifiers.length;\n\n      while (i < len) {\n        if (this.shapeModifiers[i].isAnimatedWithShape(data)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    renderModifiers: function renderModifiers() {\n      if (!this.shapeModifiers.length) {\n        return;\n      }\n\n      var i,\n          len = this.shapes.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].sh.reset();\n      }\n\n      len = this.shapeModifiers.length;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        this.shapeModifiers[i].processShapes(this._isFirstFrame);\n      }\n    },\n    lcEnum: {\n      '1': 'butt',\n      '2': 'round',\n      '3': 'square'\n    },\n    ljEnum: {\n      '1': 'miter',\n      '2': 'round',\n      '3': 'bevel'\n    },\n    searchProcessedElement: function searchProcessedElement(elem) {\n      var elements = this.processedElements;\n      var i = 0,\n          len = elements.length;\n\n      while (i < len) {\n        if (elements[i].elem === elem) {\n          return elements[i].pos;\n        }\n\n        i += 1;\n      }\n\n      return 0;\n    },\n    addProcessedElement: function addProcessedElement(elem, pos) {\n      var elements = this.processedElements;\n      var i = elements.length;\n\n      while (i) {\n        i -= 1;\n\n        if (elements[i].elem === elem) {\n          elements[i].pos = pos;\n          return;\n        }\n      }\n\n      elements.push(new ProcessedElement(elem, pos));\n    },\n    prepareFrame: function prepareFrame(num) {\n      this.prepareRenderableFrame(num);\n      this.prepareProperties(num, this.isInRange);\n    }\n  };\n\n  function ITextElement() {}\n\n  ITextElement.prototype.initElement = function (data, globalData, comp) {\n    this.lettersChangedFlag = true;\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n    this.initRenderable();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n    this.createContent();\n    this.hide();\n    this.textAnimator.searchProperties(this.dynamicProperties);\n  };\n\n  ITextElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n\n    if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\n      this.buildNewText();\n      this.textProperty._isFirstFrame = false;\n      this.textProperty._mdf = false;\n    }\n  };\n\n  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\n    var j,\n        jLen = shapes.length;\n    var k, kLen, pathNodes;\n    var shapeStr = '';\n\n    for (j = 0; j < jLen; j += 1) {\n      pathNodes = shapes[j].ks.k;\n      shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\n    }\n\n    return shapeStr;\n  };\n\n  ITextElement.prototype.updateDocumentData = function (newData, index) {\n    this.textProperty.updateDocumentData(newData, index);\n  };\n\n  ITextElement.prototype.canResizeFont = function (_canResize) {\n    this.textProperty.canResizeFont(_canResize);\n  };\n\n  ITextElement.prototype.setMinimumFontSize = function (_fontSize) {\n    this.textProperty.setMinimumFontSize(_fontSize);\n  };\n\n  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\n    if (documentData.ps) {\n      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n    }\n\n    matrixHelper.translate(0, -documentData.ls, 0);\n\n    switch (documentData.j) {\n      case 1:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);\n        break;\n\n      case 2:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);\n        break;\n    }\n\n    matrixHelper.translate(xPos, yPos, 0);\n  };\n\n  ITextElement.prototype.buildColor = function (colorData) {\n    return 'rgb(' + Math.round(colorData[0] * 255) + ',' + Math.round(colorData[1] * 255) + ',' + Math.round(colorData[2] * 255) + ')';\n  };\n\n  ITextElement.prototype.emptyProp = new LetterProps();\n\n  ITextElement.prototype.destroy = function () {};\n\n  function ICompElement() {}\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\n\n  ICompElement.prototype.initElement = function (data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initTransform(data, globalData, comp);\n    this.initRenderable();\n    this.initHierarchy();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n\n    if (this.data.xt || !globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n\n    this.hide();\n  };\n  /*ICompElement.prototype.hide = function(){\r\n      if(!this.hidden){\r\n          this.hideElement();\r\n          var i,len = this.elements.length;\r\n          for( i = 0; i < len; i+=1 ){\r\n              if(this.elements[i]){\r\n                  this.elements[i].hide();\r\n              }\r\n          }\r\n      }\r\n  };*/\n\n\n  ICompElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n\n    if (!this.isInRange && !this.data.xt) {\n      return;\n    }\n\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1;\n      }\n\n      this.renderedFrame = timeRemapped;\n    } else {\n      this.renderedFrame = num / this.data.sr;\n    }\n\n    var i,\n        len = this.elements.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(this.renderedFrame);\n    } //This iteration needs to be backwards because of how expressions connect between each other\n\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\n\n        if (this.elements[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n\n  ICompElement.prototype.renderInnerContent = function () {\n    var i,\n        len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n\n  ICompElement.prototype.setElements = function (elems) {\n    this.elements = elems;\n  };\n\n  ICompElement.prototype.getElements = function () {\n    return this.elements;\n  };\n\n  ICompElement.prototype.destroyElements = function () {\n    var i,\n        len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n  };\n\n  ICompElement.prototype.destroy = function () {\n    this.destroyElements();\n    this.destroyBaseElement();\n  };\n\n  function IImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initElement(data, globalData, comp);\n    this.sourceRect = {\n      top: 0,\n      left: 0,\n      width: this.assetData.w,\n      height: this.assetData.h\n    };\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);\n\n  IImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.innerElem = createNS('image');\n    this.innerElem.setAttribute('width', this.assetData.w + \"px\");\n    this.innerElem.setAttribute('height', this.assetData.h + \"px\");\n    this.innerElem.setAttribute('preserveAspectRatio', this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n    this.layerElement.appendChild(this.innerElem);\n  };\n\n  IImageElement.prototype.sourceRectAtTime = function () {\n    return this.sourceRect;\n  };\n\n  function ISolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([IImageElement], ISolidElement);\n\n  ISolidElement.prototype.createContent = function () {\n    var rect = createNS('rect'); ////rect.style.width = this.data.sw;\n    ////rect.style.height = this.data.sh;\n    ////rect.style.fill = this.data.sc;\n\n    rect.setAttribute('width', this.data.sw);\n    rect.setAttribute('height', this.data.sh);\n    rect.setAttribute('fill', this.data.sc);\n    this.layerElement.appendChild(rect);\n  };\n\n  function SVGCompElement(data, globalData, comp) {\n    this.layers = data.layers;\n    this.supports3d = true;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : []; //this.layerElement = createNS('g');\n\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\n\n  function SVGTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.renderType = 'svg';\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextElement);\n\n  SVGTextElement.prototype.createContent = function () {\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\n      this.textContainer = createNS('text');\n    }\n  };\n\n  SVGTextElement.prototype.buildTextContents = function (textArray) {\n    var i = 0,\n        len = textArray.length;\n    var textContents = [],\n        currentTextContent = '';\n\n    while (i < len) {\n      if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\n        textContents.push(currentTextContent);\n        currentTextContent = '';\n      } else {\n        currentTextContent += textArray[i];\n      }\n\n      i += 1;\n    }\n\n    textContents.push(currentTextContent);\n    return textContents;\n  };\n\n  SVGTextElement.prototype.buildNewText = function () {\n    var i, len;\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\n\n    if (documentData.fc) {\n      this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\n    } else {\n      this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\n    }\n\n    if (documentData.sc) {\n      this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\n      this.layerElement.setAttribute('stroke-width', documentData.sw);\n    }\n\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (fontData.fClass) {\n      this.layerElement.setAttribute('class', fontData.fClass);\n    } else {\n      this.layerElement.setAttribute('font-family', fontData.fFamily);\n      var fWeight = documentData.fWeight,\n          fStyle = documentData.fStyle;\n      this.layerElement.setAttribute('font-style', fStyle);\n      this.layerElement.setAttribute('font-weight', fWeight);\n    }\n\n    this.layerElement.setAttribute('aria-label', documentData.t);\n    var letters = documentData.l || [];\n    var usesGlyphs = !!this.globalData.fontManager.chars;\n    len = letters.length;\n    var tSpan;\n    var matrixHelper = this.mHelper;\n    var shapes,\n        shapeStr = '',\n        singleShape = this.data.singleShape;\n    var xPos = 0,\n        yPos = 0,\n        firstLine = true;\n    var trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n\n    if (singleShape && !usesGlyphs && !documentData.sz) {\n      var tElement = this.textContainer;\n      var justify = 'start';\n\n      switch (documentData.j) {\n        case 1:\n          justify = 'end';\n          break;\n\n        case 2:\n          justify = 'middle';\n          break;\n      }\n\n      tElement.setAttribute('text-anchor', justify);\n      tElement.setAttribute('letter-spacing', trackingOffset);\n      var textContent = this.buildTextContents(documentData.finalText);\n      len = textContent.length;\n      yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\n\n      for (i = 0; i < len; i += 1) {\n        tSpan = this.textSpans[i] || createNS('tspan');\n        tSpan.textContent = textContent[i];\n        tSpan.setAttribute('x', 0);\n        tSpan.setAttribute('y', yPos);\n        tSpan.style.display = 'inherit';\n        tElement.appendChild(tSpan);\n        this.textSpans[i] = tSpan;\n        yPos += documentData.finalLineHeight;\n      }\n\n      this.layerElement.appendChild(tElement);\n    } else {\n      var cachedSpansLength = this.textSpans.length;\n      var shapeData, charData;\n\n      for (i = 0; i < len; i += 1) {\n        if (!usesGlyphs || !singleShape || i === 0) {\n          tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs ? 'path' : 'text');\n\n          if (cachedSpansLength <= i) {\n            tSpan.setAttribute('stroke-linecap', 'butt');\n            tSpan.setAttribute('stroke-linejoin', 'round');\n            tSpan.setAttribute('stroke-miterlimit', '4');\n            this.textSpans[i] = tSpan;\n            this.layerElement.appendChild(tSpan);\n          }\n\n          tSpan.style.display = 'inherit';\n        }\n\n        matrixHelper.reset();\n        matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n\n        if (singleShape) {\n          if (letters[i].n) {\n            xPos = -trackingOffset;\n            yPos += documentData.yOffset;\n            yPos += firstLine ? 1 : 0;\n            firstLine = false;\n          }\n\n          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n          xPos += letters[i].l || 0; //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\n\n          xPos += trackingOffset;\n        }\n\n        if (usesGlyphs) {\n          charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n          shapeData = charData && charData.data || {};\n          shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\n\n          if (!singleShape) {\n            tSpan.setAttribute('d', this.createPathShape(matrixHelper, shapes));\n          } else {\n            shapeStr += this.createPathShape(matrixHelper, shapes);\n          }\n        } else {\n          if (singleShape) {\n            tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\n          }\n\n          tSpan.textContent = letters[i].val;\n          tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n        } //\n\n      }\n\n      if (singleShape && tSpan) {\n        tSpan.setAttribute('d', shapeStr);\n      }\n    }\n\n    while (i < this.textSpans.length) {\n      this.textSpans[i].style.display = 'none';\n      i += 1;\n    }\n\n    this._sizeChanged = true;\n  };\n\n  SVGTextElement.prototype.sourceRectAtTime = function (time) {\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\n    this.renderInnerContent();\n\n    if (this._sizeChanged) {\n      this._sizeChanged = false;\n      var textBox = this.layerElement.getBBox();\n      this.bbox = {\n        top: textBox.y,\n        left: textBox.x,\n        width: textBox.width,\n        height: textBox.height\n      };\n    }\n\n    return this.bbox;\n  };\n\n  SVGTextElement.prototype.renderInnerContent = function () {\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n        this._sizeChanged = true;\n        var i, len;\n        var renderedLetters = this.textAnimator.renderedLetters;\n        var letters = this.textProperty.currentData.l;\n        len = letters.length;\n        var renderedLetter, textSpan;\n\n        for (i = 0; i < len; i += 1) {\n          if (letters[i].n) {\n            continue;\n          }\n\n          renderedLetter = renderedLetters[i];\n          textSpan = this.textSpans[i];\n\n          if (renderedLetter._mdf.m) {\n            textSpan.setAttribute('transform', renderedLetter.m);\n          }\n\n          if (renderedLetter._mdf.o) {\n            textSpan.setAttribute('opacity', renderedLetter.o);\n          }\n\n          if (renderedLetter._mdf.sw) {\n            textSpan.setAttribute('stroke-width', renderedLetter.sw);\n          }\n\n          if (renderedLetter._mdf.sc) {\n            textSpan.setAttribute('stroke', renderedLetter.sc);\n          }\n\n          if (renderedLetter._mdf.fc) {\n            textSpan.setAttribute('fill', renderedLetter.fc);\n          }\n        }\n      }\n    }\n  };\n\n  function SVGShapeElement(data, globalData, comp) {\n    //List of drawable elements\n    this.shapes = []; // Full shape data\n\n    this.shapesData = data.shapes; //List of styles that will be applied to shapes\n\n    this.stylesList = []; //List of modifiers that will be applied to shapes\n\n    this.shapeModifiers = []; //List of items in shape tree\n\n    this.itemsData = []; //List of items in previous shape tree\n\n    this.processedElements = []; // List of animated components\n\n    this.animatedContents = [];\n    this.initElement(data, globalData, comp); //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n\n    this.prevViewData = []; //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);\n\n  SVGShapeElement.prototype.initSecondaryElement = function () {};\n\n  SVGShapeElement.prototype.identityMatrix = new Matrix();\n\n  SVGShapeElement.prototype.buildExpressionInterface = function () {};\n\n  SVGShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n  };\n  /*\r\n  This method searches for multiple shapes that affect a single element and one of them is animated\r\n  */\n\n\n  SVGShapeElement.prototype.filterUniqueShapes = function () {\n    var i,\n        len = this.shapes.length,\n        shape;\n    var j,\n        jLen = this.stylesList.length;\n    var style,\n        count = 0;\n    var tempShapes = [];\n    var areAnimated = false;\n\n    for (j = 0; j < jLen; j += 1) {\n      style = this.stylesList[j];\n      areAnimated = false;\n      tempShapes.length = 0;\n\n      for (i = 0; i < len; i += 1) {\n        shape = this.shapes[i];\n\n        if (shape.styles.indexOf(style) !== -1) {\n          tempShapes.push(shape);\n          areAnimated = shape._isAnimated || areAnimated;\n        }\n      }\n\n      if (tempShapes.length > 1 && areAnimated) {\n        this.setShapesAsAnimated(tempShapes);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\n    var i,\n        len = shapes.length;\n\n    for (i = 0; i < len; i += 1) {\n      shapes[i].setAsAnimated();\n    }\n  };\n\n  SVGShapeElement.prototype.createStyleElement = function (data, level) {\n    //TODO: prevent drawing of hidden styles\n    var elementData;\n    var styleOb = new SVGStyleData(data, level);\n    var pathElement = styleOb.pElem;\n\n    if (data.ty === 'st') {\n      elementData = new SVGStrokeStyleData(this, data, styleOb);\n    } else if (data.ty === 'fl') {\n      elementData = new SVGFillStyleData(this, data, styleOb);\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\n      elementData = new gradientConstructor(this, data, styleOb);\n      this.globalData.defs.appendChild(elementData.gf);\n\n      if (elementData.maskId) {\n        this.globalData.defs.appendChild(elementData.ms);\n        this.globalData.defs.appendChild(elementData.of);\n        pathElement.setAttribute('mask', 'url(' + locationHref + '#' + elementData.maskId + ')');\n      }\n    }\n\n    if (data.ty === 'st' || data.ty === 'gs') {\n      pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\n      pathElement.setAttribute('stroke-linejoin', this.ljEnum[data.lj] || 'round');\n      pathElement.setAttribute('fill-opacity', '0');\n\n      if (data.lj === 1) {\n        pathElement.setAttribute('stroke-miterlimit', data.ml);\n      }\n    }\n\n    if (data.r === 2) {\n      pathElement.setAttribute('fill-rule', 'evenodd');\n    }\n\n    if (data.ln) {\n      pathElement.setAttribute('id', data.ln);\n    }\n\n    if (data.cl) {\n      pathElement.setAttribute('class', data.cl);\n    }\n\n    if (data.bm) {\n      pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\n    }\n\n    this.stylesList.push(styleOb);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = new ShapeGroupData();\n\n    if (data.ln) {\n      elementData.gr.setAttribute('id', data.ln);\n    }\n\n    if (data.cl) {\n      elementData.gr.setAttribute('class', data.cl);\n    }\n\n    if (data.bm) {\n      elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\n    }\n\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createTransformElement = function (data, container) {\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this);\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {\n    var ty = 4;\n\n    if (data.ty === 'rc') {\n      ty = 5;\n    } else if (data.ty === 'el') {\n      ty = 6;\n    } else if (data.ty === 'sr') {\n      ty = 7;\n    }\n\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this);\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.addToAnimatedContents = function (data, element) {\n    var i = 0,\n        len = this.animatedContents.length;\n\n    while (i < len) {\n      if (this.animatedContents[i].element === element) {\n        return;\n      }\n\n      i += 1;\n    }\n\n    this.animatedContents.push({\n      fn: SVGElementsRenderer.createRenderFunction(data),\n      element: element,\n      data: data\n    });\n  };\n\n  SVGShapeElement.prototype.setElementStyles = function (elementData) {\n    var arr = elementData.styles;\n    var j,\n        jLen = this.stylesList.length;\n\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        arr.push(this.stylesList[j]);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i,\n        len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n    len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n  };\n\n  SVGShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, level, transformers, render) {\n    var ownTransformers = [].concat(transformers);\n    var i,\n        len = arr.length - 1;\n    var j, jLen;\n    var ownStyles = [],\n        ownModifiers = [],\n        styleOb,\n        currentTransform,\n        modifier,\n        processedPos;\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._render = render;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], level);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        if (arr[i]._render) {\n          container.appendChild(itemsData[i].style.pElem);\n        }\n\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty == 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);\n\n        if (arr[i]._render) {\n          container.appendChild(itemsData[i].gr);\n        }\n      } else if (arr[i].ty == 'tr') {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], container);\n        }\n\n        currentTransform = itemsData[i].transform;\n        ownTransformers.push(currentTransform);\n      } else if (arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\n        }\n\n        this.setElementStyles(itemsData[i]);\n      } else if (arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty == 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          render = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    len = ownStyles.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownStyles[i].closed = true;\n    }\n\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  SVGShapeElement.prototype.renderInnerContent = function () {\n    this.renderModifiers();\n    var i,\n        len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.stylesList[i].reset();\n    }\n\n    this.renderShape();\n\n    for (i = 0; i < len; i += 1) {\n      if (this.stylesList[i]._mdf || this._isFirstFrame) {\n        if (this.stylesList[i].msElem) {\n          this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d); //Adding M0 0 fixes same mask bug on all browsers\n\n          this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\n        }\n\n        this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.renderShape = function () {\n    var i,\n        len = this.animatedContents.length;\n    var animatedContent;\n\n    for (i = 0; i < len; i += 1) {\n      animatedContent = this.animatedContents[i];\n\n      if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\n        animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.destroy = function () {\n    this.destroyBaseElement();\n    this.shapesData = null;\n    this.itemsData = null;\n  };\n\n  function SVGTintFilter(filter, filterManager) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', 'f1');\n    filter.appendChild(feColorMatrix);\n    feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', 'f2');\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n\n    if (filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k) {\n      var feMerge = createNS('feMerge');\n      filter.appendChild(feMerge);\n      var feMergeNode;\n      feMergeNode = createNS('feMergeNode');\n      feMergeNode.setAttribute('in', 'SourceGraphic');\n      feMerge.appendChild(feMergeNode);\n      feMergeNode = createNS('feMergeNode');\n      feMergeNode.setAttribute('in', 'f2');\n      feMerge.appendChild(feMergeNode);\n    }\n  }\n\n  SVGTintFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var colorBlack = this.filterManager.effectElements[0].p.v;\n      var colorWhite = this.filterManager.effectElements[1].p.v;\n      var opacity = this.filterManager.effectElements[2].p.v / 100;\n      this.matrixFilter.setAttribute('values', colorWhite[0] - colorBlack[0] + ' 0 0 0 ' + colorBlack[0] + ' ' + (colorWhite[1] - colorBlack[1]) + ' 0 0 0 ' + colorBlack[1] + ' ' + (colorWhite[2] - colorBlack[2]) + ' 0 0 0 ' + colorBlack[2] + ' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGFillFilter(filter, filterManager) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n  }\n\n  SVGFillFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var color = this.filterManager.effectElements[2].p.v;\n      var opacity = this.filterManager.effectElements[6].p.v;\n      this.matrixFilter.setAttribute('values', '0 0 0 0 ' + color[0] + ' 0 0 0 0 ' + color[1] + ' 0 0 0 0 ' + color[2] + ' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGGaussianBlurEffect(filter, filterManager) {\n    // Outset the filter region by 100% on all sides to accommodate blur expansion.\n    filter.setAttribute('x', '-100%');\n    filter.setAttribute('y', '-100%');\n    filter.setAttribute('width', '300%');\n    filter.setAttribute('height', '300%');\n    this.filterManager = filterManager;\n    var feGaussianBlur = createNS('feGaussianBlur');\n    filter.appendChild(feGaussianBlur);\n    this.feGaussianBlur = feGaussianBlur;\n  }\n\n  SVGGaussianBlurEffect.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      // Empirical value, matching AE's blur appearance.\n      var kBlurrinessToSigma = 0.3;\n      var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma; // Dimensions mapping:\n      //\n      //   1 -> horizontal & vertical\n      //   2 -> horizontal only\n      //   3 -> vertical only\n      //\n\n      var dimensions = this.filterManager.effectElements[1].p.v;\n      var sigmaX = dimensions == 3 ? 0 : sigma;\n      var sigmaY = dimensions == 2 ? 0 : sigma;\n      this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + \" \" + sigmaY); // Repeat edges mapping:\n      //\n      //   0 -> off -> duplicate\n      //   1 -> on  -> wrap\n\n      var edgeMode = this.filterManager.effectElements[2].p.v == 1 ? 'wrap' : 'duplicate';\n      this.feGaussianBlur.setAttribute('edgeMode', edgeMode);\n    }\n  };\n\n  function SVGStrokeEffect(elem, filterManager) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.elem = elem;\n    this.paths = [];\n  }\n\n  SVGStrokeEffect.prototype.initialize = function () {\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n    var path, groupPath, i, len;\n\n    if (this.filterManager.effectElements[1].p.v === 1) {\n      len = this.elem.maskManager.masksProperties.length;\n      i = 0;\n    } else {\n      i = this.filterManager.effectElements[0].p.v - 1;\n      len = i + 1;\n    }\n\n    groupPath = createNS('g');\n    groupPath.setAttribute('fill', 'none');\n    groupPath.setAttribute('stroke-linecap', 'round');\n    groupPath.setAttribute('stroke-dashoffset', 1);\n\n    for (i; i < len; i += 1) {\n      path = createNS('path');\n      groupPath.appendChild(path);\n      this.paths.push({\n        p: path,\n        m: i\n      });\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 3) {\n      var mask = createNS('mask');\n      var id = createElementID();\n      mask.setAttribute('id', id);\n      mask.setAttribute('mask-type', 'alpha');\n      mask.appendChild(groupPath);\n      this.elem.globalData.defs.appendChild(mask);\n      var g = createNS('g');\n      g.setAttribute('mask', 'url(' + locationHref + '#' + id + ')');\n\n      while (elemChildren[0]) {\n        g.appendChild(elemChildren[0]);\n      }\n\n      this.elem.layerElement.appendChild(g);\n      this.masker = mask;\n      groupPath.setAttribute('stroke', '#fff');\n    } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (this.filterManager.effectElements[10].p.v === 2) {\n        elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n\n        while (elemChildren.length) {\n          this.elem.layerElement.removeChild(elemChildren[0]);\n        }\n      }\n\n      this.elem.layerElement.appendChild(groupPath);\n      this.elem.layerElement.removeAttribute('mask');\n      groupPath.setAttribute('stroke', '#fff');\n    }\n\n    this.initialized = true;\n    this.pathMasker = groupPath;\n  };\n\n  SVGStrokeEffect.prototype.renderFrame = function (forceRender) {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    var i,\n        len = this.paths.length;\n    var mask, path;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.paths[i].m === -1) {\n        continue;\n      }\n\n      mask = this.elem.maskManager.viewData[this.paths[i].m];\n      path = this.paths[i].p;\n\n      if (forceRender || this.filterManager._mdf || mask.prop._mdf) {\n        path.setAttribute('d', mask.lastPath);\n      }\n\n      if (forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf) {\n        var dasharrayValue;\n\n        if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {\n          var s = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) / 100;\n          var e = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) / 100;\n          var l = path.getTotalLength();\n          dasharrayValue = '0 0 0 ' + l * s + ' ';\n          var lineLength = l * (e - s);\n          var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v / 100;\n          var units = Math.floor(lineLength / segment);\n          var j;\n\n          for (j = 0; j < units; j += 1) {\n            dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v / 100 + ' ';\n          }\n\n          dasharrayValue += '0 ' + l * 10 + ' 0 0';\n        } else {\n          dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v / 100;\n        }\n\n        path.setAttribute('stroke-dasharray', dasharrayValue);\n      }\n    }\n\n    if (forceRender || this.filterManager.effectElements[4].p._mdf) {\n      this.pathMasker.setAttribute('stroke-width', this.filterManager.effectElements[4].p.v * 2);\n    }\n\n    if (forceRender || this.filterManager.effectElements[6].p._mdf) {\n      this.pathMasker.setAttribute('opacity', this.filterManager.effectElements[6].p.v);\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (forceRender || this.filterManager.effectElements[3].p._mdf) {\n        var color = this.filterManager.effectElements[3].p.v;\n        this.pathMasker.setAttribute('stroke', 'rgb(' + bm_floor(color[0] * 255) + ',' + bm_floor(color[1] * 255) + ',' + bm_floor(color[2] * 255) + ')');\n      }\n    }\n  };\n\n  function SVGTritoneFilter(filter, filterManager) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', 'f1');\n    filter.appendChild(feColorMatrix);\n    var feComponentTransfer = createNS('feComponentTransfer');\n    feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n    filter.appendChild(feComponentTransfer);\n    this.matrixFilter = feComponentTransfer;\n    var feFuncR = createNS('feFuncR');\n    feFuncR.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncR);\n    this.feFuncR = feFuncR;\n    var feFuncG = createNS('feFuncG');\n    feFuncG.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncG);\n    this.feFuncG = feFuncG;\n    var feFuncB = createNS('feFuncB');\n    feFuncB.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncB);\n    this.feFuncB = feFuncB;\n  }\n\n  SVGTritoneFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var color1 = this.filterManager.effectElements[0].p.v;\n      var color2 = this.filterManager.effectElements[1].p.v;\n      var color3 = this.filterManager.effectElements[2].p.v;\n      var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\n      var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\n      var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\n      this.feFuncR.setAttribute('tableValues', tableR);\n      this.feFuncG.setAttribute('tableValues', tableG);\n      this.feFuncB.setAttribute('tableValues', tableB); //var opacity = this.filterManager.effectElements[2].p.v/100;\n      //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGProLevelsFilter(filter, filterManager) {\n    this.filterManager = filterManager;\n    var effectElements = this.filterManager.effectElements;\n    var feComponentTransfer = createNS('feComponentTransfer');\n    var feFuncR, feFuncG, feFuncB;\n\n    if (effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1) {\n      this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\n    }\n\n    if (effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1) {\n      this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\n    }\n\n    if (effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1) {\n      this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\n    }\n\n    if (effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1) {\n      this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\n    }\n\n    if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      filter.appendChild(feComponentTransfer);\n      feComponentTransfer = createNS('feComponentTransfer');\n    }\n\n    if (effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1) {\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      filter.appendChild(feComponentTransfer);\n      this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\n      this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\n      this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\n    }\n  }\n\n  SVGProLevelsFilter.prototype.createFeFunc = function (type, feComponentTransfer) {\n    var feFunc = createNS(type);\n    feFunc.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFunc);\n    return feFunc;\n  };\n\n  SVGProLevelsFilter.prototype.getTableValue = function (inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\n    var cnt = 0;\n    var segments = 256;\n    var perc;\n    var min = Math.min(inputBlack, inputWhite);\n    var max = Math.max(inputBlack, inputWhite);\n    var table = Array.call(null, {\n      length: segments\n    });\n    var colorValue;\n    var pos = 0;\n    var outputDelta = outputWhite - outputBlack;\n    var inputDelta = inputWhite - inputBlack;\n\n    while (cnt <= 256) {\n      perc = cnt / 256;\n\n      if (perc <= min) {\n        colorValue = inputDelta < 0 ? outputWhite : outputBlack;\n      } else if (perc >= max) {\n        colorValue = inputDelta < 0 ? outputBlack : outputWhite;\n      } else {\n        colorValue = outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma);\n      }\n\n      table[pos++] = colorValue;\n      cnt += 256 / (segments - 1);\n    }\n\n    return table.join(' ');\n  };\n\n  SVGProLevelsFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var val, cnt, perc, bezier;\n      var effectElements = this.filterManager.effectElements;\n\n      if (this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)) {\n        val = this.getTableValue(effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v, effectElements[7].p.v);\n        this.feFuncRComposed.setAttribute('tableValues', val);\n        this.feFuncGComposed.setAttribute('tableValues', val);\n        this.feFuncBComposed.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)) {\n        val = this.getTableValue(effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v, effectElements[14].p.v);\n        this.feFuncR.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)) {\n        val = this.getTableValue(effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v, effectElements[21].p.v);\n        this.feFuncG.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)) {\n        val = this.getTableValue(effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v, effectElements[28].p.v);\n        this.feFuncB.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)) {\n        val = this.getTableValue(effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v, effectElements[35].p.v);\n        this.feFuncA.setAttribute('tableValues', val);\n      }\n    }\n  };\n\n  function SVGDropShadowEffect(filter, filterManager) {\n    filter.setAttribute('x', '-100%');\n    filter.setAttribute('y', '-100%');\n    filter.setAttribute('width', '400%');\n    filter.setAttribute('height', '400%');\n    this.filterManager = filterManager;\n    var feGaussianBlur = createNS('feGaussianBlur');\n    feGaussianBlur.setAttribute('in', 'SourceAlpha');\n    feGaussianBlur.setAttribute('result', 'drop_shadow_1');\n    feGaussianBlur.setAttribute('stdDeviation', '0');\n    this.feGaussianBlur = feGaussianBlur;\n    filter.appendChild(feGaussianBlur);\n    var feOffset = createNS('feOffset');\n    feOffset.setAttribute('dx', '25');\n    feOffset.setAttribute('dy', '0');\n    feOffset.setAttribute('in', 'drop_shadow_1');\n    feOffset.setAttribute('result', 'drop_shadow_2');\n    this.feOffset = feOffset;\n    filter.appendChild(feOffset);\n    var feFlood = createNS('feFlood');\n    feFlood.setAttribute('flood-color', '#00ff00');\n    feFlood.setAttribute('flood-opacity', '1');\n    feFlood.setAttribute('result', 'drop_shadow_3');\n    this.feFlood = feFlood;\n    filter.appendChild(feFlood);\n    var feComposite = createNS('feComposite');\n    feComposite.setAttribute('in', 'drop_shadow_3');\n    feComposite.setAttribute('in2', 'drop_shadow_2');\n    feComposite.setAttribute('operator', 'in');\n    feComposite.setAttribute('result', 'drop_shadow_4');\n    filter.appendChild(feComposite);\n    var feMerge = createNS('feMerge');\n    filter.appendChild(feMerge);\n    var feMergeNode;\n    feMergeNode = createNS('feMergeNode');\n    feMerge.appendChild(feMergeNode);\n    feMergeNode = createNS('feMergeNode');\n    feMergeNode.setAttribute('in', 'SourceGraphic');\n    this.feMergeNode = feMergeNode;\n    this.feMerge = feMerge;\n    this.originalNodeAdded = false;\n    feMerge.appendChild(feMergeNode);\n  }\n\n  SVGDropShadowEffect.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      if (forceRender || this.filterManager.effectElements[4].p._mdf) {\n        this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\n      }\n\n      if (forceRender || this.filterManager.effectElements[0].p._mdf) {\n        var col = this.filterManager.effectElements[0].p.v;\n        this.feFlood.setAttribute('flood-color', rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));\n      }\n\n      if (forceRender || this.filterManager.effectElements[1].p._mdf) {\n        this.feFlood.setAttribute('flood-opacity', this.filterManager.effectElements[1].p.v / 255);\n      }\n\n      if (forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {\n        var distance = this.filterManager.effectElements[3].p.v;\n        var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\n        var x = distance * Math.cos(angle);\n        var y = distance * Math.sin(angle);\n        this.feOffset.setAttribute('dx', x);\n        this.feOffset.setAttribute('dy', y);\n      }\n      /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n          if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n              this.feMerge.removeChild(this.feMergeNode);\r\n              this.originalNodeAdded = false;\r\n          } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n              this.feMerge.appendChild(this.feMergeNode);\r\n              this.originalNodeAdded = true;\r\n          }\r\n      }*/\n\n    }\n  };\n\n  var _svgMatteSymbols = [];\n\n  function SVGMatte3Effect(filterElem, filterManager, elem) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.filterElem = filterElem;\n    this.elem = elem;\n    elem.matteElement = createNS('g');\n    elem.matteElement.appendChild(elem.layerElement);\n    elem.matteElement.appendChild(elem.transformedElement);\n    elem.baseElement = elem.matteElement;\n  }\n\n  SVGMatte3Effect.prototype.findSymbol = function (mask) {\n    var i = 0,\n        len = _svgMatteSymbols.length;\n\n    while (i < len) {\n      if (_svgMatteSymbols[i] === mask) {\n        return _svgMatteSymbols[i];\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  SVGMatte3Effect.prototype.replaceInParent = function (mask, symbolId) {\n    var parentNode = mask.layerElement.parentNode;\n\n    if (!parentNode) {\n      return;\n    }\n\n    var children = parentNode.children;\n    var i = 0,\n        len = children.length;\n\n    while (i < len) {\n      if (children[i] === mask.layerElement) {\n        break;\n      }\n\n      i += 1;\n    }\n\n    var nextChild;\n\n    if (i <= len - 2) {\n      nextChild = children[i + 1];\n    }\n\n    var useElem = createNS('use');\n    useElem.setAttribute('href', '#' + symbolId);\n\n    if (nextChild) {\n      parentNode.insertBefore(useElem, nextChild);\n    } else {\n      parentNode.appendChild(useElem);\n    }\n  };\n\n  SVGMatte3Effect.prototype.setElementAsMask = function (elem, mask) {\n    if (!this.findSymbol(mask)) {\n      var symbolId = createElementID();\n      var masker = createNS('mask');\n      masker.setAttribute('id', mask.layerId);\n      masker.setAttribute('mask-type', 'alpha');\n\n      _svgMatteSymbols.push(mask);\n\n      var defs = elem.globalData.defs;\n      defs.appendChild(masker);\n      var symbol = createNS('symbol');\n      symbol.setAttribute('id', symbolId);\n      this.replaceInParent(mask, symbolId);\n      symbol.appendChild(mask.layerElement);\n      defs.appendChild(symbol);\n      var useElem = createNS('use');\n      useElem.setAttribute('href', '#' + symbolId);\n      masker.appendChild(useElem);\n      mask.data.hd = false;\n      mask.show();\n    }\n\n    elem.setMatte(mask.layerId);\n  };\n\n  SVGMatte3Effect.prototype.initialize = function () {\n    var ind = this.filterManager.effectElements[0].p.v;\n    var elements = this.elem.comp.elements;\n    var i = 0,\n        len = elements.length;\n\n    while (i < len) {\n      if (elements[i] && elements[i].data.ind === ind) {\n        this.setElementAsMask(this.elem, elements[i]);\n      }\n\n      i += 1;\n    }\n\n    this.initialized = true;\n  };\n\n  SVGMatte3Effect.prototype.renderFrame = function () {\n    if (!this.initialized) {\n      this.initialize();\n    }\n  };\n\n  function SVGEffects(elem) {\n    var i,\n        len = elem.data.ef ? elem.data.ef.length : 0;\n    var filId = createElementID();\n    var fil = filtersFactory.createFilter(filId);\n    var count = 0;\n    this.filters = [];\n    var filterManager;\n\n    for (i = 0; i < len; i += 1) {\n      filterManager = null;\n\n      if (elem.data.ef[i].ty === 20) {\n        count += 1;\n        filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\n      } else if (elem.data.ef[i].ty === 21) {\n        count += 1;\n        filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\n      } else if (elem.data.ef[i].ty === 22) {\n        filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\n      } else if (elem.data.ef[i].ty === 23) {\n        count += 1;\n        filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\n      } else if (elem.data.ef[i].ty === 24) {\n        count += 1;\n        filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\n      } else if (elem.data.ef[i].ty === 25) {\n        count += 1;\n        filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\n      } else if (elem.data.ef[i].ty === 28) {\n        //count += 1;\n        filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\n      } else if (elem.data.ef[i].ty === 29) {\n        count += 1;\n        filterManager = new SVGGaussianBlurEffect(fil, elem.effectsManager.effectElements[i]);\n      }\n\n      if (filterManager) {\n        this.filters.push(filterManager);\n      }\n    }\n\n    if (count) {\n      elem.globalData.defs.appendChild(fil);\n      elem.layerElement.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\n    }\n\n    if (this.filters.length) {\n      elem.addRenderableComponent(this);\n    }\n  }\n\n  SVGEffects.prototype.renderFrame = function (_isFirstFrame) {\n    var i,\n        len = this.filters.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(_isFirstFrame);\n    }\n  };\n\n  function CVContextData() {\n    this.saved = [];\n    this.cArrPos = 0;\n    this.cTr = new Matrix();\n    this.cO = 1;\n    var i,\n        len = 15;\n    this.savedOp = createTypedArray('float32', len);\n\n    for (i = 0; i < len; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16);\n    }\n\n    this._length = len;\n  }\n\n  CVContextData.prototype.duplicate = function () {\n    var newLength = this._length * 2;\n    var currentSavedOp = this.savedOp;\n    this.savedOp = createTypedArray('float32', newLength);\n    this.savedOp.set(currentSavedOp);\n    var i = 0;\n\n    for (i = this._length; i < newLength; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16);\n    }\n\n    this._length = newLength;\n  };\n\n  CVContextData.prototype.reset = function () {\n    this.cArrPos = 0;\n    this.cTr.reset();\n    this.cO = 1;\n  };\n\n  function CVBaseElement() {}\n\n  CVBaseElement.prototype = {\n    createElements: function createElements() {},\n    initRendererElement: function initRendererElement() {},\n    createContainerElements: function createContainerElements() {\n      this.canvasContext = this.globalData.canvasContext;\n      this.renderableEffectsManager = new CVEffects(this);\n    },\n    createContent: function createContent() {},\n    setBlendMode: function setBlendMode() {\n      var globalData = this.globalData;\n\n      if (globalData.blendMode !== this.data.bm) {\n        globalData.blendMode = this.data.bm;\n        var blendModeValue = getBlendMode(this.data.bm);\n        globalData.canvasContext.globalCompositeOperation = blendModeValue;\n      }\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new CVMaskElement(this.data, this);\n    },\n    hideElement: function hideElement() {\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n        this.hidden = true;\n      }\n    },\n    showElement: function showElement() {\n      if (this.isInRange && !this.isTransparent) {\n        this.hidden = false;\n        this._isFirstFrame = true;\n        this.maskManager._isFirstFrame = true;\n      }\n    },\n    renderFrame: function renderFrame() {\n      if (this.hidden || this.data.hd) {\n        return;\n      }\n\n      this.renderTransform();\n      this.renderRenderable();\n      this.setBlendMode();\n      this.globalData.renderer.save();\n      this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\n      this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\n      this.renderInnerContent();\n      this.globalData.renderer.restore();\n\n      if (this.maskManager.hasMasks) {\n        this.globalData.renderer.restore(true);\n      }\n\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function destroy() {\n      this.canvasContext = null;\n      this.data = null;\n      this.globalData = null;\n      this.maskManager.destroy();\n    },\n    mHelper: new Matrix()\n  };\n  CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\n  CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\n\n  function CVImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.img = globalData.imageLoader.getImage(this.assetData);\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\n  CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n\n  CVImageElement.prototype.createContent = function () {\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\n      var canvas = createTag('canvas');\n      canvas.width = this.assetData.w;\n      canvas.height = this.assetData.h;\n      var ctx = canvas.getContext('2d');\n      var imgW = this.img.width;\n      var imgH = this.img.height;\n      var imgRel = imgW / imgH;\n      var canvasRel = this.assetData.w / this.assetData.h;\n      var widthCrop, heightCrop;\n      var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\n\n      if (imgRel > canvasRel && par === 'xMidYMid slice' || imgRel < canvasRel && par !== 'xMidYMid slice') {\n        heightCrop = imgH;\n        widthCrop = heightCrop * canvasRel;\n      } else {\n        widthCrop = imgW;\n        heightCrop = widthCrop / canvasRel;\n      }\n\n      ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);\n      this.img = canvas;\n    }\n  };\n\n  CVImageElement.prototype.renderInnerContent = function (parentMatrix) {\n    this.canvasContext.drawImage(this.img, 0, 0);\n  };\n\n  CVImageElement.prototype.destroy = function () {\n    this.img = null;\n  };\n\n  function CVCompElement(data, globalData, comp) {\n    this.completeLayers = false;\n    this.layers = data.layers;\n    this.pendingElements = [];\n    this.elements = createSizedArray(this.layers.length);\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\n\n  CVCompElement.prototype.renderInnerContent = function () {\n    var i,\n        len = this.layers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n\n  CVCompElement.prototype.destroy = function () {\n    var i,\n        len = this.layers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.layers = null;\n    this.elements = null;\n  };\n\n  function CVMaskElement(data, element) {\n    this.data = data;\n    this.element = element;\n    this.masksProperties = this.data.masksProperties || [];\n    this.viewData = createSizedArray(this.masksProperties.length);\n    var i,\n        len = this.masksProperties.length,\n        hasMasks = false;\n\n    for (i = 0; i < len; i++) {\n      if (this.masksProperties[i].mode !== 'n') {\n        hasMasks = true;\n      }\n\n      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);\n    }\n\n    this.hasMasks = hasMasks;\n\n    if (hasMasks) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n\n  CVMaskElement.prototype.renderFrame = function () {\n    if (!this.hasMasks) {\n      return;\n    }\n\n    var transform = this.element.finalTransform.mat;\n    var ctx = this.element.canvasContext;\n    var i,\n        len = this.masksProperties.length;\n    var pt, pts, data;\n    ctx.beginPath();\n\n    for (i = 0; i < len; i++) {\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.masksProperties[i].inv) {\n          ctx.moveTo(0, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\n          ctx.lineTo(0, this.element.globalData.compSize.h);\n          ctx.lineTo(0, 0);\n        }\n\n        data = this.viewData[i].v;\n        pt = transform.applyToPointArray(data.v[0][0], data.v[0][1], 0);\n        ctx.moveTo(pt[0], pt[1]);\n        var j,\n            jLen = data._length;\n\n        for (j = 1; j < jLen; j++) {\n          pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\n          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n        }\n\n        pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\n        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n      }\n    }\n\n    this.element.globalData.renderer.save(true);\n    ctx.clip();\n  };\n\n  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\n\n  CVMaskElement.prototype.destroy = function () {\n    this.element = null;\n  };\n\n  function CVShapeElement(data, globalData, comp) {\n    this.shapes = [];\n    this.shapesData = data.shapes;\n    this.stylesList = [];\n    this.itemsData = [];\n    this.prevViewData = [];\n    this.shapeModifiers = [];\n    this.processedElements = [];\n    this.transformsManager = new ShapeTransformManager();\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement);\n  CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\n  CVShapeElement.prototype.transformHelper = {\n    opacity: 1,\n    _opMdf: false\n  };\n  CVShapeElement.prototype.dashResetter = [];\n\n  CVShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n  };\n\n  CVShapeElement.prototype.createStyleElement = function (data, transforms) {\n    var styleElem = {\n      data: data,\n      type: data.ty,\n      preTransforms: this.transformsManager.addTransformSequence(transforms),\n      transforms: [],\n      elements: [],\n      closed: data.hd === true\n    };\n    var elementData = {};\n\n    if (data.ty == 'fl' || data.ty == 'st') {\n      elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, this);\n\n      if (!elementData.c.k) {\n        styleElem.co = 'rgb(' + bm_floor(elementData.c.v[0]) + ',' + bm_floor(elementData.c.v[1]) + ',' + bm_floor(elementData.c.v[2]) + ')';\n      }\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      elementData.s = PropertyFactory.getProp(this, data.s, 1, null, this);\n      elementData.e = PropertyFactory.getProp(this, data.e, 1, null, this);\n      elementData.h = PropertyFactory.getProp(this, data.h || {\n        k: 0\n      }, 0, 0.01, this);\n      elementData.a = PropertyFactory.getProp(this, data.a || {\n        k: 0\n      }, 0, degToRads, this);\n      elementData.g = new GradientProperty(this, data.g, this);\n    }\n\n    elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, this);\n\n    if (data.ty == 'st' || data.ty == 'gs') {\n      styleElem.lc = this.lcEnum[data.lc] || 'round';\n      styleElem.lj = this.ljEnum[data.lj] || 'round';\n\n      if (data.lj == 1) {\n        styleElem.ml = data.ml;\n      }\n\n      elementData.w = PropertyFactory.getProp(this, data.w, 0, null, this);\n\n      if (!elementData.w.k) {\n        styleElem.wi = elementData.w.v;\n      }\n\n      if (data.d) {\n        var d = new DashProperty(this, data.d, 'canvas', this);\n        elementData.d = d;\n\n        if (!elementData.d.k) {\n          styleElem.da = elementData.d.dashArray;\n          styleElem.do = elementData.d.dashoffset[0];\n        }\n      }\n    } else {\n      styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\n    }\n\n    this.stylesList.push(styleElem);\n    elementData.style = styleElem;\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = {\n      it: [],\n      prevViewData: []\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createTransformElement = function (data) {\n    var elementData = {\n      transform: {\n        opacity: 1,\n        _opMdf: false,\n        key: this.transformsManager.getNewKey(),\n        op: PropertyFactory.getProp(this, data.o, 0, 0.01, this),\n        mProps: TransformPropertyFactory.getTransformProperty(this, data, this)\n      }\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createShapeElement = function (data) {\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    return elementData;\n  };\n\n  CVShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i,\n        len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n    len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n  };\n\n  CVShapeElement.prototype.addTransformToStyleList = function (transform) {\n    var i,\n        len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.push(transform);\n      }\n    }\n  };\n\n  CVShapeElement.prototype.removeTransformFromStyleList = function () {\n    var i,\n        len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.pop();\n      }\n    }\n  };\n\n  CVShapeElement.prototype.closeStyles = function (styles) {\n    var i,\n        len = styles.length,\n        j,\n        jLen;\n\n    for (i = 0; i < len; i += 1) {\n      styles[i].closed = true;\n    }\n  };\n\n  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {\n    var i,\n        len = arr.length - 1;\n    var j, jLen;\n    var ownStyles = [],\n        ownModifiers = [],\n        processedPos,\n        modifier,\n        currentTransform;\n    var ownTransforms = [].concat(transforms);\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._shouldRender = shouldRender;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty == 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms);\n      } else if (arr[i].ty == 'tr') {\n        if (!processedPos) {\n          currentTransform = this.createTransformElement(arr[i]);\n          itemsData[i] = currentTransform;\n        }\n\n        ownTransforms.push(itemsData[i]);\n        this.addTransformToStyleList(itemsData[i]);\n      } else if (arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i]);\n        }\n      } else if (arr[i].ty == 'tm' || arr[i].ty == 'rd') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty == 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          shouldRender = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    this.removeTransformFromStyleList();\n    this.closeStyles(ownStyles);\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  CVShapeElement.prototype.renderInnerContent = function () {\n    this.transformHelper.opacity = 1;\n    this.transformHelper._opMdf = false;\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);\n  };\n\n  CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {\n    var props, groupMatrix;\n\n    if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\n      groupTransform.opacity = parentTransform.opacity;\n      groupTransform.opacity *= groupTransform.op.v;\n      groupTransform._opMdf = true;\n    }\n  };\n\n  CVShapeElement.prototype.drawLayer = function () {\n    var i,\n        len = this.stylesList.length;\n    var j,\n        jLen,\n        k,\n        kLen,\n        elems,\n        nodes,\n        renderer = this.globalData.renderer,\n        ctx = this.globalData.canvasContext,\n        type,\n        currentStyle;\n\n    for (i = 0; i < len; i += 1) {\n      currentStyle = this.stylesList[i];\n      type = currentStyle.type; //Skipping style when\n      //Stroke width equals 0\n      //style should not be rendered (extra unused repeaters)\n      //current opacity equals 0\n      //global opacity equals 0\n\n      if ((type === 'st' || type === 'gs') && currentStyle.wi === 0 || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0) {\n        continue;\n      }\n\n      renderer.save();\n      elems = currentStyle.elements;\n\n      if (type === 'st' || type === 'gs') {\n        ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\n        ctx.lineWidth = currentStyle.wi;\n        ctx.lineCap = currentStyle.lc;\n        ctx.lineJoin = currentStyle.lj;\n        ctx.miterLimit = currentStyle.ml || 0;\n      } else {\n        ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\n      }\n\n      renderer.ctxOpacity(currentStyle.coOp);\n\n      if (type !== 'st' && type !== 'gs') {\n        ctx.beginPath();\n      }\n\n      renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\n      jLen = elems.length;\n\n      for (j = 0; j < jLen; j += 1) {\n        if (type === 'st' || type === 'gs') {\n          ctx.beginPath();\n\n          if (currentStyle.da) {\n            ctx.setLineDash(currentStyle.da);\n            ctx.lineDashOffset = currentStyle.do;\n          }\n        }\n\n        nodes = elems[j].trNodes;\n        kLen = nodes.length;\n\n        for (k = 0; k < kLen; k += 1) {\n          if (nodes[k].t == 'm') {\n            ctx.moveTo(nodes[k].p[0], nodes[k].p[1]);\n          } else if (nodes[k].t == 'c') {\n            ctx.bezierCurveTo(nodes[k].pts[0], nodes[k].pts[1], nodes[k].pts[2], nodes[k].pts[3], nodes[k].pts[4], nodes[k].pts[5]);\n          } else {\n            ctx.closePath();\n          }\n        }\n\n        if (type === 'st' || type === 'gs') {\n          ctx.stroke();\n\n          if (currentStyle.da) {\n            ctx.setLineDash(this.dashResetter);\n          }\n        }\n      }\n\n      if (type !== 'st' && type !== 'gs') {\n        ctx.fill(currentStyle.r);\n      }\n\n      renderer.restore();\n    }\n  };\n\n  CVShapeElement.prototype.renderShape = function (parentTransform, items, data, isMain) {\n    var i,\n        len = items.length - 1;\n    var groupTransform;\n    groupTransform = parentTransform;\n\n    for (i = len; i >= 0; i -= 1) {\n      if (items[i].ty == 'tr') {\n        groupTransform = data[i].transform;\n        this.renderShapeTransform(parentTransform, groupTransform);\n      } else if (items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr') {\n        this.renderPath(items[i], data[i]);\n      } else if (items[i].ty == 'fl') {\n        this.renderFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty == 'st') {\n        this.renderStroke(items[i], data[i], groupTransform);\n      } else if (items[i].ty == 'gf' || items[i].ty == 'gs') {\n        this.renderGradientFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty == 'gr') {\n        this.renderShape(groupTransform, items[i].it, data[i].it);\n      } else if (items[i].ty == 'tm') {//\n      }\n    }\n\n    if (isMain) {\n      this.drawLayer();\n    }\n  };\n\n  CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {\n    if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\n      var shapeNodes = styledShape.trNodes;\n      var paths = shape.paths;\n      var i,\n          len,\n          j,\n          jLen = paths._length;\n      shapeNodes.length = 0;\n      var groupTransformMat = styledShape.transforms.finalTransform;\n\n      for (j = 0; j < jLen; j += 1) {\n        var pathNodes = paths.shapes[j];\n\n        if (pathNodes && pathNodes.v) {\n          len = pathNodes._length;\n\n          for (i = 1; i < len; i += 1) {\n            if (i === 1) {\n              shapeNodes.push({\n                t: 'm',\n                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n              });\n            }\n\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\n            });\n          }\n\n          if (len === 1) {\n            shapeNodes.push({\n              t: 'm',\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n            });\n          }\n\n          if (pathNodes.c && len) {\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\n            });\n            shapeNodes.push({\n              t: 'z'\n            });\n          }\n        }\n      }\n\n      styledShape.trNodes = shapeNodes;\n    }\n  };\n\n  CVShapeElement.prototype.renderPath = function (pathData, itemData) {\n    if (pathData.hd !== true && pathData._shouldRender) {\n      var i,\n          len = itemData.styledShapes.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\n      }\n    }\n  };\n\n  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n  };\n\n  CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n\n    if (!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf)) {\n      var ctx = this.globalData.canvasContext;\n      var grd;\n      var pt1 = itemData.s.v,\n          pt2 = itemData.e.v;\n\n      if (styleData.t === 1) {\n        grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\n      } else {\n        var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n        var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99 : itemData.h.v;\n        var dist = rad * percent;\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n        var grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\n      }\n\n      var i,\n          len = styleData.g.p;\n      var cValues = itemData.g.c;\n      var opacity = 1;\n\n      for (i = 0; i < len; i += 1) {\n        if (itemData.g._hasOpacity && itemData.g._collapsable) {\n          opacity = itemData.g.o[i * 2 + 1];\n        }\n\n        grd.addColorStop(cValues[i * 4] / 100, 'rgba(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ',' + opacity + ')');\n      }\n\n      styleElem.grd = grd;\n    }\n\n    styleElem.coOp = itemData.o.v * groupTransform.opacity;\n  };\n\n  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var d = itemData.d;\n\n    if (d && (d._mdf || this._isFirstFrame)) {\n      styleElem.da = d.dashArray;\n      styleElem.do = d.dashoffset[0];\n    }\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n\n    if (itemData.w._mdf || this._isFirstFrame) {\n      styleElem.wi = itemData.w.v;\n    }\n  };\n\n  CVShapeElement.prototype.destroy = function () {\n    this.shapesData = null;\n    this.globalData = null;\n    this.canvasContext = null;\n    this.stylesList.length = 0;\n    this.itemsData.length = 0;\n  };\n\n  function CVSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\n  CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n\n  CVSolidElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.fillStyle = this.data.sc;\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh); //\n  };\n\n  function CVTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.yOffset = 0;\n    this.fillColorAnim = false;\n    this.strokeColorAnim = false;\n    this.strokeWidthAnim = false;\n    this.stroke = false;\n    this.fill = false;\n    this.justifyOffset = 0;\n    this.currentRender = null;\n    this.renderType = 'canvas';\n    this.values = {\n      fill: 'rgba(0,0,0,0)',\n      stroke: 'rgba(0,0,0,0)',\n      sWidth: 0,\n      fValue: ''\n    };\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement);\n  CVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\n\n  CVTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var hasFill = false;\n\n    if (documentData.fc) {\n      hasFill = true;\n      this.values.fill = this.buildColor(documentData.fc);\n    } else {\n      this.values.fill = 'rgba(0,0,0,0)';\n    }\n\n    this.fill = hasFill;\n    var hasStroke = false;\n\n    if (documentData.sc) {\n      hasStroke = true;\n      this.values.stroke = this.buildColor(documentData.sc);\n      this.values.sWidth = documentData.sw;\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n    var i, len;\n    var letters = documentData.l;\n    var matrixHelper = this.mHelper;\n    this.stroke = hasStroke;\n    this.values.fValue = documentData.finalSize + 'px ' + this.globalData.fontManager.getFontByName(documentData.f).fFamily;\n    len = documentData.finalText.length; //this.tHelper.font = this.values.fValue;\n\n    var charData,\n        shapeData,\n        k,\n        kLen,\n        shapes,\n        j,\n        jLen,\n        pathNodes,\n        commands,\n        pathArr,\n        singleShape = this.data.singleShape;\n    var trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n    var xPos = 0,\n        yPos = 0,\n        firstLine = true;\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n      shapeData = charData && charData.data || {};\n      matrixHelper.reset();\n\n      if (singleShape && letters[i].n) {\n        xPos = -trackingOffset;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        firstLine = false;\n      }\n\n      shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\n      jLen = shapes.length;\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n\n      if (singleShape) {\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n      }\n\n      commands = createSizedArray(jLen);\n\n      for (j = 0; j < jLen; j += 1) {\n        kLen = shapes[j].ks.k.i.length;\n        pathNodes = shapes[j].ks.k;\n        pathArr = [];\n\n        for (k = 1; k < kLen; k += 1) {\n          if (k == 1) {\n            pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n          }\n\n          pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0), matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0));\n        }\n\n        pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n        commands[j] = pathArr;\n      }\n\n      if (singleShape) {\n        xPos += letters[i].l;\n        xPos += trackingOffset;\n      }\n\n      if (this.textSpans[cnt]) {\n        this.textSpans[cnt].elem = commands;\n      } else {\n        this.textSpans[cnt] = {\n          elem: commands\n        };\n      }\n\n      cnt += 1;\n    }\n  };\n\n  CVTextElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    var finalMat = this.finalTransform.mat.props;\n    ctx.font = this.values.fValue;\n    ctx.lineCap = 'butt';\n    ctx.lineJoin = 'miter';\n    ctx.miterLimit = 4;\n\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n    }\n\n    var i, len, j, jLen, k, kLen;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var lastFill = null,\n        lastStroke = null,\n        lastStrokeW = null,\n        commands,\n        pathArr;\n\n    for (i = 0; i < len; i += 1) {\n      if (letters[i].n) {\n        continue;\n      }\n\n      renderedLetter = renderedLetters[i];\n\n      if (renderedLetter) {\n        this.globalData.renderer.save();\n        this.globalData.renderer.ctxTransform(renderedLetter.p);\n        this.globalData.renderer.ctxOpacity(renderedLetter.o);\n      }\n\n      if (this.fill) {\n        if (renderedLetter && renderedLetter.fc) {\n          if (lastFill !== renderedLetter.fc) {\n            lastFill = renderedLetter.fc;\n            ctx.fillStyle = renderedLetter.fc;\n          }\n        } else if (lastFill !== this.values.fill) {\n          lastFill = this.values.fill;\n          ctx.fillStyle = this.values.fill;\n        }\n\n        commands = this.textSpans[i].elem;\n        jLen = commands.length;\n        this.globalData.canvasContext.beginPath();\n\n        for (j = 0; j < jLen; j += 1) {\n          pathArr = commands[j];\n          kLen = pathArr.length;\n          this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n          for (k = 2; k < kLen; k += 6) {\n            this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n          }\n        }\n\n        this.globalData.canvasContext.closePath();\n        this.globalData.canvasContext.fill(); ///ctx.fillText(this.textSpans[i].val,0,0);\n      }\n\n      if (this.stroke) {\n        if (renderedLetter && renderedLetter.sw) {\n          if (lastStrokeW !== renderedLetter.sw) {\n            lastStrokeW = renderedLetter.sw;\n            ctx.lineWidth = renderedLetter.sw;\n          }\n        } else if (lastStrokeW !== this.values.sWidth) {\n          lastStrokeW = this.values.sWidth;\n          ctx.lineWidth = this.values.sWidth;\n        }\n\n        if (renderedLetter && renderedLetter.sc) {\n          if (lastStroke !== renderedLetter.sc) {\n            lastStroke = renderedLetter.sc;\n            ctx.strokeStyle = renderedLetter.sc;\n          }\n        } else if (lastStroke !== this.values.stroke) {\n          lastStroke = this.values.stroke;\n          ctx.strokeStyle = this.values.stroke;\n        }\n\n        commands = this.textSpans[i].elem;\n        jLen = commands.length;\n        this.globalData.canvasContext.beginPath();\n\n        for (j = 0; j < jLen; j += 1) {\n          pathArr = commands[j];\n          kLen = pathArr.length;\n          this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n          for (k = 2; k < kLen; k += 6) {\n            this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n          }\n        }\n\n        this.globalData.canvasContext.closePath();\n        this.globalData.canvasContext.stroke(); ///ctx.strokeText(letters[i].val,0,0);\n      }\n\n      if (renderedLetter) {\n        this.globalData.renderer.restore();\n      }\n    }\n  };\n\n  function CVEffects() {}\n\n  CVEffects.prototype.renderFrame = function () {};\n\n  function HBaseElement(data, globalData, comp) {}\n\n  HBaseElement.prototype = {\n    checkBlendMode: function checkBlendMode() {},\n    initRendererElement: function initRendererElement() {\n      this.baseElement = createTag(this.data.tg || 'div');\n\n      if (this.data.hasMask) {\n        this.svgElement = createNS('svg');\n        this.layerElement = createNS('g');\n        this.maskedElement = this.layerElement;\n        this.svgElement.appendChild(this.layerElement);\n        this.baseElement.appendChild(this.svgElement);\n      } else {\n        this.layerElement = this.baseElement;\n      }\n\n      styleDiv(this.baseElement);\n    },\n    createContainerElements: function createContainerElements() {\n      this.renderableEffectsManager = new CVEffects(this);\n      this.transformedElement = this.baseElement;\n      this.maskedElement = this.layerElement;\n\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln);\n      }\n\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl);\n      }\n\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function renderElement() {\n      if (this.finalTransform._matMdf) {\n        this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\n      }\n\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\n      }\n    },\n    renderFrame: function renderFrame() {\n      //If it is exported as hidden (data.hd === true) no need to render\n      //If it is not visible no need to render\n      if (this.data.hd || this.hidden) {\n        return;\n      }\n\n      this.renderTransform();\n      this.renderRenderable();\n      this.renderElement();\n      this.renderInnerContent();\n\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function destroy() {\n      this.layerElement = null;\n      this.transformedElement = null;\n\n      if (this.matteElement) {\n        this.matteElement = null;\n      }\n\n      if (this.maskManager) {\n        this.maskManager.destroy();\n        this.maskManager = null;\n      }\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n    },\n    addEffects: function addEffects() {},\n    setMatte: function setMatte() {}\n  };\n  HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\n  HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\n  HBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\n\n  function HSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement);\n\n  HSolidElement.prototype.createContent = function () {\n    var rect;\n\n    if (this.data.hasMask) {\n      rect = createNS('rect');\n      rect.setAttribute('width', this.data.sw);\n      rect.setAttribute('height', this.data.sh);\n      rect.setAttribute('fill', this.data.sc);\n      this.svgElement.setAttribute('width', this.data.sw);\n      this.svgElement.setAttribute('height', this.data.sh);\n    } else {\n      rect = createTag('div');\n      rect.style.width = this.data.sw + 'px';\n      rect.style.height = this.data.sh + 'px';\n      rect.style.backgroundColor = this.data.sc;\n    }\n\n    this.layerElement.appendChild(rect);\n  };\n\n  function HCompElement(data, globalData, comp) {\n    this.layers = data.layers;\n    this.supports3d = !data.hasMask;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\n  HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\n\n  HCompElement.prototype.createContainerElements = function () {\n    this._createBaseContainerElements(); //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\n\n\n    if (this.data.hasMask) {\n      this.svgElement.setAttribute('width', this.data.w);\n      this.svgElement.setAttribute('height', this.data.h);\n      this.transformedElement = this.baseElement;\n    } else {\n      this.transformedElement = this.layerElement;\n    }\n  };\n\n  HCompElement.prototype.addTo3dContainer = function (elem, pos) {\n    var j = 0;\n    var nextElement;\n\n    while (j < pos) {\n      if (this.elements[j] && this.elements[j].getBaseElement) {\n        nextElement = this.elements[j].getBaseElement();\n      }\n\n      j += 1;\n    }\n\n    if (nextElement) {\n      this.layerElement.insertBefore(elem, nextElement);\n    } else {\n      this.layerElement.appendChild(elem);\n    }\n  };\n\n  function HShapeElement(data, globalData, comp) {\n    //List of drawable elements\n    this.shapes = []; // Full shape data\n\n    this.shapesData = data.shapes; //List of styles that will be applied to shapes\n\n    this.stylesList = []; //List of modifiers that will be applied to shapes\n\n    this.shapeModifiers = []; //List of items in shape tree\n\n    this.itemsData = []; //List of items in previous shape tree\n\n    this.processedElements = []; // List of animated components\n\n    this.animatedContents = [];\n    this.shapesContainer = createNS('g');\n    this.initElement(data, globalData, comp); //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n\n    this.prevViewData = [];\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n  }\n\n  extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement);\n  HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\n\n  HShapeElement.prototype.createContent = function () {\n    var cont;\n    this.baseElement.style.fontSize = 0;\n\n    if (this.data.hasMask) {\n      this.layerElement.appendChild(this.shapesContainer);\n      cont = this.svgElement;\n    } else {\n      cont = createNS('svg');\n      var size = this.comp.data ? this.comp.data : this.globalData.compSize;\n      cont.setAttribute('width', size.w);\n      cont.setAttribute('height', size.h);\n      cont.appendChild(this.shapesContainer);\n      this.layerElement.appendChild(cont);\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], true);\n    this.filterUniqueShapes();\n    this.shapeCont = cont;\n  };\n\n  HShapeElement.prototype.getTransformedPoint = function (transformers, point) {\n    var i,\n        len = transformers.length;\n\n    for (i = 0; i < len; i += 1) {\n      point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\n    }\n\n    return point;\n  };\n\n  HShapeElement.prototype.calculateShapeBoundingBox = function (item, boundingBox) {\n    var shape = item.sh.v;\n    var transformers = item.transformers;\n    var i,\n        len = shape._length,\n        vPoint,\n        oPoint,\n        nextIPoint,\n        nextVPoint,\n        bounds;\n\n    if (len <= 1) {\n      return;\n    }\n\n    for (i = 0; i < len - 1; i += 1) {\n      vPoint = this.getTransformedPoint(transformers, shape.v[i]);\n      oPoint = this.getTransformedPoint(transformers, shape.o[i]);\n      nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\n      nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\n      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\n    }\n\n    if (shape.c) {\n      vPoint = this.getTransformedPoint(transformers, shape.v[i]);\n      oPoint = this.getTransformedPoint(transformers, shape.o[i]);\n      nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\n      nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\n      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\n    }\n  };\n\n  HShapeElement.prototype.checkBounds = function (vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\n    var bounds = this.shapeBoundingBox;\n    boundingBox.x = bm_min(bounds.left, boundingBox.x);\n    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\n    boundingBox.y = bm_min(bounds.top, boundingBox.y);\n    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\n  };\n\n  HShapeElement.prototype.shapeBoundingBox = {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  };\n  HShapeElement.prototype.tempBoundingBox = {\n    x: 0,\n    xMax: 0,\n    y: 0,\n    yMax: 0,\n    width: 0,\n    height: 0\n  };\n\n  HShapeElement.prototype.getBoundsOfCurve = function (p0, p1, p2, p3) {\n    var bounds = [[p0[0], p3[0]], [p0[1], p3[1]]];\n\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      c = 3 * p1[i] - 3 * p0[i];\n      b = b | 0;\n      a = a | 0;\n      c = c | 0;\n\n      if (a === 0) {\n        if (b === 0) {\n          continue;\n        }\n\n        t = -c / b;\n\n        if (0 < t && t < 1) {\n          bounds[i].push(this.calculateF(t, p0, p1, p2, p3, i));\n        }\n\n        continue;\n      }\n\n      b2ac = b * b - 4 * c * a;\n\n      if (b2ac < 0) {\n        continue;\n      }\n\n      t1 = (-b + bm_sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1, p0, p1, p2, p3, i));\n      t2 = (-b - bm_sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2, p0, p1, p2, p3, i));\n    }\n\n    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\n    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\n    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\n    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\n  };\n\n  HShapeElement.prototype.calculateF = function (t, p0, p1, p2, p3, i) {\n    return bm_pow(1 - t, 3) * p0[i] + 3 * bm_pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * bm_pow(t, 2) * p2[i] + bm_pow(t, 3) * p3[i];\n  };\n\n  HShapeElement.prototype.calculateBoundingBox = function (itemsData, boundingBox) {\n    var i,\n        len = itemsData.length,\n        path;\n\n    for (i = 0; i < len; i += 1) {\n      if (itemsData[i] && itemsData[i].sh) {\n        this.calculateShapeBoundingBox(itemsData[i], boundingBox);\n      } else if (itemsData[i] && itemsData[i].it) {\n        this.calculateBoundingBox(itemsData[i].it, boundingBox);\n      }\n    }\n  };\n\n  HShapeElement.prototype.currentBoxContains = function (box) {\n    return this.currentBBox.x <= box.x && this.currentBBox.y <= box.y && this.currentBBox.width + this.currentBBox.x >= box.x + box.width && this.currentBBox.height + this.currentBBox.y >= box.y + box.height;\n  };\n\n  HShapeElement.prototype.renderInnerContent = function () {\n    this._renderShapeFrame();\n\n    if (!this.hidden && (this._isFirstFrame || this._mdf)) {\n      var tempBoundingBox = this.tempBoundingBox;\n      var max = 999999;\n      tempBoundingBox.x = max;\n      tempBoundingBox.xMax = -max;\n      tempBoundingBox.y = max;\n      tempBoundingBox.yMax = -max;\n      this.calculateBoundingBox(this.itemsData, tempBoundingBox);\n      tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\n      tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y; //var tempBoundingBox = this.shapeCont.getBBox();\n\n      if (this.currentBoxContains(tempBoundingBox)) {\n        return;\n      }\n\n      var changed = false;\n\n      if (this.currentBBox.w !== tempBoundingBox.width) {\n        this.currentBBox.w = tempBoundingBox.width;\n        this.shapeCont.setAttribute('width', tempBoundingBox.width);\n        changed = true;\n      }\n\n      if (this.currentBBox.h !== tempBoundingBox.height) {\n        this.currentBBox.h = tempBoundingBox.height;\n        this.shapeCont.setAttribute('height', tempBoundingBox.height);\n        changed = true;\n      }\n\n      if (changed || this.currentBBox.x !== tempBoundingBox.x || this.currentBBox.y !== tempBoundingBox.y) {\n        this.currentBBox.w = tempBoundingBox.width;\n        this.currentBBox.h = tempBoundingBox.height;\n        this.currentBBox.x = tempBoundingBox.x;\n        this.currentBBox.y = tempBoundingBox.y;\n        this.shapeCont.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n        this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n      }\n    }\n  };\n\n  function HTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.textPaths = [];\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n    this.renderType = 'svg';\n    this.isMasked = false;\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement);\n\n  HTextElement.prototype.createContent = function () {\n    this.isMasked = this.checkMasks();\n\n    if (this.isMasked) {\n      this.renderType = 'svg';\n      this.compW = this.comp.data.w;\n      this.compH = this.comp.data.h;\n      this.svgElement.setAttribute('width', this.compW);\n      this.svgElement.setAttribute('height', this.compH);\n      var g = createNS('g');\n      this.maskedElement.appendChild(g);\n      this.innerElem = g;\n    } else {\n      this.renderType = 'html';\n      this.innerElem = this.layerElement;\n    }\n\n    this.checkParenting();\n  };\n\n  HTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var innerElemStyle = this.innerElem.style;\n    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\n\n    if (documentData.sc) {\n      innerElemStyle.stroke = this.buildColor(documentData.sc);\n      innerElemStyle.strokeWidth = documentData.sw + 'px';\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (!this.globalData.fontManager.chars) {\n      innerElemStyle.fontSize = documentData.finalSize + 'px';\n      innerElemStyle.lineHeight = documentData.finalSize + 'px';\n\n      if (fontData.fClass) {\n        this.innerElem.className = fontData.fClass;\n      } else {\n        innerElemStyle.fontFamily = fontData.fFamily;\n        var fWeight = documentData.fWeight,\n            fStyle = documentData.fStyle;\n        innerElemStyle.fontStyle = fStyle;\n        innerElemStyle.fontWeight = fWeight;\n      }\n    }\n\n    var i, len;\n    var letters = documentData.l;\n    len = letters.length;\n    var tSpan, tParent, tCont;\n    var matrixHelper = this.mHelper;\n    var shapes,\n        shapeStr = '';\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.globalData.fontManager.chars) {\n        if (!this.textPaths[cnt]) {\n          tSpan = createNS('path');\n          tSpan.setAttribute('stroke-linecap', 'butt');\n          tSpan.setAttribute('stroke-linejoin', 'round');\n          tSpan.setAttribute('stroke-miterlimit', '4');\n        } else {\n          tSpan = this.textPaths[cnt];\n        }\n\n        if (!this.isMasked) {\n          if (this.textSpans[cnt]) {\n            tParent = this.textSpans[cnt];\n            tCont = tParent.children[0];\n          } else {\n            tParent = createTag('div');\n            tParent.style.lineHeight = 0;\n            tCont = createNS('svg');\n            tCont.appendChild(tSpan);\n            styleDiv(tParent);\n          }\n        }\n      } else {\n        if (!this.isMasked) {\n          if (this.textSpans[cnt]) {\n            tParent = this.textSpans[cnt];\n            tSpan = this.textPaths[cnt];\n          } else {\n            tParent = createTag('span');\n            styleDiv(tParent);\n            tSpan = createTag('span');\n            styleDiv(tSpan);\n            tParent.appendChild(tSpan);\n          }\n        } else {\n          tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\n        }\n      } //tSpan.setAttribute('visibility', 'hidden');\n\n\n      if (this.globalData.fontManager.chars) {\n        var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n        var shapeData;\n\n        if (charData) {\n          shapeData = charData.data;\n        } else {\n          shapeData = null;\n        }\n\n        matrixHelper.reset();\n\n        if (shapeData && shapeData.shapes) {\n          shapes = shapeData.shapes[0].it;\n          matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n          shapeStr = this.createPathShape(matrixHelper, shapes);\n          tSpan.setAttribute('d', shapeStr);\n        }\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent);\n\n          if (shapeData && shapeData.shapes) {\n            //document.body.appendChild is needed to get exact measure of shape\n            document.body.appendChild(tCont);\n            var boundingBox = tCont.getBBox();\n            tCont.setAttribute('width', boundingBox.width + 2);\n            tCont.setAttribute('height', boundingBox.height + 2);\n            tCont.setAttribute('viewBox', boundingBox.x - 1 + ' ' + (boundingBox.y - 1) + ' ' + (boundingBox.width + 2) + ' ' + (boundingBox.height + 2));\n            tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x - 1) + 'px,' + (boundingBox.y - 1) + 'px)';\n            letters[i].yOffset = boundingBox.y - 1;\n          } else {\n            tCont.setAttribute('width', 1);\n            tCont.setAttribute('height', 1);\n          }\n\n          tParent.appendChild(tCont);\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } else {\n        tSpan.textContent = letters[i].val;\n        tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent); //\n\n          tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,' + -documentData.finalSize / 1.2 + 'px,0)';\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } //\n\n\n      if (!this.isMasked) {\n        this.textSpans[cnt] = tParent;\n      } else {\n        this.textSpans[cnt] = tSpan;\n      }\n\n      this.textSpans[cnt].style.display = 'block';\n      this.textPaths[cnt] = tSpan;\n      cnt += 1;\n    }\n\n    while (cnt < this.textSpans.length) {\n      this.textSpans[cnt].style.display = 'none';\n      cnt += 1;\n    }\n  };\n\n  HTextElement.prototype.renderInnerContent = function () {\n    if (this.data.singleShape) {\n      if (!this._isFirstFrame && !this.lettersChangedFlag) {\n        return;\n      } else {\n        // Todo Benchmark if using this is better than getBBox\n        if (this.isMasked && this.finalTransform._matMdf) {\n          this.svgElement.setAttribute('viewBox', -this.finalTransform.mProp.p.v[0] + ' ' + -this.finalTransform.mProp.p.v[1] + ' ' + this.compW + ' ' + this.compH);\n          this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\n        }\n      }\n    }\n\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n    if (!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag) {\n      return;\n    }\n\n    var i,\n        len,\n        count = 0;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter, textSpan, textPath;\n\n    for (i = 0; i < len; i += 1) {\n      if (letters[i].n) {\n        count += 1;\n        continue;\n      }\n\n      textSpan = this.textSpans[i];\n      textPath = this.textPaths[i];\n      renderedLetter = renderedLetters[count];\n      count += 1;\n\n      if (renderedLetter._mdf.m) {\n        if (!this.isMasked) {\n          textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\n        } else {\n          textSpan.setAttribute('transform', renderedLetter.m);\n        }\n      } ////textSpan.setAttribute('opacity',renderedLetter.o);\n\n\n      textSpan.style.opacity = renderedLetter.o;\n\n      if (renderedLetter.sw && renderedLetter._mdf.sw) {\n        textPath.setAttribute('stroke-width', renderedLetter.sw);\n      }\n\n      if (renderedLetter.sc && renderedLetter._mdf.sc) {\n        textPath.setAttribute('stroke', renderedLetter.sc);\n      }\n\n      if (renderedLetter.fc && renderedLetter._mdf.fc) {\n        textPath.setAttribute('fill', renderedLetter.fc);\n        textPath.style.color = renderedLetter.fc;\n      }\n    }\n\n    if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {\n      var boundingBox = this.innerElem.getBBox();\n\n      if (this.currentBBox.w !== boundingBox.width) {\n        this.currentBBox.w = boundingBox.width;\n        this.svgElement.setAttribute('width', boundingBox.width);\n      }\n\n      if (this.currentBBox.h !== boundingBox.height) {\n        this.currentBBox.h = boundingBox.height;\n        this.svgElement.setAttribute('height', boundingBox.height);\n      }\n\n      var margin = 1;\n\n      if (this.currentBBox.w !== boundingBox.width + margin * 2 || this.currentBBox.h !== boundingBox.height + margin * 2 || this.currentBBox.x !== boundingBox.x - margin || this.currentBBox.y !== boundingBox.y - margin) {\n        this.currentBBox.w = boundingBox.width + margin * 2;\n        this.currentBBox.h = boundingBox.height + margin * 2;\n        this.currentBBox.x = boundingBox.x - margin;\n        this.currentBBox.y = boundingBox.y - margin;\n        this.svgElement.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n        this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n      }\n    }\n  };\n\n  function HImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement);\n\n  HImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    var img = new Image();\n\n    if (this.data.hasMask) {\n      this.imageElem = createNS('image');\n      this.imageElem.setAttribute('width', this.assetData.w + \"px\");\n      this.imageElem.setAttribute('height', this.assetData.h + \"px\");\n      this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n      this.layerElement.appendChild(this.imageElem);\n      this.baseElement.setAttribute('width', this.assetData.w);\n      this.baseElement.setAttribute('height', this.assetData.h);\n    } else {\n      this.layerElement.appendChild(img);\n    }\n\n    img.src = assetPath;\n\n    if (this.data.ln) {\n      this.baseElement.setAttribute('id', this.data.ln);\n    }\n  };\n\n  function HCameraElement(data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initHierarchy();\n    var getProp = PropertyFactory.getProp;\n    this.pe = getProp(this, data.pe, 0, 0, this);\n\n    if (data.ks.p.s) {\n      this.px = getProp(this, data.ks.p.x, 1, 0, this);\n      this.py = getProp(this, data.ks.p.y, 1, 0, this);\n      this.pz = getProp(this, data.ks.p.z, 1, 0, this);\n    } else {\n      this.p = getProp(this, data.ks.p, 1, 0, this);\n    }\n\n    if (data.ks.a) {\n      this.a = getProp(this, data.ks.a, 1, 0, this);\n    }\n\n    if (data.ks.or.k.length && data.ks.or.k[0].to) {\n      var i,\n          len = data.ks.or.k.length;\n\n      for (i = 0; i < len; i += 1) {\n        data.ks.or.k[i].to = null;\n        data.ks.or.k[i].ti = null;\n      }\n    }\n\n    this.or = getProp(this, data.ks.or, 1, degToRads, this);\n    this.or.sh = true;\n    this.rx = getProp(this, data.ks.rx, 0, degToRads, this);\n    this.ry = getProp(this, data.ks.ry, 0, degToRads, this);\n    this.rz = getProp(this, data.ks.rz, 0, degToRads, this);\n    this.mat = new Matrix();\n    this._prevMat = new Matrix();\n    this._isFirstFrame = true; // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\n\n    this.finalTransform = {\n      mProp: this\n    };\n  }\n\n  extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\n\n  HCameraElement.prototype.setup = function () {\n    var i,\n        len = this.comp.threeDElements.length,\n        comp;\n\n    for (i = 0; i < len; i += 1) {\n      //[perspectiveElem,container]\n      comp = this.comp.threeDElements[i];\n\n      if (comp.type === '3d') {\n        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v + 'px';\n        comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\n        comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n      }\n    }\n  };\n\n  HCameraElement.prototype.createElements = function () {};\n\n  HCameraElement.prototype.hide = function () {};\n\n  HCameraElement.prototype.renderFrame = function () {\n    var _mdf = this._isFirstFrame;\n    var i, len;\n\n    if (this.hierarchy) {\n      len = this.hierarchy.length;\n\n      for (i = 0; i < len; i += 1) {\n        _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\n      }\n    }\n\n    if (_mdf || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {\n      this.mat.reset();\n\n      if (this.hierarchy) {\n        var mat;\n        len = this.hierarchy.length - 1;\n\n        for (i = len; i >= 0; i -= 1) {\n          /*mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n          console.log(mat)\r\n          this.mat.transform(-mat[0],-mat[1],-mat[2],-mat[3],-mat[4],-mat[5],-mat[6],-mat[7],-mat[8],-mat[9],-mat[10],-mat[11],-mat[12],-mat[13],-mat[14],mat[15]);\r\n          console.log(this.mat.props)*/\n          var mTransf = this.hierarchy[i].finalTransform.mProp;\n          this.mat.translate(-mTransf.p.v[0], -mTransf.p.v[1], mTransf.p.v[2]);\n          this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\n          this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\n          this.mat.scale(1 / mTransf.s.v[0], 1 / mTransf.s.v[1], 1 / mTransf.s.v[2]);\n          this.mat.translate(mTransf.a.v[0], mTransf.a.v[1], mTransf.a.v[2]);\n        }\n      }\n\n      if (this.p) {\n        this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]);\n      } else {\n        this.mat.translate(-this.px.v, -this.py.v, this.pz.v);\n      }\n\n      if (this.a) {\n        var diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];\n        var mag = Math.sqrt(Math.pow(diffVector[0], 2) + Math.pow(diffVector[1], 2) + Math.pow(diffVector[2], 2)); //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\n\n        var lookDir = [diffVector[0] / mag, diffVector[1] / mag, diffVector[2] / mag];\n        var lookLengthOnXZ = Math.sqrt(lookDir[2] * lookDir[2] + lookDir[0] * lookDir[0]);\n        var m_rotationX = Math.atan2(lookDir[1], lookLengthOnXZ);\n        var m_rotationY = Math.atan2(lookDir[0], -lookDir[2]);\n        this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\n      }\n\n      this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\n      this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\n      this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0);\n      this.mat.translate(0, 0, this.pe.v);\n      var hasMatrixChanged = !this._prevMat.equals(this.mat);\n\n      if ((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\n        len = this.comp.threeDElements.length;\n        var comp;\n\n        for (i = 0; i < len; i += 1) {\n          comp = this.comp.threeDElements[i];\n\n          if (comp.type === '3d') {\n            if (hasMatrixChanged) {\n              comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\n            }\n\n            if (this.pe._mdf) {\n              comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v + 'px';\n            }\n          }\n        }\n\n        this.mat.clone(this._prevMat);\n      }\n    }\n\n    this._isFirstFrame = false;\n  };\n\n  HCameraElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n\n  HCameraElement.prototype.destroy = function () {};\n\n  HCameraElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  function HEffects() {}\n\n  HEffects.prototype.renderFrame = function () {};\n\n  var animationManager = function () {\n    var moduleOb = {};\n    var registeredAnimations = [];\n    var initTime = 0;\n    var len = 0;\n    var playingAnimationsNum = 0;\n    var _stopped = true;\n    var _isFrozen = false;\n\n    function removeElement(ev) {\n      var i = 0;\n      var animItem = ev.target;\n\n      while (i < len) {\n        if (registeredAnimations[i].animation === animItem) {\n          registeredAnimations.splice(i, 1);\n          i -= 1;\n          len -= 1;\n\n          if (!animItem.isPaused) {\n            subtractPlayingCount();\n          }\n        }\n\n        i += 1;\n      }\n    }\n\n    function registerAnimation(element, animationData) {\n      if (!element) {\n        return null;\n      }\n\n      var i = 0;\n\n      while (i < len) {\n        if (registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null) {\n          return registeredAnimations[i].animation;\n        }\n\n        i += 1;\n      }\n\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, element);\n      animItem.setData(element, animationData);\n      return animItem;\n    }\n\n    function getRegisteredAnimations() {\n      var i,\n          len = registeredAnimations.length;\n      var animations = [];\n\n      for (i = 0; i < len; i += 1) {\n        animations.push(registeredAnimations[i].animation);\n      }\n\n      return animations;\n    }\n\n    function addPlayingCount() {\n      playingAnimationsNum += 1;\n      activate();\n    }\n\n    function subtractPlayingCount() {\n      playingAnimationsNum -= 1;\n    }\n\n    function setupAnimation(animItem, element) {\n      animItem.addEventListener('destroy', removeElement);\n      animItem.addEventListener('_active', addPlayingCount);\n      animItem.addEventListener('_idle', subtractPlayingCount);\n      registeredAnimations.push({\n        elem: element,\n        animation: animItem\n      });\n      len += 1;\n    }\n\n    function loadAnimation(params) {\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, null);\n      animItem.setParams(params);\n      return animItem;\n    }\n\n    function setSpeed(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setSpeed(val, animation);\n      }\n    }\n\n    function setDirection(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setDirection(val, animation);\n      }\n    }\n\n    function play(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.play(animation);\n      }\n    }\n\n    function resume(nowTime) {\n      var elapsedTime = nowTime - initTime;\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.advanceTime(elapsedTime);\n      }\n\n      initTime = nowTime;\n\n      if (playingAnimationsNum && !_isFrozen) {\n        window.requestAnimationFrame(resume);\n      } else {\n        _stopped = true;\n      }\n    }\n\n    function first(nowTime) {\n      initTime = nowTime;\n      window.requestAnimationFrame(resume);\n    }\n\n    function pause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.pause(animation);\n      }\n    }\n\n    function goToAndStop(value, isFrame, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);\n      }\n    }\n\n    function stop(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.stop(animation);\n      }\n    }\n\n    function togglePause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.togglePause(animation);\n      }\n    }\n\n    function destroy(animation) {\n      var i;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        registeredAnimations[i].animation.destroy(animation);\n      }\n    }\n\n    function searchAnimations(animationData, standalone, renderer) {\n      var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')), [].slice.call(document.getElementsByClassName('bodymovin')));\n      var i,\n          len = animElements.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (renderer) {\n          animElements[i].setAttribute('data-bm-type', renderer);\n        }\n\n        registerAnimation(animElements[i], animationData);\n      }\n\n      if (standalone && len === 0) {\n        if (!renderer) {\n          renderer = 'svg';\n        }\n\n        var body = document.getElementsByTagName('body')[0];\n        body.innerHTML = '';\n        var div = createTag('div');\n        div.style.width = '100%';\n        div.style.height = '100%';\n        div.setAttribute('data-bm-type', renderer);\n        body.appendChild(div);\n        registerAnimation(div, animationData);\n      }\n    }\n\n    function resize() {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.resize();\n      }\n    }\n\n    function activate() {\n      if (!_isFrozen && playingAnimationsNum) {\n        if (_stopped) {\n          window.requestAnimationFrame(first);\n          _stopped = false;\n        }\n      }\n    }\n\n    function freeze() {\n      _isFrozen = true;\n    }\n\n    function unfreeze() {\n      _isFrozen = false;\n      activate();\n    }\n\n    moduleOb.registerAnimation = registerAnimation;\n    moduleOb.loadAnimation = loadAnimation;\n    moduleOb.setSpeed = setSpeed;\n    moduleOb.setDirection = setDirection;\n    moduleOb.play = play;\n    moduleOb.pause = pause;\n    moduleOb.stop = stop;\n    moduleOb.togglePause = togglePause;\n    moduleOb.searchAnimations = searchAnimations;\n    moduleOb.resize = resize; //moduleOb.start = start;\n\n    moduleOb.goToAndStop = goToAndStop;\n    moduleOb.destroy = destroy;\n    moduleOb.freeze = freeze;\n    moduleOb.unfreeze = unfreeze;\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\n    return moduleOb;\n  }();\n\n  var AnimationItem = function AnimationItem() {\n    this._cbs = [];\n    this.name = '';\n    this.path = '';\n    this.isLoaded = false;\n    this.currentFrame = 0;\n    this.currentRawFrame = 0;\n    this.totalFrames = 0;\n    this.frameRate = 0;\n    this.frameMult = 0;\n    this.playSpeed = 1;\n    this.playDirection = 1;\n    this.playCount = 0;\n    this.animationData = {};\n    this.assets = [];\n    this.isPaused = true;\n    this.autoplay = false;\n    this.loop = true;\n    this.renderer = null;\n    this.animationID = createElementID();\n    this.assetsPath = '';\n    this.timeCompleted = 0;\n    this.segmentPos = 0;\n    this.subframeEnabled = subframeEnabled;\n    this.segments = [];\n    this._idle = true;\n    this._completedLoop = false;\n    this.projectInterface = ProjectInterface();\n    this.imagePreloader = new ImagePreloader();\n  };\n\n  extendPrototype([BaseEvent], AnimationItem);\n\n  AnimationItem.prototype.setParams = function (params) {\n    if (params.context) {\n      this.context = params.context;\n    }\n\n    if (params.wrapper || params.container) {\n      this.wrapper = params.wrapper || params.container;\n    }\n\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\n\n    switch (animType) {\n      case 'canvas':\n        this.renderer = new CanvasRenderer(this, params.rendererSettings);\n        break;\n\n      case 'svg':\n        this.renderer = new SVGRenderer(this, params.rendererSettings);\n        break;\n\n      default:\n        this.renderer = new HybridRenderer(this, params.rendererSettings);\n        break;\n    }\n\n    this.renderer.setProjectInterface(this.projectInterface);\n    this.animType = animType;\n\n    if (params.loop === '' || params.loop === null) {} else if (params.loop === false) {\n      this.loop = false;\n    } else if (params.loop === true) {\n      this.loop = true;\n    } else {\n      this.loop = parseInt(params.loop);\n    }\n\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\n    this.name = params.name ? params.name : '';\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments : true;\n    this.assetsPath = params.assetsPath;\n\n    if (params.animationData) {\n      this.configAnimation(params.animationData);\n    } else if (params.path) {\n      if (params.path.substr(-4) != 'json') {\n        if (params.path.substr(-1, 1) != '/') {\n          params.path += '/';\n        }\n\n        params.path += 'data.json';\n      }\n\n      if (params.path.lastIndexOf('\\\\') != -1) {\n        this.path = params.path.substr(0, params.path.lastIndexOf('\\\\') + 1);\n      } else {\n        this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1);\n      }\n\n      this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1);\n      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'));\n      assetLoader.load(params.path, this.configAnimation.bind(this), function () {\n        this.trigger('data_failed');\n      }.bind(this));\n    }\n  };\n\n  AnimationItem.prototype.setData = function (wrapper, animationData) {\n    var params = {\n      wrapper: wrapper,\n      animationData: animationData ? typeof animationData === \"object\" ? animationData : JSON.parse(animationData) : null\n    };\n    var wrapperAttributes = wrapper.attributes;\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value : wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value : wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value : wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value : wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\n\n    if (loop === '') {} else if (loop === 'false') {\n      params.loop = false;\n    } else if (loop === 'true') {\n      params.loop = true;\n    } else {\n      params.loop = parseInt(loop);\n    }\n\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value : wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value : wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\n    params.autoplay = autoplay !== \"false\";\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value : wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value : '';\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value : wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value : wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\n\n    if (prerender === 'false') {\n      params.prerender = false;\n    }\n\n    this.setParams(params);\n  };\n\n  AnimationItem.prototype.includeLayers = function (data) {\n    if (data.op > this.animationData.op) {\n      this.animationData.op = data.op;\n      this.totalFrames = Math.floor(data.op - this.animationData.ip);\n    }\n\n    var layers = this.animationData.layers;\n    var i,\n        len = layers.length;\n    var newLayers = data.layers;\n    var j,\n        jLen = newLayers.length;\n\n    for (j = 0; j < jLen; j += 1) {\n      i = 0;\n\n      while (i < len) {\n        if (layers[i].id == newLayers[j].id) {\n          layers[i] = newLayers[j];\n          break;\n        }\n\n        i += 1;\n      }\n    }\n\n    if (data.chars || data.fonts) {\n      this.renderer.globalData.fontManager.addChars(data.chars);\n      this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\n    }\n\n    if (data.assets) {\n      len = data.assets.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.animationData.assets.push(data.assets[i]);\n      }\n    }\n\n    this.animationData.__complete = false;\n    dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\n    this.renderer.includeLayers(data.layers);\n\n    if (expressionsPlugin) {\n      expressionsPlugin.initExpressions(this);\n    }\n\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.loadNextSegment = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments || segments.length === 0 || !this.autoloadSegments) {\n      this.trigger('data_ready');\n      this.timeCompleted = this.totalFrames;\n      return;\n    }\n\n    var segment = segments.shift();\n    this.timeCompleted = segment.time * this.frameRate;\n    var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json';\n    this.segmentPos += 1;\n    assetLoader.load(segmentPath, this.includeLayers.bind(this), function () {\n      this.trigger('data_failed');\n    }.bind(this));\n  };\n\n  AnimationItem.prototype.loadSegments = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments) {\n      this.timeCompleted = this.totalFrames;\n    }\n\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.imagesLoaded = function () {\n    this.trigger('loaded_images');\n    this.checkLoaded();\n  };\n\n  AnimationItem.prototype.preloadImages = function () {\n    this.imagePreloader.setAssetsPath(this.assetsPath);\n    this.imagePreloader.setPath(this.path);\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\n  };\n\n  AnimationItem.prototype.configAnimation = function (animData) {\n    if (!this.renderer) {\n      return;\n    }\n\n    this.animationData = animData;\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\n    this.renderer.configAnimation(animData);\n\n    if (!animData.assets) {\n      animData.assets = [];\n    }\n\n    this.renderer.searchExtraCompositions(animData.assets);\n    this.assets = this.animationData.assets;\n    this.frameRate = this.animationData.fr;\n    this.firstFrame = Math.round(this.animationData.ip);\n    this.frameMult = this.animationData.fr / 1000;\n    this.trigger('config_ready');\n    this.preloadImages();\n    this.loadSegments();\n    this.updaFrameModifier();\n    this.waitForFontsLoaded();\n  };\n\n  AnimationItem.prototype.waitForFontsLoaded = function () {\n    if (!this.renderer) {\n      return;\n    }\n\n    if (this.renderer.globalData.fontManager.loaded()) {\n      this.checkLoaded();\n    } else {\n      setTimeout(this.waitForFontsLoaded.bind(this), 20);\n    }\n  };\n\n  AnimationItem.prototype.checkLoaded = function () {\n    if (!this.isLoaded && this.renderer.globalData.fontManager.loaded() && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')) {\n      this.isLoaded = true;\n      dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\n\n      if (expressionsPlugin) {\n        expressionsPlugin.initExpressions(this);\n      }\n\n      this.renderer.initItems();\n      setTimeout(function () {\n        this.trigger('DOMLoaded');\n      }.bind(this), 0);\n      this.gotoFrame();\n\n      if (this.autoplay) {\n        this.play();\n      }\n    }\n  };\n\n  AnimationItem.prototype.resize = function () {\n    this.renderer.updateContainerSize();\n  };\n\n  AnimationItem.prototype.setSubframe = function (flag) {\n    this.subframeEnabled = flag ? true : false;\n  };\n\n  AnimationItem.prototype.gotoFrame = function () {\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\n\n    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\n      this.currentFrame = this.timeCompleted;\n    }\n\n    this.trigger('enterFrame');\n    this.renderFrame();\n  };\n\n  AnimationItem.prototype.renderFrame = function () {\n    if (this.isLoaded === false) {\n      return;\n    }\n\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\n  };\n\n  AnimationItem.prototype.play = function (name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.isPaused = false;\n\n      if (this._idle) {\n        this._idle = false;\n        this.trigger('_active');\n      }\n    }\n  };\n\n  AnimationItem.prototype.pause = function (name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    if (this.isPaused === false) {\n      this.isPaused = true;\n      this._idle = true;\n      this.trigger('_idle');\n    }\n  };\n\n  AnimationItem.prototype.togglePause = function (name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n\n  AnimationItem.prototype.stop = function (name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    this.pause();\n    this.playCount = 0;\n    this._completedLoop = false;\n    this.setCurrentRawFrameValue(0);\n  };\n\n  AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    if (isFrame) {\n      this.setCurrentRawFrameValue(value);\n    } else {\n      this.setCurrentRawFrameValue(value * this.frameModifier);\n    }\n\n    this.pause();\n  };\n\n  AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\n    this.goToAndStop(value, isFrame, name);\n    this.play();\n  };\n\n  AnimationItem.prototype.advanceTime = function (value) {\n    if (this.isPaused === true || this.isLoaded === false) {\n      return;\n    }\n\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\n    var _isComplete = false; // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\n\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\n      if (!this.loop || this.playCount === this.loop) {\n        if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\n          _isComplete = true;\n          nextValue = this.totalFrames - 1;\n        }\n      } else if (nextValue >= this.totalFrames) {\n        this.playCount += 1;\n\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\n          this.setCurrentRawFrameValue(nextValue % this.totalFrames);\n          this._completedLoop = true;\n          this.trigger('loopComplete');\n        }\n      } else {\n        this.setCurrentRawFrameValue(nextValue);\n      }\n    } else if (nextValue < 0) {\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\n        if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\n          this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);\n\n          if (!this._completedLoop) {\n            this._completedLoop = true;\n          } else {\n            this.trigger('loopComplete');\n          }\n        } else {\n          _isComplete = true;\n          nextValue = 0;\n        }\n      }\n    } else {\n      this.setCurrentRawFrameValue(nextValue);\n    }\n\n    if (_isComplete) {\n      this.setCurrentRawFrameValue(nextValue);\n      this.pause();\n      this.trigger('complete');\n    }\n  };\n\n  AnimationItem.prototype.adjustSegment = function (arr, offset) {\n    this.playCount = 0;\n\n    if (arr[1] < arr[0]) {\n      if (this.frameModifier > 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(-1);\n        }\n      }\n\n      this.timeCompleted = this.totalFrames = arr[0] - arr[1];\n      this.firstFrame = arr[1];\n      this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\n    } else if (arr[1] > arr[0]) {\n      if (this.frameModifier < 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(1);\n        }\n      }\n\n      this.timeCompleted = this.totalFrames = arr[1] - arr[0];\n      this.firstFrame = arr[0];\n      this.setCurrentRawFrameValue(0.001 + offset);\n    }\n\n    this.trigger('segmentStart');\n  };\n\n  AnimationItem.prototype.setSegment = function (init, end) {\n    var pendingFrame = -1;\n\n    if (this.isPaused) {\n      if (this.currentRawFrame + this.firstFrame < init) {\n        pendingFrame = init;\n      } else if (this.currentRawFrame + this.firstFrame > end) {\n        pendingFrame = end - init;\n      }\n    }\n\n    this.firstFrame = init;\n    this.timeCompleted = this.totalFrames = end - init;\n\n    if (pendingFrame !== -1) {\n      this.goToAndStop(pendingFrame, true);\n    }\n  };\n\n  AnimationItem.prototype.playSegments = function (arr, forceFlag) {\n    if (forceFlag) {\n      this.segments.length = 0;\n    }\n\n    if (typeof arr[0] === 'object') {\n      var i,\n          len = arr.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.segments.push(arr[i]);\n      }\n    } else {\n      this.segments.push(arr);\n    }\n\n    if (this.segments.length && forceFlag) {\n      this.adjustSegment(this.segments.shift(), 0);\n    }\n\n    if (this.isPaused) {\n      this.play();\n    }\n  };\n\n  AnimationItem.prototype.resetSegments = function (forceFlag) {\n    this.segments.length = 0;\n    this.segments.push([this.animationData.ip, this.animationData.op]); //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\n\n    if (forceFlag) {\n      this.checkSegments(0);\n    }\n  };\n\n  AnimationItem.prototype.checkSegments = function (offset) {\n    if (this.segments.length) {\n      this.adjustSegment(this.segments.shift(), offset);\n      return true;\n    }\n\n    return false;\n  };\n\n  AnimationItem.prototype.destroy = function (name) {\n    if (name && this.name != name || !this.renderer) {\n      return;\n    }\n\n    this.renderer.destroy();\n    this.imagePreloader.destroy();\n    this.trigger('destroy');\n    this._cbs = null;\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\n    this.renderer = null;\n  };\n\n  AnimationItem.prototype.setCurrentRawFrameValue = function (value) {\n    this.currentRawFrame = value;\n    this.gotoFrame();\n  };\n\n  AnimationItem.prototype.setSpeed = function (val) {\n    this.playSpeed = val;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.setDirection = function (val) {\n    this.playDirection = val < 0 ? -1 : 1;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.updaFrameModifier = function () {\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\n  };\n\n  AnimationItem.prototype.getPath = function () {\n    return this.path;\n  };\n\n  AnimationItem.prototype.getAssetsPath = function (assetData) {\n    var path = '';\n\n    if (assetData.e) {\n      path = assetData.p;\n    } else if (this.assetsPath) {\n      var imagePath = assetData.p;\n\n      if (imagePath.indexOf('images/') !== -1) {\n        imagePath = imagePath.split('/')[1];\n      }\n\n      path = this.assetsPath + imagePath;\n    } else {\n      path = this.path;\n      path += assetData.u ? assetData.u : '';\n      path += assetData.p;\n    }\n\n    return path;\n  };\n\n  AnimationItem.prototype.getAssetData = function (id) {\n    var i = 0,\n        len = this.assets.length;\n\n    while (i < len) {\n      if (id == this.assets[i].id) {\n        return this.assets[i];\n      }\n\n      i += 1;\n    }\n  };\n\n  AnimationItem.prototype.hide = function () {\n    this.renderer.hide();\n  };\n\n  AnimationItem.prototype.show = function () {\n    this.renderer.show();\n  };\n\n  AnimationItem.prototype.getDuration = function (isFrame) {\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\n  };\n\n  AnimationItem.prototype.trigger = function (name) {\n    if (this._cbs && this._cbs[name]) {\n      switch (name) {\n        case 'enterFrame':\n          this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier));\n          break;\n\n        case 'loopComplete':\n          this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n          break;\n\n        case 'complete':\n          this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));\n          break;\n\n        case 'segmentStart':\n          this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n          break;\n\n        case 'destroy':\n          this.triggerEvent(name, new BMDestroyEvent(name, this));\n          break;\n\n        default:\n          this.triggerEvent(name);\n      }\n    }\n\n    if (name === 'enterFrame' && this.onEnterFrame) {\n      this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));\n    }\n\n    if (name === 'loopComplete' && this.onLoopComplete) {\n      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n    }\n\n    if (name === 'complete' && this.onComplete) {\n      this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));\n    }\n\n    if (name === 'segmentStart' && this.onSegmentStart) {\n      this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n    }\n\n    if (name === 'destroy' && this.onDestroy) {\n      this.onDestroy.call(this, new BMDestroyEvent(name, this));\n    }\n  };\n\n  var Expressions = function () {\n    var ob = {};\n    ob.initExpressions = initExpressions;\n\n    function initExpressions(animation) {\n      var stackCount = 0;\n      var registers = [];\n\n      function pushExpression() {\n        stackCount += 1;\n      }\n\n      function popExpression() {\n        stackCount -= 1;\n\n        if (stackCount === 0) {\n          releaseInstances();\n        }\n      }\n\n      function registerExpressionProperty(expression) {\n        if (registers.indexOf(expression) === -1) {\n          registers.push(expression);\n        }\n      }\n\n      function releaseInstances() {\n        var i,\n            len = registers.length;\n\n        for (i = 0; i < len; i += 1) {\n          registers[i].release();\n        }\n\n        registers.length = 0;\n      }\n\n      animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\n      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\n      animation.renderer.globalData.pushExpression = pushExpression;\n      animation.renderer.globalData.popExpression = popExpression;\n      animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\n    }\n\n    return ob;\n  }();\n\n  expressionsPlugin = Expressions;\n\n  var ExpressionManager = function () {\n    'use strict';\n\n    var ob = {};\n    var Math = BMMath;\n    var window = null;\n    var document = null;\n\n    function $bm_isInstanceOfArray(arr) {\n      return arr.constructor === Array || arr.constructor === Float32Array;\n    }\n\n    function isNumerable(tOfV, v) {\n      return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\n    }\n\n    function $bm_neg(a) {\n      var tOfA = typeof a;\n\n      if (tOfA === 'number' || tOfA === 'boolean' || a instanceof Number) {\n        return -a;\n      }\n\n      if ($bm_isInstanceOfArray(a)) {\n        var i,\n            lenA = a.length;\n        var retArr = [];\n\n        for (i = 0; i < lenA; i += 1) {\n          retArr[i] = -a[i];\n        }\n\n        return retArr;\n      }\n\n      if (a.propType) {\n        return a.v;\n      }\n    }\n\n    var easeInBez = BezierFactory.getBezierEasing(0.333, 0, .833, .833, 'easeIn').get;\n    var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, .667, 1, 'easeOut').get;\n    var easeInOutBez = BezierFactory.getBezierEasing(.33, 0, .667, 1, 'easeInOut').get;\n\n    function sum(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n\n      if (tOfA === 'string' || tOfB === 'string') {\n        return a + b;\n      }\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a + b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] = a[0] + b;\n        return a;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a + b[0];\n        return b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0,\n            lenA = a.length,\n            lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] + b[i];\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    var add = sum;\n\n    function sub(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        if (tOfA === 'string') {\n          a = parseInt(a);\n        }\n\n        if (tOfB === 'string') {\n          b = parseInt(b);\n        }\n\n        return a - b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] = a[0] - b;\n        return a;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a - b[0];\n        return b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0,\n            lenA = a.length,\n            lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] - b[i];\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    function mul(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      var arr;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a * b;\n      }\n\n      var i, len;\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] * b;\n        }\n\n        return arr;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a * b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function div(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      var arr;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a / b;\n      }\n\n      var i, len;\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] / b;\n        }\n\n        return arr;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a / b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function mod(a, b) {\n      if (typeof a === 'string') {\n        a = parseInt(a);\n      }\n\n      if (typeof b === 'string') {\n        b = parseInt(b);\n      }\n\n      return a % b;\n    }\n\n    var $bm_sum = sum;\n    var $bm_sub = sub;\n    var $bm_mul = mul;\n    var $bm_div = div;\n    var $bm_mod = mod;\n\n    function clamp(num, min, max) {\n      if (min > max) {\n        var mm = max;\n        max = min;\n        min = mm;\n      }\n\n      return Math.min(Math.max(num, min), max);\n    }\n\n    function radiansToDegrees(val) {\n      return val / degToRads;\n    }\n\n    var radians_to_degrees = radiansToDegrees;\n\n    function degreesToRadians(val) {\n      return val * degToRads;\n    }\n\n    var degrees_to_radians = radiansToDegrees;\n    var helperLengthArray = [0, 0, 0, 0, 0, 0];\n\n    function length(arr1, arr2) {\n      if (typeof arr1 === 'number' || arr1 instanceof Number) {\n        arr2 = arr2 || 0;\n        return Math.abs(arr1 - arr2);\n      }\n\n      if (!arr2) {\n        arr2 = helperLengthArray;\n      }\n\n      var i,\n          len = Math.min(arr1.length, arr2.length);\n      var addedLength = 0;\n\n      for (i = 0; i < len; i += 1) {\n        addedLength += Math.pow(arr2[i] - arr1[i], 2);\n      }\n\n      return Math.sqrt(addedLength);\n    }\n\n    function normalize(vec) {\n      return div(vec, length(vec));\n    }\n\n    function rgbToHsl(val) {\n      var r = val[0];\n      var g = val[1];\n      var b = val[2];\n      var max = Math.max(r, g, b),\n          min = Math.min(r, g, b);\n      var h,\n          s,\n          l = (max + min) / 2;\n\n      if (max == min) {\n        h = s = 0; // achromatic\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            h = (b - r) / d + 2;\n            break;\n\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n\n        h /= 6;\n      }\n\n      return [h, s, l, val[3]];\n    }\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n\n    function hslToRgb(val) {\n      var h = val[0];\n      var s = val[1];\n      var l = val[2];\n      var r, g, b;\n\n      if (s === 0) {\n        r = g = b = l; // achromatic\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n      }\n\n      return [r, g, b, val[3]];\n    }\n\n    function linear(t, tMin, tMax, value1, value2) {\n      if (value1 === undefined || value2 === undefined) {\n        value1 = tMin;\n        value2 = tMax;\n        tMin = 0;\n        tMax = 1;\n      }\n\n      if (tMax < tMin) {\n        var _tMin = tMax;\n        tMax = tMin;\n        tMin = _tMin;\n      }\n\n      if (t <= tMin) {\n        return value1;\n      } else if (t >= tMax) {\n        return value2;\n      }\n\n      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin);\n\n      if (!value1.length) {\n        return value1 + (value2 - value1) * perc;\n      }\n\n      var i,\n          len = value1.length;\n      var arr = createTypedArray('float32', len);\n\n      for (i = 0; i < len; i += 1) {\n        arr[i] = value1[i] + (value2[i] - value1[i]) * perc;\n      }\n\n      return arr;\n    }\n\n    function random(min, max) {\n      if (max === undefined) {\n        if (min === undefined) {\n          min = 0;\n          max = 1;\n        } else {\n          max = min;\n          min = undefined;\n        }\n      }\n\n      if (max.length) {\n        var i,\n            len = max.length;\n\n        if (!min) {\n          min = createTypedArray('float32', len);\n        }\n\n        var arr = createTypedArray('float32', len);\n        var rnd = BMMath.random();\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = min[i] + rnd * (max[i] - min[i]);\n        }\n\n        return arr;\n      }\n\n      if (min === undefined) {\n        min = 0;\n      }\n\n      var rndm = BMMath.random();\n      return min + rndm * (max - min);\n    }\n\n    function createPath(points, inTangents, outTangents, closed) {\n      var i,\n          len = points.length;\n      var path = shape_pool.newElement();\n      path.setPathData(!!closed, len);\n      var arrPlaceholder = [0, 0],\n          inVertexPoint,\n          outVertexPoint;\n\n      for (i = 0; i < len; i += 1) {\n        inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder;\n        outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder;\n        path.setTripleAt(points[i][0], points[i][1], outVertexPoint[0] + points[i][0], outVertexPoint[1] + points[i][1], inVertexPoint[0] + points[i][0], inVertexPoint[1] + points[i][1], i, true);\n      }\n\n      return path;\n    }\n\n    function initiateExpression(elem, data, property) {\n      var val = data.x;\n      var needsVelocity = /velocity(?![\\w\\d])/.test(val);\n\n      var _needsRandom = val.indexOf('random') !== -1;\n\n      var elemType = elem.data.ty;\n      var transform, $bm_transform, content, effect;\n      var thisProperty = property;\n      thisProperty.valueAtTime = thisProperty.getValueAtTime;\n      Object.defineProperty(thisProperty, 'value', {\n        get: function get() {\n          return thisProperty.v;\n        }\n      });\n      elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;\n      elem.comp.displayStartTime = 0;\n      var inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      var outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      var width = elem.data.sw ? elem.data.sw : 0;\n      var height = elem.data.sh ? elem.data.sh : 0;\n      var name = elem.data.nm;\n      var loopIn, loop_in, loopOut, loop_out, smooth;\n      var toWorld, fromWorld, fromComp, toComp, fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp, mask, valueAtTime, velocityAtTime;\n      var __expression_functions = [];\n\n      if (data.xf) {\n        var i,\n            len = data.xf.length;\n\n        for (i = 0; i < len; i += 1) {\n          __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');\n        }\n      }\n\n      var scoped_bm_rt;\n      var expression_function = eval('[function _expression_function(){' + val + ';scoped_bm_rt=$bm_rt}' + ']')[0];\n      var numKeys = property.kf ? data.k.length : 0;\n      var active = !this.data || this.data.hd !== true;\n\n      var wiggle = function wiggle(freq, amp) {\n        var i,\n            j,\n            len = this.pv.length ? this.pv.length : 1;\n        var addedAmps = createTypedArray('float32', len);\n        freq = 5;\n        var iterations = Math.floor(time * freq);\n        i = 0;\n        j = 0;\n\n        while (i < iterations) {\n          //var rnd = BMMath.random();\n          for (j = 0; j < len; j += 1) {\n            addedAmps[j] += -amp + amp * 2 * BMMath.random(); //addedAmps[j] += -amp + amp*2*rnd;\n          }\n\n          i += 1;\n        } //var rnd2 = BMMath.random();\n\n\n        var periods = time * freq;\n        var perc = periods - Math.floor(periods);\n        var arr = createTypedArray('float32', len);\n\n        if (len > 1) {\n          for (j = 0; j < len; j += 1) {\n            arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc; //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\n            //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\n          }\n\n          return arr;\n        } else {\n          return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc;\n        }\n      }.bind(this);\n\n      if (thisProperty.loopIn) {\n        loopIn = thisProperty.loopIn.bind(thisProperty);\n        loop_in = loopIn;\n      }\n\n      if (thisProperty.loopOut) {\n        loopOut = thisProperty.loopOut.bind(thisProperty);\n        loop_out = loopOut;\n      }\n\n      if (thisProperty.smooth) {\n        smooth = thisProperty.smooth.bind(thisProperty);\n      }\n\n      function loopInDuration(type, duration) {\n        return loopIn(type, duration, true);\n      }\n\n      function loopOutDuration(type, duration) {\n        return loopOut(type, duration, true);\n      }\n\n      if (this.getValueAtTime) {\n        valueAtTime = this.getValueAtTime.bind(this);\n      }\n\n      if (this.getVelocityAtTime) {\n        velocityAtTime = this.getVelocityAtTime.bind(this);\n      }\n\n      var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\n\n      function lookAt(elem1, elem2) {\n        var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]];\n        var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads;\n        var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads;\n        return [yaw, pitch, 0];\n      }\n\n      function easeOut(t, tMin, tMax, val1, val2) {\n        return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\n      }\n\n      function easeIn(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInBez, t, tMin, tMax, val1, val2);\n      }\n\n      function ease(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\n      }\n\n      function applyEase(fn, t, tMin, tMax, val1, val2) {\n        if (val1 === undefined) {\n          val1 = tMin;\n          val2 = tMax;\n        } else {\n          t = (t - tMin) / (tMax - tMin);\n        }\n\n        t = t > 1 ? 1 : t < 0 ? 0 : t;\n        var mult = fn(t);\n\n        if ($bm_isInstanceOfArray(val1)) {\n          var i,\n              len = val1.length;\n          var arr = createTypedArray('float32', len);\n\n          for (i = 0; i < len; i += 1) {\n            arr[i] = (val2[i] - val1[i]) * mult + val1[i];\n          }\n\n          return arr;\n        } else {\n          return (val2 - val1) * mult + val1;\n        }\n      }\n\n      function nearestKey(time) {\n        var i,\n            len = data.k.length,\n            index,\n            keyTime;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          index = 0;\n          keyTime = 0;\n        } else {\n          index = -1;\n          time *= elem.comp.globalData.frameRate;\n\n          if (time < data.k[0].t) {\n            index = 1;\n            keyTime = data.k[0].t;\n          } else {\n            for (i = 0; i < len - 1; i += 1) {\n              if (time === data.k[i].t) {\n                index = i + 1;\n                keyTime = data.k[i].t;\n                break;\n              } else if (time > data.k[i].t && time < data.k[i + 1].t) {\n                if (time - data.k[i].t > data.k[i + 1].t - time) {\n                  index = i + 2;\n                  keyTime = data.k[i + 1].t;\n                } else {\n                  index = i + 1;\n                  keyTime = data.k[i].t;\n                }\n\n                break;\n              }\n            }\n\n            if (index === -1) {\n              index = i + 1;\n              keyTime = data.k[i].t;\n            }\n          }\n        }\n\n        var ob = {};\n        ob.index = index;\n        ob.time = keyTime / elem.comp.globalData.frameRate;\n        return ob;\n      }\n\n      function key(ind) {\n        var ob, i, len;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          throw new Error('The property has no keyframe at index ' + ind);\n        }\n\n        ind -= 1;\n        ob = {\n          time: data.k[ind].t / elem.comp.globalData.frameRate,\n          value: []\n        };\n        var arr = data.k[ind].hasOwnProperty('s') ? data.k[ind].s : data.k[ind - 1].e;\n        len = arr.length;\n\n        for (i = 0; i < len; i += 1) {\n          ob[i] = arr[i];\n          ob.value[i] = arr[i];\n        }\n\n        return ob;\n      }\n\n      function framesToTime(frames, fps) {\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return frames / fps;\n      }\n\n      function timeToFrames(t, fps) {\n        if (!t && t !== 0) {\n          t = time;\n        }\n\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return t * fps;\n      }\n\n      function seedRandom(seed) {\n        BMMath.seedrandom(randSeed + seed);\n      }\n\n      function sourceRectAtTime() {\n        return elem.sourceRectAtTime();\n      }\n\n      function substring(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substring(init);\n          }\n\n          return value.substring(init, end);\n        }\n\n        return '';\n      }\n\n      function substr(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substr(init);\n          }\n\n          return value.substr(init, end);\n        }\n\n        return '';\n      }\n\n      var time, velocity, value, text, textIndex, textTotal, selectorValue;\n      var index = elem.data.ind;\n      var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n      var parent;\n      var randSeed = Math.floor(Math.random() * 1000000);\n      var globalData = elem.globalData;\n\n      function executeExpression(_value) {\n        // globalData.pushExpression();\n        value = _value;\n\n        if (_needsRandom) {\n          seedRandom(randSeed);\n        }\n\n        if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\n          return value;\n        }\n\n        if (this.propType === 'textSelector') {\n          textIndex = this.textIndex;\n          textTotal = this.textTotal;\n          selectorValue = this.selectorValue;\n        }\n\n        if (!thisLayer) {\n          text = elem.layerInterface.text;\n          thisLayer = elem.layerInterface;\n          thisComp = elem.comp.compInterface;\n          toWorld = thisLayer.toWorld.bind(thisLayer);\n          fromWorld = thisLayer.fromWorld.bind(thisLayer);\n          fromComp = thisLayer.fromComp.bind(thisLayer);\n          toComp = thisLayer.toComp.bind(thisLayer);\n          mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\n          fromCompToSurface = fromComp;\n        }\n\n        if (!transform) {\n          transform = elem.layerInterface(\"ADBE Transform Group\");\n          $bm_transform = transform;\n\n          if (transform) {\n            anchorPoint = transform.anchorPoint;\n            /*position = transform.position;\r\n            rotation = transform.rotation;\r\n            scale = transform.scale;*/\n          }\n        }\n\n        if (elemType === 4 && !content) {\n          content = thisLayer(\"ADBE Root Vectors Group\");\n        }\n\n        if (!effect) {\n          effect = thisLayer(4);\n        }\n\n        hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n\n        if (hasParent && !parent) {\n          parent = elem.hierarchy[0].layerInterface;\n        }\n\n        time = this.comp.renderedFrame / this.comp.globalData.frameRate;\n\n        if (needsVelocity) {\n          velocity = velocityAtTime(time);\n        }\n\n        expression_function();\n        this.frameExpressionId = elem.globalData.frameId; //TODO: Check if it's possible to return on ShapeInterface the .v value\n\n        if (scoped_bm_rt.propType === \"shape\") {\n          scoped_bm_rt = scoped_bm_rt.v;\n        } // globalData.popExpression();\n\n\n        return scoped_bm_rt;\n      }\n\n      return executeExpression;\n    }\n\n    ob.initiateExpression = initiateExpression;\n    return ob;\n  }();\n\n  var expressionHelpers = function () {\n    function searchExpressions(elem, data, prop) {\n      if (data.x) {\n        prop.k = true;\n        prop.x = true;\n        prop.initiateExpression = ExpressionManager.initiateExpression;\n        prop.effectsSequence.push(prop.initiateExpression(elem, data, prop).bind(prop));\n      }\n    }\n\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\n        this._cachingAtTime.lastFrame = frameNum;\n      }\n\n      return this._cachingAtTime.value;\n    }\n\n    function getSpeedAtTime(frameNum) {\n      var delta = -0.01;\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var speed = 0;\n\n      if (v1.length) {\n        var i;\n\n        for (i = 0; i < v1.length; i += 1) {\n          speed += Math.pow(v2[i] - v1[i], 2);\n        }\n\n        speed = Math.sqrt(speed) * 100;\n      } else {\n        speed = 0;\n      }\n\n      return speed;\n    }\n\n    function getVelocityAtTime(frameNum) {\n      if (this.vel !== undefined) {\n        return this.vel;\n      }\n\n      var delta = -0.001; //frameNum += this.elem.data.st;\n\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var velocity;\n\n      if (v1.length) {\n        velocity = createTypedArray('float32', v1.length);\n        var i;\n\n        for (i = 0; i < v1.length; i += 1) {\n          //removing frameRate\n          //if needed, don't add it here\n          //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\n          velocity[i] = (v2[i] - v1[i]) / delta;\n        }\n      } else {\n        velocity = (v2 - v1) / delta;\n      }\n\n      return velocity;\n    }\n\n    function getStaticValueAtTime() {\n      return this.pv;\n    }\n\n    function setGroupProperty(propertyGroup) {\n      this.propertyGroup = propertyGroup;\n    }\n\n    return {\n      searchExpressions: searchExpressions,\n      getSpeedAtTime: getSpeedAtTime,\n      getVelocityAtTime: getVelocityAtTime,\n      getValueAtTime: getValueAtTime,\n      getStaticValueAtTime: getStaticValueAtTime,\n      setGroupProperty: setGroupProperty\n    };\n  }();\n\n  (function addPropertyDecorator() {\n    function loopOut(type, duration, durationFlag) {\n      if (!this.k || !this.keyframes) {\n        return this.pv;\n      }\n\n      type = type ? type.toLowerCase() : '';\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var lastKeyFrame = keyframes[keyframes.length - 1].t;\n\n      if (currentFrame <= lastKeyFrame) {\n        return this.pv;\n      } else {\n        var cycleDuration, firstKeyFrame;\n\n        if (!durationFlag) {\n          if (!duration || duration > keyframes.length - 1) {\n            duration = keyframes.length - 1;\n          }\n\n          firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\n          cycleDuration = lastKeyFrame - firstKeyFrame;\n        } else {\n          if (!duration) {\n            cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);\n          } else {\n            cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate * duration);\n          }\n\n          firstKeyFrame = lastKeyFrame - cycleDuration;\n        }\n\n        var i, len, ret;\n\n        if (type === 'pingpong') {\n          var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n          if (iterations % 2 !== 0) {\n            return this.getValueAtTime((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n          }\n        } else if (type === 'offset') {\n          var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n          var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n          var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n          var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n          if (this.pv.length) {\n            ret = new Array(initV.length);\n            len = ret.length;\n\n            for (i = 0; i < len; i += 1) {\n              ret[i] = (endV[i] - initV[i]) * repeats + current[i];\n            }\n\n            return ret;\n          }\n\n          return (endV - initV) * repeats + current;\n        } else if (type === 'continue') {\n          var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n          var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\n\n          if (this.pv.length) {\n            ret = new Array(lastValue.length);\n            len = ret.length;\n\n            for (i = 0; i < len; i += 1) {\n              ret[i] = lastValue[i] + (lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 0.0005;\n            }\n\n            return ret;\n          }\n\n          return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 0.001);\n        }\n\n        return this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n      }\n    }\n\n    function loopIn(type, duration, durationFlag) {\n      if (!this.k) {\n        return this.pv;\n      }\n\n      type = type ? type.toLowerCase() : '';\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var firstKeyFrame = keyframes[0].t;\n\n      if (currentFrame >= firstKeyFrame) {\n        return this.pv;\n      } else {\n        var cycleDuration, lastKeyFrame;\n\n        if (!durationFlag) {\n          if (!duration || duration > keyframes.length - 1) {\n            duration = keyframes.length - 1;\n          }\n\n          lastKeyFrame = keyframes[duration].t;\n          cycleDuration = lastKeyFrame - firstKeyFrame;\n        } else {\n          if (!duration) {\n            cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);\n          } else {\n            cycleDuration = Math.abs(elem.comp.globalData.frameRate * duration);\n          }\n\n          lastKeyFrame = firstKeyFrame + cycleDuration;\n        }\n\n        var i, len, ret;\n\n        if (type === 'pingpong') {\n          var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);\n\n          if (iterations % 2 === 0) {\n            return this.getValueAtTime(((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n          }\n        } else if (type === 'offset') {\n          var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n          var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n          var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n          var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;\n\n          if (this.pv.length) {\n            ret = new Array(initV.length);\n            len = ret.length;\n\n            for (i = 0; i < len; i += 1) {\n              ret[i] = current[i] - (endV[i] - initV[i]) * repeats;\n            }\n\n            return ret;\n          }\n\n          return current - (endV - initV) * repeats;\n        } else if (type === 'continue') {\n          var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n          var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\n\n          if (this.pv.length) {\n            ret = new Array(firstValue.length);\n            len = ret.length;\n\n            for (i = 0; i < len; i += 1) {\n              ret[i] = firstValue[i] + (firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame) / 0.001;\n            }\n\n            return ret;\n          }\n\n          return firstValue + (firstValue - nextFirstValue) * (firstKeyFrame - currentFrame) / 0.001;\n        }\n\n        return this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n      }\n    }\n\n    function smooth(width, samples) {\n      if (!this.k) {\n        return this.pv;\n      }\n\n      width = (width || 0.4) * 0.5;\n      samples = Math.floor(samples || 5);\n\n      if (samples <= 1) {\n        return this.pv;\n      }\n\n      var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\n      var initFrame = currentTime - width;\n      var endFrame = currentTime + width;\n      var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\n      var i = 0,\n          j = 0;\n      var value;\n\n      if (this.pv.length) {\n        value = createTypedArray('float32', this.pv.length);\n      } else {\n        value = 0;\n      }\n\n      var sampleValue;\n\n      while (i < samples) {\n        sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\n\n        if (this.pv.length) {\n          for (j = 0; j < this.pv.length; j += 1) {\n            value[j] += sampleValue[j];\n          }\n        } else {\n          value += sampleValue;\n        }\n\n        i += 1;\n      }\n\n      if (this.pv.length) {\n        for (j = 0; j < this.pv.length; j += 1) {\n          value[j] /= samples;\n        }\n      } else {\n        value /= samples;\n      }\n\n      return value;\n    }\n\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\n        this._cachingAtTime.lastFrame = frameNum;\n      }\n\n      return this._cachingAtTime.value;\n    }\n\n    function getTransformValueAtTime(time) {\n      console.warn('Transform at time not supported');\n    }\n\n    function getTransformStaticValueAtTime(time) {}\n\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\n\n    TransformPropertyFactory.getTransformProperty = function (elem, data, container) {\n      var prop = getTransformProperty(elem, data, container);\n\n      if (prop.dynamicProperties.length) {\n        prop.getValueAtTime = getTransformValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\n      }\n\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      return prop;\n    };\n\n    var propertyGetProp = PropertyFactory.getProp;\n\n    PropertyFactory.getProp = function (elem, data, type, mult, container) {\n      var prop = propertyGetProp(elem, data, type, mult, container); //prop.getVelocityAtTime = getVelocityAtTime;\n      //prop.loopOut = loopOut;\n      //prop.loopIn = loopIn;\n\n      if (prop.kf) {\n        prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\n      }\n\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      prop.loopOut = loopOut;\n      prop.loopIn = loopIn;\n      prop.smooth = smooth;\n      prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\n      prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\n      prop.numKeys = data.a === 1 ? data.k.length : 0;\n      prop.propertyIndex = data.ix;\n      var value = 0;\n\n      if (type !== 0) {\n        value = createTypedArray('float32', data.a === 1 ? data.k[0].s.length : data.k.length);\n      }\n\n      prop._cachingAtTime = {\n        lastFrame: initialDefaultFrame,\n        lastIndex: 0,\n        value: value\n      };\n      expressionHelpers.searchExpressions(elem, data, prop);\n\n      if (prop.k) {\n        container.addDynamicProperty(prop);\n      }\n\n      return prop;\n    };\n\n    function getShapeValueAtTime(frameNum) {\n      //For now this caching object is created only when needed instead of creating it when the shape is initialized.\n      if (!this._cachingAtTime) {\n        this._cachingAtTime = {\n          shapeValue: shape_pool.clone(this.pv),\n          lastIndex: 0,\n          lastTime: initialDefaultFrame\n        };\n      }\n\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastTime) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\n        this._cachingAtTime.lastTime = frameNum;\n        this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\n      }\n\n      return this._cachingAtTime.shapeValue;\n    }\n\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\n\n    function ShapeExpressions() {}\n\n    ShapeExpressions.prototype = {\n      vertices: function vertices(prop, time) {\n        if (this.k) {\n          this.getValue();\n        }\n\n        var shapePath = this.v;\n\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n\n        var i,\n            len = shapePath._length;\n        var vertices = shapePath[prop];\n        var points = shapePath.v;\n        var arr = createSizedArray(len);\n\n        for (i = 0; i < len; i += 1) {\n          if (prop === 'i' || prop === 'o') {\n            arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\n          } else {\n            arr[i] = [vertices[i][0], vertices[i][1]];\n          }\n        }\n\n        return arr;\n      },\n      points: function points(time) {\n        return this.vertices('v', time);\n      },\n      inTangents: function inTangents(time) {\n        return this.vertices('i', time);\n      },\n      outTangents: function outTangents(time) {\n        return this.vertices('o', time);\n      },\n      isClosed: function isClosed() {\n        return this.v.c;\n      },\n      pointOnPath: function pointOnPath(perc, time) {\n        var shapePath = this.v;\n\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n\n        if (!this._segmentsLength) {\n          this._segmentsLength = bez.getSegmentsLength(shapePath);\n        }\n\n        var segmentsLength = this._segmentsLength;\n        var lengths = segmentsLength.lengths;\n        var lengthPos = segmentsLength.totalLength * perc;\n        var i = 0,\n            len = lengths.length;\n        var j = 0,\n            jLen;\n        var accumulatedLength = 0,\n            pt;\n\n        while (i < len) {\n          if (accumulatedLength + lengths[i].addedLength > lengthPos) {\n            var initIndex = i;\n            var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1;\n            var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength;\n            pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\n            break;\n          } else {\n            accumulatedLength += lengths[i].addedLength;\n          }\n\n          i += 1;\n        }\n\n        if (!pt) {\n          pt = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];\n        }\n\n        return pt;\n      },\n      vectorOnPath: function vectorOnPath(perc, time, vectorType) {\n        //perc doesn't use triple equality because it can be a Number object as well as a primitive.\n        perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\n        var pt1 = this.pointOnPath(perc, time);\n        var pt2 = this.pointOnPath(perc + 0.001, time);\n        var xLength = pt2[0] - pt1[0];\n        var yLength = pt2[1] - pt1[1];\n        var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));\n\n        if (magnitude === 0) {\n          return [0, 0];\n        }\n\n        var unitVector = vectorType === 'tangent' ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];\n        return unitVector;\n      },\n      tangentOnPath: function tangentOnPath(perc, time) {\n        return this.vectorOnPath(perc, time, 'tangent');\n      },\n      normalOnPath: function normalOnPath(perc, time) {\n        return this.vectorOnPath(perc, time, 'normal');\n      },\n      setGroupProperty: expressionHelpers.setGroupProperty,\n      getValueAtTime: expressionHelpers.getStaticValueAtTime\n    };\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\n\n    ShapePropertyFactory.getShapeProp = function (elem, data, type, arr, trims) {\n      var prop = propertyGetShapeProp(elem, data, type, arr, trims);\n      prop.propertyIndex = data.ix;\n      prop.lock = false;\n\n      if (type === 3) {\n        expressionHelpers.searchExpressions(elem, data.pt, prop);\n      } else if (type === 4) {\n        expressionHelpers.searchExpressions(elem, data.ks, prop);\n      }\n\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n\n      return prop;\n    };\n  })();\n\n  (function addDecorator() {\n    function searchExpressions() {\n      if (this.data.d.x) {\n        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);\n        this.addEffect(this.getExpressionValue.bind(this));\n        return true;\n      }\n    }\n\n    TextProperty.prototype.getExpressionValue = function (currentValue, text) {\n      var newValue = this.calculateExpression(text);\n\n      if (currentValue.t !== newValue) {\n        var newData = {};\n        this.copyData(newData, currentValue);\n        newData.t = newValue.toString();\n        newData.__complete = false;\n        return newData;\n      }\n\n      return currentValue;\n    };\n\n    TextProperty.prototype.searchProperty = function () {\n      var isKeyframed = this.searchKeyframes();\n      var hasExpressions = this.searchExpressions();\n      this.kf = isKeyframed || hasExpressions;\n      return this.kf;\n    };\n\n    TextProperty.prototype.searchExpressions = searchExpressions;\n  })();\n\n  var ShapeExpressionInterface = function () {\n    function iterateElements(shapes, view, propertyGroup) {\n      var arr = [];\n      var i,\n          len = shapes ? shapes.length : 0;\n\n      for (i = 0; i < len; i += 1) {\n        if (shapes[i].ty == 'gr') {\n          arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'fl') {\n          arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'st') {\n          arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'tm') {\n          arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'tr') {//arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\n        } else if (shapes[i].ty == 'el') {\n          arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'sr') {\n          arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'sh') {\n          arr.push(pathInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'rc') {\n          arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'rd') {\n          arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'rp') {\n          arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup));\n        }\n      }\n\n      return arr;\n    }\n\n    function contentsInterfaceFactory(shape, view, propertyGroup) {\n      var interfaces;\n\n      var interfaceFunction = function _interfaceFunction(value) {\n        var i = 0,\n            len = interfaces.length;\n\n        while (i < len) {\n          if (interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value) {\n            return interfaces[i];\n          }\n\n          i += 1;\n        }\n\n        if (typeof value === 'number') {\n          return interfaces[value - 1];\n        }\n      };\n\n      interfaceFunction.propertyGroup = function (val) {\n        if (val === 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(val - 1);\n        }\n      };\n\n      interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\n      interfaceFunction.numProperties = interfaces.length;\n      interfaceFunction.propertyIndex = shape.cix;\n      interfaceFunction._name = shape.nm;\n      return interfaceFunction;\n    }\n\n    function groupInterfaceFactory(shape, view, propertyGroup) {\n      var interfaceFunction = function _interfaceFunction(value) {\n        switch (value) {\n          case 'ADBE Vectors Group':\n          case 'Contents':\n          case 2:\n            return interfaceFunction.content;\n          //Not necessary for now. Keeping them here in case a new case appears\n          //case 'ADBE Vector Transform Group':\n          //case 3:\n\n          default:\n            return interfaceFunction.transform;\n        }\n      };\n\n      interfaceFunction.propertyGroup = function (val) {\n        if (val === 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(val - 1);\n        }\n      };\n\n      var content = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.content = content;\n      interfaceFunction.transform = transformInterface;\n      Object.defineProperty(interfaceFunction, '_name', {\n        get: function get() {\n          return shape.nm;\n        }\n      }); //interfaceFunction.content = interfaceFunction;\n\n      interfaceFunction.numProperties = shape.np;\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.nm = shape.nm;\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function fillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color;\n        } else if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'color': {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        'opacity': {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        '_name': {\n          value: shape.nm\n        },\n        'mn': {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(propertyGroup);\n      view.o.setGroupProperty(propertyGroup);\n      return interfaceFunction;\n    }\n\n    function strokeInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val === 1) {\n          return ob;\n        } else {\n          return propertyGroup(val - 1);\n        }\n      }\n\n      function _dashPropertyGroup(val) {\n        if (val === 1) {\n          return dashOb;\n        } else {\n          return _propertyGroup(val - 1);\n        }\n      }\n\n      function addPropertyToDashOb(i) {\n        Object.defineProperty(dashOb, shape.d[i].nm, {\n          get: ExpressionPropertyInterface(view.d.dataProps[i].p)\n        });\n      }\n\n      var i,\n          len = shape.d ? shape.d.length : 0;\n      var dashOb = {};\n\n      for (i = 0; i < len; i += 1) {\n        addPropertyToDashOb(i);\n        view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\n      }\n\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color;\n        } else if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        } else if (val === 'Stroke Width' || val === 'stroke width') {\n          return interfaceFunction.strokeWidth;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'color': {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        'opacity': {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        'strokeWidth': {\n          get: ExpressionPropertyInterface(view.w)\n        },\n        'dash': {\n          get: function get() {\n            return dashOb;\n          }\n        },\n        '_name': {\n          value: shape.nm\n        },\n        'mn': {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(_propertyGroup);\n      view.o.setGroupProperty(_propertyGroup);\n      view.w.setGroupProperty(_propertyGroup);\n      return interfaceFunction;\n    }\n\n    function trimInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      interfaceFunction.propertyIndex = shape.ix;\n      view.s.setGroupProperty(_propertyGroup);\n      view.e.setGroupProperty(_propertyGroup);\n      view.o.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(val) {\n        if (val === shape.e.ix || val === 'End' || val === 'end') {\n          return interfaceFunction.end;\n        }\n\n        if (val === shape.s.ix) {\n          return interfaceFunction.start;\n        }\n\n        if (val === shape.o.ix) {\n          return interfaceFunction.offset;\n        }\n      }\n\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.propertyGroup = propertyGroup;\n      Object.defineProperties(interfaceFunction, {\n        'start': {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        'end': {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        'offset': {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function transformInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      view.transform.mProps.o.setGroupProperty(_propertyGroup);\n      view.transform.mProps.p.setGroupProperty(_propertyGroup);\n      view.transform.mProps.a.setGroupProperty(_propertyGroup);\n      view.transform.mProps.s.setGroupProperty(_propertyGroup);\n      view.transform.mProps.r.setGroupProperty(_propertyGroup);\n\n      if (view.transform.mProps.sk) {\n        view.transform.mProps.sk.setGroupProperty(_propertyGroup);\n        view.transform.mProps.sa.setGroupProperty(_propertyGroup);\n      }\n\n      view.transform.op.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(value) {\n        if (shape.a.ix === value || value === 'Anchor Point') {\n          return interfaceFunction.anchorPoint;\n        }\n\n        if (shape.o.ix === value || value === 'Opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        if (shape.p.ix === value || value === 'Position') {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation') {\n          return interfaceFunction.rotation;\n        }\n\n        if (shape.s.ix === value || value === 'Scale') {\n          return interfaceFunction.scale;\n        }\n\n        if (shape.sk && shape.sk.ix === value || value === 'Skew') {\n          return interfaceFunction.skew;\n        }\n\n        if (shape.sa && shape.sa.ix === value || value === 'Skew Axis') {\n          return interfaceFunction.skewAxis;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'opacity': {\n          get: ExpressionPropertyInterface(view.transform.mProps.o)\n        },\n        'position': {\n          get: ExpressionPropertyInterface(view.transform.mProps.p)\n        },\n        'anchorPoint': {\n          get: ExpressionPropertyInterface(view.transform.mProps.a)\n        },\n        'scale': {\n          get: ExpressionPropertyInterface(view.transform.mProps.s)\n        },\n        'rotation': {\n          get: ExpressionPropertyInterface(view.transform.mProps.r)\n        },\n        'skew': {\n          get: ExpressionPropertyInterface(view.transform.mProps.sk)\n        },\n        'skewAxis': {\n          get: ExpressionPropertyInterface(view.transform.mProps.sa)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.ty = 'tr';\n      interfaceFunction.mn = shape.mn;\n      interfaceFunction.propertyGroup = propertyGroup;\n      return interfaceFunction;\n    }\n\n    function ellipseInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      interfaceFunction.propertyIndex = shape.ix;\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      prop.s.setGroupProperty(_propertyGroup);\n      prop.p.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.s.ix === value) {\n          return interfaceFunction.size;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'size': {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        'position': {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function starInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.or.setGroupProperty(_propertyGroup);\n      prop.os.setGroupProperty(_propertyGroup);\n      prop.pt.setGroupProperty(_propertyGroup);\n      prop.p.setGroupProperty(_propertyGroup);\n      prop.r.setGroupProperty(_propertyGroup);\n\n      if (shape.ir) {\n        prop.ir.setGroupProperty(_propertyGroup);\n        prop.is.setGroupProperty(_propertyGroup);\n      }\n\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value) {\n          return interfaceFunction.rotation;\n        }\n\n        if (shape.pt.ix === value) {\n          return interfaceFunction.points;\n        }\n\n        if (shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value) {\n          return interfaceFunction.outerRadius;\n        }\n\n        if (shape.os.ix === value) {\n          return interfaceFunction.outerRoundness;\n        }\n\n        if (shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)) {\n          return interfaceFunction.innerRadius;\n        }\n\n        if (shape.is && shape.is.ix === value) {\n          return interfaceFunction.innerRoundness;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'position': {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        'rotation': {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        'points': {\n          get: ExpressionPropertyInterface(prop.pt)\n        },\n        'outerRadius': {\n          get: ExpressionPropertyInterface(prop.or)\n        },\n        'outerRoundness': {\n          get: ExpressionPropertyInterface(prop.os)\n        },\n        'innerRadius': {\n          get: ExpressionPropertyInterface(prop.ir)\n        },\n        'innerRoundness': {\n          get: ExpressionPropertyInterface(prop.is)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function rectInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.p.setGroupProperty(_propertyGroup);\n      prop.s.setGroupProperty(_propertyGroup);\n      prop.r.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value) {\n          return interfaceFunction.roundness;\n        }\n\n        if (shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size') {\n          return interfaceFunction.size;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'position': {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        'roundness': {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        'size': {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function roundedInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.rd.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(value) {\n        if (shape.r.ix === value || 'Round Corners 1' === value) {\n          return interfaceFunction.radius;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'radius': {\n          get: ExpressionPropertyInterface(prop.rd)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function repeaterInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.c.setGroupProperty(_propertyGroup);\n      prop.o.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(value) {\n        if (shape.c.ix === value || 'Copies' === value) {\n          return interfaceFunction.copies;\n        } else if (shape.o.ix === value || 'Offset' === value) {\n          return interfaceFunction.offset;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'copies': {\n          get: ExpressionPropertyInterface(prop.c)\n        },\n        'offset': {\n          get: ExpressionPropertyInterface(prop.o)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function pathInterfaceFactory(shape, view, propertyGroup) {\n      var prop = view.sh;\n\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      prop.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(val) {\n        if (val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2) {\n          return interfaceFunction.path;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'path': {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop;\n          }\n        },\n        'shape': {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop;\n          }\n        },\n        '_name': {\n          value: shape.nm\n        },\n        'ix': {\n          value: shape.ix\n        },\n        'propertyIndex': {\n          value: shape.ix\n        },\n        'mn': {\n          value: shape.mn\n        }\n      });\n      return interfaceFunction;\n    }\n\n    return function (shapes, view, propertyGroup) {\n      var interfaces;\n\n      function _interfaceFunction(value) {\n        if (typeof value === 'number') {\n          return interfaces[value - 1];\n        } else {\n          var i = 0,\n              len = interfaces.length;\n\n          while (i < len) {\n            if (interfaces[i]._name === value) {\n              return interfaces[i];\n            }\n\n            i += 1;\n          }\n        }\n      }\n\n      _interfaceFunction.propertyGroup = propertyGroup;\n      interfaces = iterateElements(shapes, view, _interfaceFunction);\n      _interfaceFunction.numProperties = interfaces.length;\n      return _interfaceFunction;\n    };\n  }();\n\n  var TextExpressionInterface = function () {\n    return function (elem) {\n      var _prevValue, _sourceText;\n\n      function _thisLayerFunction() {}\n\n      Object.defineProperty(_thisLayerFunction, \"sourceText\", {\n        get: function get() {\n          elem.textProperty.getValue();\n          var stringValue = elem.textProperty.currentData.t;\n\n          if (stringValue !== _prevValue) {\n            elem.textProperty.currentData.t = _prevValue;\n            _sourceText = new String(stringValue); //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\n\n            _sourceText.value = stringValue ? stringValue : new String(stringValue);\n          }\n\n          return _sourceText;\n        }\n      });\n      return _thisLayerFunction;\n    };\n  }();\n\n  var LayerExpressionInterface = function () {\n    function toWorld(arr, time) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n      var transformMat;\n\n      if (time) {\n        //Todo implement value at time on transform properties\n        //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\n        transformMat = this._elem.finalTransform.mProp;\n      } else {\n        transformMat = this._elem.finalTransform.mProp;\n      }\n\n      transformMat.applyToMatrix(toWorldMat);\n\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i,\n            len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n\n        return toWorldMat.applyToPointArray(arr[0], arr[1], arr[2] || 0);\n      }\n\n      return toWorldMat.applyToPointArray(arr[0], arr[1], arr[2] || 0);\n    }\n\n    function fromWorld(arr, time) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n      var transformMat;\n\n      if (time) {\n        //Todo implement value at time on transform properties\n        //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\n        transformMat = this._elem.finalTransform.mProp;\n      } else {\n        transformMat = this._elem.finalTransform.mProp;\n      }\n\n      transformMat.applyToMatrix(toWorldMat);\n\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i,\n            len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n\n        return toWorldMat.inversePoint(arr);\n      }\n\n      return toWorldMat.inversePoint(arr);\n    }\n\n    function fromComp(arr) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n\n      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\n\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i,\n            len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n\n        return toWorldMat.inversePoint(arr);\n      }\n\n      return toWorldMat.inversePoint(arr);\n    }\n\n    function sampleImage() {\n      return [1, 1, 1, 1];\n    }\n\n    return function (elem) {\n      var transformInterface;\n\n      function _registerMaskInterface(maskManager) {\n        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\n      }\n\n      function _registerEffectsInterface(effects) {\n        _thisLayerFunction.effect = effects;\n      }\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case \"ADBE Root Vectors Group\":\n          case \"Contents\":\n          case 2:\n            return _thisLayerFunction.shapeInterface;\n\n          case 1:\n          case 6:\n          case \"Transform\":\n          case \"transform\":\n          case \"ADBE Transform Group\":\n            return transformInterface;\n\n          case 4:\n          case \"ADBE Effect Parade\":\n          case \"effects\":\n          case \"Effects\":\n            return _thisLayerFunction.effect;\n        }\n      }\n\n      _thisLayerFunction.toWorld = toWorld;\n      _thisLayerFunction.fromWorld = fromWorld;\n      _thisLayerFunction.toComp = toWorld;\n      _thisLayerFunction.fromComp = fromComp;\n      _thisLayerFunction.sampleImage = sampleImage;\n      _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\n      _thisLayerFunction._elem = elem;\n      transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\n      var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\n      Object.defineProperties(_thisLayerFunction, {\n        hasParent: {\n          get: function get() {\n            return elem.hierarchy.length;\n          }\n        },\n        parent: {\n          get: function get() {\n            return elem.hierarchy[0].layerInterface;\n          }\n        },\n        rotation: getDescriptor(transformInterface, 'rotation'),\n        scale: getDescriptor(transformInterface, 'scale'),\n        position: getDescriptor(transformInterface, 'position'),\n        opacity: getDescriptor(transformInterface, 'opacity'),\n        anchorPoint: anchorPointDescriptor,\n        anchor_point: anchorPointDescriptor,\n        transform: {\n          get: function get() {\n            return transformInterface;\n          }\n        },\n        active: {\n          get: function get() {\n            return elem.isInRange;\n          }\n        }\n      });\n      _thisLayerFunction.startTime = elem.data.st;\n      _thisLayerFunction.index = elem.data.ind;\n      _thisLayerFunction.source = elem.data.refId;\n      _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\n      _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\n      _thisLayerFunction.inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      _thisLayerFunction.outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      _thisLayerFunction._name = elem.data.nm;\n      _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\n      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\n      return _thisLayerFunction;\n    };\n  }();\n\n  var CompExpressionInterface = function () {\n    return function (comp) {\n      function _thisLayerFunction(name) {\n        var i = 0,\n            len = comp.layers.length;\n\n        while (i < len) {\n          if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\n            return comp.elements[i].layerInterface;\n          }\n\n          i += 1;\n        }\n\n        return null; //return {active:false};\n      }\n\n      Object.defineProperty(_thisLayerFunction, \"_name\", {\n        value: comp.data.nm\n      });\n      _thisLayerFunction.layer = _thisLayerFunction;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\n      _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;\n      _thisLayerFunction.displayStartTime = 0;\n      _thisLayerFunction.numLayers = comp.layers.length;\n      return _thisLayerFunction;\n    };\n  }();\n\n  var TransformExpressionInterface = function () {\n    return function (transform) {\n      function _thisFunction(name) {\n        switch (name) {\n          case \"scale\":\n          case \"Scale\":\n          case \"ADBE Scale\":\n          case 6:\n            return _thisFunction.scale;\n\n          case \"rotation\":\n          case \"Rotation\":\n          case \"ADBE Rotation\":\n          case \"ADBE Rotate Z\":\n          case 10:\n            return _thisFunction.rotation;\n\n          case \"ADBE Rotate X\":\n            return _thisFunction.xRotation;\n\n          case \"ADBE Rotate Y\":\n            return _thisFunction.yRotation;\n\n          case \"position\":\n          case \"Position\":\n          case \"ADBE Position\":\n          case 2:\n            return _thisFunction.position;\n\n          case 'ADBE Position_0':\n            return _thisFunction.xPosition;\n\n          case 'ADBE Position_1':\n            return _thisFunction.yPosition;\n\n          case 'ADBE Position_2':\n            return _thisFunction.zPosition;\n\n          case \"anchorPoint\":\n          case \"AnchorPoint\":\n          case \"Anchor Point\":\n          case \"ADBE AnchorPoint\":\n          case 1:\n            return _thisFunction.anchorPoint;\n\n          case \"opacity\":\n          case \"Opacity\":\n          case 11:\n            return _thisFunction.opacity;\n        }\n      }\n\n      Object.defineProperty(_thisFunction, \"rotation\", {\n        get: ExpressionPropertyInterface(transform.r || transform.rz)\n      });\n      Object.defineProperty(_thisFunction, \"zRotation\", {\n        get: ExpressionPropertyInterface(transform.rz || transform.r)\n      });\n      Object.defineProperty(_thisFunction, \"xRotation\", {\n        get: ExpressionPropertyInterface(transform.rx)\n      });\n      Object.defineProperty(_thisFunction, \"yRotation\", {\n        get: ExpressionPropertyInterface(transform.ry)\n      });\n      Object.defineProperty(_thisFunction, \"scale\", {\n        get: ExpressionPropertyInterface(transform.s)\n      });\n\n      if (transform.p) {\n        var _transformFactory = ExpressionPropertyInterface(transform.p);\n      }\n\n      Object.defineProperty(_thisFunction, \"position\", {\n        get: function get() {\n          if (transform.p) {\n            return _transformFactory();\n          } else {\n            return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\n          }\n        }\n      });\n      Object.defineProperty(_thisFunction, \"xPosition\", {\n        get: ExpressionPropertyInterface(transform.px)\n      });\n      Object.defineProperty(_thisFunction, \"yPosition\", {\n        get: ExpressionPropertyInterface(transform.py)\n      });\n      Object.defineProperty(_thisFunction, \"zPosition\", {\n        get: ExpressionPropertyInterface(transform.pz)\n      });\n      Object.defineProperty(_thisFunction, \"anchorPoint\", {\n        get: ExpressionPropertyInterface(transform.a)\n      });\n      Object.defineProperty(_thisFunction, \"opacity\", {\n        get: ExpressionPropertyInterface(transform.o)\n      });\n      Object.defineProperty(_thisFunction, \"skew\", {\n        get: ExpressionPropertyInterface(transform.sk)\n      });\n      Object.defineProperty(_thisFunction, \"skewAxis\", {\n        get: ExpressionPropertyInterface(transform.sa)\n      });\n      Object.defineProperty(_thisFunction, \"orientation\", {\n        get: ExpressionPropertyInterface(transform.or)\n      });\n      return _thisFunction;\n    };\n  }();\n\n  var ProjectInterface = function () {\n    function registerComposition(comp) {\n      this.compositions.push(comp);\n    }\n\n    return function () {\n      function _thisProjectFunction(name) {\n        var i = 0,\n            len = this.compositions.length;\n\n        while (i < len) {\n          if (this.compositions[i].data && this.compositions[i].data.nm === name) {\n            if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\n              this.compositions[i].prepareFrame(this.currentFrame);\n            }\n\n            return this.compositions[i].compInterface;\n          }\n\n          i += 1;\n        }\n      }\n\n      _thisProjectFunction.compositions = [];\n      _thisProjectFunction.currentFrame = 0;\n      _thisProjectFunction.registerComposition = registerComposition;\n      return _thisProjectFunction;\n    };\n  }();\n\n  var EffectsExpressionInterface = function () {\n    var ob = {\n      createEffectsInterface: createEffectsInterface\n    };\n\n    function createEffectsInterface(elem, propertyGroup) {\n      if (elem.effectsManager) {\n        var effectElements = [];\n        var effectsData = elem.data.ef;\n        var i,\n            len = elem.effectsManager.effectElements.length;\n\n        for (i = 0; i < len; i += 1) {\n          effectElements.push(createGroupInterface(effectsData[i], elem.effectsManager.effectElements[i], propertyGroup, elem));\n        }\n\n        return function (name) {\n          var effects = elem.data.ef || [],\n              i = 0,\n              len = effects.length;\n\n          while (i < len) {\n            if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n              return effectElements[i];\n            }\n\n            i += 1;\n          }\n        };\n      }\n    }\n\n    function createGroupInterface(data, elements, propertyGroup, elem) {\n      var effectElements = [];\n      var i,\n          len = data.ef.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (data.ef[i].ty === 5) {\n          effectElements.push(createGroupInterface(data.ef[i], elements.effectElements[i], elements.effectElements[i].propertyGroup, elem));\n        } else {\n          effectElements.push(createValueInterface(elements.effectElements[i], data.ef[i].ty, elem, _propertyGroup));\n        }\n      }\n\n      function _propertyGroup(val) {\n        if (val === 1) {\n          return groupInterface;\n        } else {\n          return propertyGroup(val - 1);\n        }\n      }\n\n      var groupInterface = function groupInterface(name) {\n        var effects = data.ef,\n            i = 0,\n            len = effects.length;\n\n        while (i < len) {\n          if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n            if (effects[i].ty === 5) {\n              return effectElements[i];\n            } else {\n              return effectElements[i]();\n            }\n          }\n\n          i += 1;\n        }\n\n        return effectElements[0]();\n      };\n\n      groupInterface.propertyGroup = _propertyGroup;\n\n      if (data.mn === 'ADBE Color Control') {\n        Object.defineProperty(groupInterface, 'color', {\n          get: function get() {\n            return effectElements[0]();\n          }\n        });\n      }\n\n      Object.defineProperty(groupInterface, 'numProperties', {\n        get: function get() {\n          return data.np;\n        }\n      });\n      groupInterface.active = groupInterface.enabled = data.en !== 0;\n      return groupInterface;\n    }\n\n    function createValueInterface(element, type, elem, propertyGroup) {\n      var expressionProperty = ExpressionPropertyInterface(element.p);\n\n      function interfaceFunction() {\n        if (type === 10) {\n          return elem.comp.compInterface(element.p.v);\n        }\n\n        return expressionProperty();\n      }\n\n      if (element.p.setGroupProperty) {\n        element.p.setGroupProperty(propertyGroup);\n      }\n\n      return interfaceFunction;\n    }\n\n    return ob;\n  }();\n\n  var MaskManagerInterface = function () {\n    function MaskInterface(mask, data) {\n      this._mask = mask;\n      this._data = data;\n    }\n\n    Object.defineProperty(MaskInterface.prototype, 'maskPath', {\n      get: function get() {\n        if (this._mask.prop.k) {\n          this._mask.prop.getValue();\n        }\n\n        return this._mask.prop;\n      }\n    });\n    Object.defineProperty(MaskInterface.prototype, 'maskOpacity', {\n      get: function get() {\n        if (this._mask.op.k) {\n          this._mask.op.getValue();\n        }\n\n        return this._mask.op.v * 100;\n      }\n    });\n\n    var MaskManager = function MaskManager(maskManager, elem) {\n      var _maskManager = maskManager;\n      var _elem = elem;\n\n      var _masksInterfaces = createSizedArray(maskManager.viewData.length);\n\n      var i,\n          len = maskManager.viewData.length;\n\n      for (i = 0; i < len; i += 1) {\n        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\n      }\n\n      var maskFunction = function maskFunction(name) {\n        i = 0;\n\n        while (i < len) {\n          if (maskManager.masksProperties[i].nm === name) {\n            return _masksInterfaces[i];\n          }\n\n          i += 1;\n        }\n      };\n\n      return maskFunction;\n    };\n\n    return MaskManager;\n  }();\n\n  var ExpressionPropertyInterface = function () {\n    var defaultUnidimensionalValue = {\n      pv: 0,\n      v: 0,\n      mult: 1\n    };\n    var defaultMultidimensionalValue = {\n      pv: [0, 0, 0],\n      v: [0, 0, 0],\n      mult: 1\n    };\n\n    function completeProperty(expressionValue, property, type) {\n      Object.defineProperty(expressionValue, 'velocity', {\n        get: function get() {\n          return property.getVelocityAtTime(property.comp.currentFrame);\n        }\n      });\n      expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\n\n      expressionValue.key = function (pos) {\n        if (!expressionValue.numKeys) {\n          return 0;\n        } else {\n          var value = '';\n\n          if ('s' in property.keyframes[pos - 1]) {\n            value = property.keyframes[pos - 1].s;\n          } else if ('e' in property.keyframes[pos - 2]) {\n            value = property.keyframes[pos - 2].e;\n          } else {\n            value = property.keyframes[pos - 2].s;\n          }\n\n          var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value);\n          valueProp.time = property.keyframes[pos - 1].t / property.elem.comp.globalData.frameRate;\n          return valueProp;\n        }\n      };\n\n      expressionValue.valueAtTime = property.getValueAtTime;\n      expressionValue.speedAtTime = property.getSpeedAtTime;\n      expressionValue.velocityAtTime = property.getVelocityAtTime;\n      expressionValue.propertyGroup = property.propertyGroup;\n    }\n\n    function UnidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultUnidimensionalValue;\n      }\n\n      var mult = 1 / property.mult;\n      var val = property.pv * mult;\n      var expressionValue = new Number(val);\n      expressionValue.value = val;\n      completeProperty(expressionValue, property, 'unidimensional');\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n\n        val = property.v * mult;\n\n        if (expressionValue.value !== val) {\n          expressionValue = new Number(val);\n          expressionValue.value = val;\n          completeProperty(expressionValue, property, 'unidimensional');\n        }\n\n        return expressionValue;\n      };\n    }\n\n    function MultidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultMultidimensionalValue;\n      }\n\n      var mult = 1 / property.mult;\n      var len = property.pv.length;\n      var expressionValue = createTypedArray('float32', len);\n      var arrValue = createTypedArray('float32', len);\n      expressionValue.value = arrValue;\n      completeProperty(expressionValue, property, 'multidimensional');\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n\n        for (var i = 0; i < len; i += 1) {\n          expressionValue[i] = arrValue[i] = property.v[i] * mult;\n        }\n\n        return expressionValue;\n      };\n    } //TODO: try to avoid using this getter\n\n\n    function defaultGetter() {\n      return defaultUnidimensionalValue;\n    }\n\n    return function (property) {\n      if (!property) {\n        return defaultGetter;\n      } else if (property.propType === 'unidimensional') {\n        return UnidimensionalPropertyInterface(property);\n      } else {\n        return MultidimensionalPropertyInterface(property);\n      }\n    };\n  }();\n\n  (function () {\n    var TextExpressionSelectorProp = function () {\n      function getValueProxy(index, total) {\n        this.textIndex = index + 1;\n        this.textTotal = total;\n        this.v = this.getValue() * this.mult;\n        return this.v;\n      }\n\n      return function TextExpressionSelectorProp(elem, data) {\n        this.pv = 1;\n        this.comp = elem.comp;\n        this.elem = elem;\n        this.mult = 0.01;\n        this.propType = 'textSelector';\n        this.textTotal = data.totalChars;\n        this.selectorValue = 100;\n        this.lastValue = [1, 1, 1];\n        this.k = true;\n        this.x = true;\n        this.getValue = ExpressionManager.initiateExpression.bind(this)(elem, data, this);\n        this.getMult = getValueProxy;\n        this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;\n\n        if (this.kf) {\n          this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);\n        } else {\n          this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);\n        }\n\n        this.setGroupProperty = expressionHelpers.setGroupProperty;\n      };\n    }();\n\n    var propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\n\n    TextSelectorProp.getTextSelectorProp = function (elem, data, arr) {\n      if (data.t === 1) {\n        return new TextExpressionSelectorProp(elem, data, arr);\n      } else {\n        return propertyGetTextProp(elem, data, arr);\n      }\n    };\n  })();\n\n  function SliderEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function AngleEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function ColorEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n\n  function PointEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n\n  function LayerIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function MaskIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function CheckboxEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function NoValueEffect() {\n    this.p = {};\n  }\n\n  function EffectsManager() {}\n\n  function EffectsManager(data, element) {\n    var effects = data.ef || [];\n    this.effectElements = [];\n    var i,\n        len = effects.length;\n    var effectItem;\n\n    for (i = 0; i < len; i++) {\n      effectItem = new GroupEffect(effects[i], element);\n      this.effectElements.push(effectItem);\n    }\n  }\n\n  function GroupEffect(data, element) {\n    this.init(data, element);\n  }\n\n  extendPrototype([DynamicPropertyContainer], GroupEffect);\n  GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\n\n  GroupEffect.prototype.init = function (data, element) {\n    this.data = data;\n    this.effectElements = [];\n    this.initDynamicPropertyContainer(element);\n    var i,\n        len = this.data.ef.length;\n    var eff,\n        effects = this.data.ef;\n\n    for (i = 0; i < len; i += 1) {\n      eff = null;\n\n      switch (effects[i].ty) {\n        case 0:\n          eff = new SliderEffect(effects[i], element, this);\n          break;\n\n        case 1:\n          eff = new AngleEffect(effects[i], element, this);\n          break;\n\n        case 2:\n          eff = new ColorEffect(effects[i], element, this);\n          break;\n\n        case 3:\n          eff = new PointEffect(effects[i], element, this);\n          break;\n\n        case 4:\n        case 7:\n          eff = new CheckboxEffect(effects[i], element, this);\n          break;\n\n        case 10:\n          eff = new LayerIndexEffect(effects[i], element, this);\n          break;\n\n        case 11:\n          eff = new MaskIndexEffect(effects[i], element, this);\n          break;\n\n        case 5:\n          eff = new EffectsManager(effects[i], element, this);\n          break;\n        //case 6:\n\n        default:\n          eff = new NoValueEffect(effects[i], element, this);\n          break;\n      }\n\n      if (eff) {\n        this.effectElements.push(eff);\n      }\n    }\n  };\n\n  var lottiejs = {};\n  var _isFrozen = false;\n\n  function setLocationHref(href) {\n    locationHref = href;\n  }\n\n  function searchAnimations() {\n    if (standalone === true) {\n      animationManager.searchAnimations(animationData, standalone, renderer);\n    } else {\n      animationManager.searchAnimations();\n    }\n  }\n\n  function setSubframeRendering(flag) {\n    subframeEnabled = flag;\n  }\n\n  function loadAnimation(params) {\n    if (standalone === true) {\n      params.animationData = JSON.parse(animationData);\n    }\n\n    return animationManager.loadAnimation(params);\n  }\n\n  function setQuality(value) {\n    if (typeof value === 'string') {\n      switch (value) {\n        case 'high':\n          defaultCurveSegments = 200;\n          break;\n\n        case 'medium':\n          defaultCurveSegments = 50;\n          break;\n\n        case 'low':\n          defaultCurveSegments = 10;\n          break;\n      }\n    } else if (!isNaN(value) && value > 1) {\n      defaultCurveSegments = value;\n    }\n\n    if (defaultCurveSegments >= 50) {\n      roundValues(false);\n    } else {\n      roundValues(true);\n    }\n  }\n\n  function inBrowser() {\n    return typeof navigator !== 'undefined';\n  }\n\n  function installPlugin(type, plugin) {\n    if (type === 'expressions') {\n      expressionsPlugin = plugin;\n    }\n  }\n\n  function getFactory(name) {\n    switch (name) {\n      case \"propertyFactory\":\n        return PropertyFactory;\n\n      case \"shapePropertyFactory\":\n        return ShapePropertyFactory;\n\n      case \"matrix\":\n        return Matrix;\n    }\n  }\n\n  lottiejs.play = animationManager.play;\n  lottiejs.pause = animationManager.pause;\n  lottiejs.setLocationHref = setLocationHref;\n  lottiejs.togglePause = animationManager.togglePause;\n  lottiejs.setSpeed = animationManager.setSpeed;\n  lottiejs.setDirection = animationManager.setDirection;\n  lottiejs.stop = animationManager.stop;\n  lottiejs.searchAnimations = searchAnimations;\n  lottiejs.registerAnimation = animationManager.registerAnimation;\n  lottiejs.loadAnimation = loadAnimation;\n  lottiejs.setSubframeRendering = setSubframeRendering;\n  lottiejs.resize = animationManager.resize; //lottiejs.start = start;\n\n  lottiejs.goToAndStop = animationManager.goToAndStop;\n  lottiejs.destroy = animationManager.destroy;\n  lottiejs.setQuality = setQuality;\n  lottiejs.inBrowser = inBrowser;\n  lottiejs.installPlugin = installPlugin;\n  lottiejs.freeze = animationManager.freeze;\n  lottiejs.unfreeze = animationManager.unfreeze;\n  lottiejs.getRegisteredAnimations = animationManager.getRegisteredAnimations;\n  lottiejs.__getFactory = getFactory;\n  lottiejs.version = '5.5.7';\n\n  function checkReady() {\n    if (document.readyState === \"complete\") {\n      clearInterval(readyStateCheckInterval);\n      searchAnimations();\n    }\n  }\n\n  function getQueryVariable(variable) {\n    var vars = queryString.split('&');\n\n    for (var i = 0; i < vars.length; i++) {\n      var pair = vars[i].split('=');\n\n      if (decodeURIComponent(pair[0]) == variable) {\n        return decodeURIComponent(pair[1]);\n      }\n    }\n  }\n\n  var standalone = '__[STANDALONE]__';\n  var animationData = '__[ANIMATIONDATA]__';\n  var renderer = '';\n\n  if (standalone) {\n    var scripts = document.getElementsByTagName('script');\n    var index = scripts.length - 1;\n    var myScript = scripts[index] || {\n      src: ''\n    };\n    var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\n    renderer = getQueryVariable('renderer');\n  }\n\n  var readyStateCheckInterval = setInterval(checkReady, 100);\n  return lottiejs;\n});"],"sourceRoot":""}